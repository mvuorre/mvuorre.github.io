<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Matti&#39;s homepage</title>
<link>https://vuorre.com/blog.html</link>
<atom:link href="https://vuorre.com/blog.xml" rel="self" type="application/rss+xml"/>
<description>Homepage of Matti Vuorre</description>
<generator>quarto-1.7.20</generator>
<lastBuildDate>Sun, 02 Feb 2025 23:00:00 GMT</lastBuildDate>
<item>
  <title>My peer review principles &amp; practices</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/open-peer-review/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>In this entry, I outline my approach to evaluating scientific outputs based on the principles of transparency and openness.<sup>1</sup> I also include my template responses to review invitations.</p>
<section id="background-and-principles" class="level2">
<h2 class="anchored" data-anchor-id="background-and-principles">Background and principles</h2>
<p>I signed/joined the <a href="https://www.opennessinitiative.org/the-initiative/">PRO Initiative</a> way back when I was a PhD student, but just to remind myself:</p>
<blockquote class="blockquote">
<p>Openness and transparency are core values of science. As a manifestation of those values, a minimum requirement for publication of any scientific results must be the public submission of materials used in generating those results. As reviewers, it is our responsibility to ensure that publications meet certain minimum quality standards.</p>
<p>We therefore agree that as reviewers, starting 1 January 2017, we will not offer comprehensive review for, nor recommend the publication of, any manuscript that does not meet the following minimum requirements. Once such a manuscript has been certified by the authors to meet these minimum requirements, we will proceed with a more comprehensive review of the manuscript.</p>
<p>– <a href="https://www.opennessinitiative.org/the-initiative/">PRO Initiative</a>; <span class="citation" data-cites="moreyPeerReviewersOpenness2016">Morey et al. (2016)</span></p>
</blockquote>
<p>More recently I’ve been entertaining the idea of joining/signing something similar but regarding open assessment—the practice of i. evaluating openly available works and ii. making the evaluations themselves public. For example, I find <a href="https://nikokriegeskorte.org/category/open-review/">Nikolaus Kriegeskorte</a>’s Open Evaluation proposal very agreeable:</p>
<blockquote class="blockquote">
<p>“The current system of scientific publishing provides only journal prestige as an indication of the quality of new papers and relies on a non-transparent and noisy pre-publication peer-review process, which delays publication by many months on average. Here I propose an OE [Open Evaluation] system, in which papers are evaluated post-publication in an ongoing fashion by means of open peer review and rating. […] OA [Open Access] and OE together have the power to revolutionize scientific publishing and usher in a new culture of transparency, constructive criticism, and collaboration.</p>
<p>– <span class="citation" data-cites="kriegeskorteOpenEvaluationVision2012">Kriegeskorte (2012)</span></p>
</blockquote>
<p>The scientific enterprise relies on access to accurate information. One of the ways in which scientists have tried to ensure that information is accurate is the process of <strong>peer-review</strong>, where experts look at your work and evaluate whether it’s up to snuff. While the primary fruits of the peer-review process (the manuscripts) are increasingly openly available, the reviews (and editorial notes) are typically not. This creates a situation whereby consumers of the scientific literature must trust the peer-review process without the being able to evaluate and learn from the evaluations themselves.</p>
<p>Many have suggested that this closed approach to evaluation might be suboptimal <span class="citation" data-cites="kriegeskorteOpenEvaluationVision2012 holcombeScientistsWhatAre2025">(Kriegeskorte 2012; Holcombe 2025)</span>. Moreover, the peer reviews themselves can contain information that could be widely applicable outside the specific review context. Therefore, I am taking the following steps to increase my engagement with open assessment of scientific research:</p>
</section>
<section id="practices" class="level2">
<h2 class="anchored" data-anchor-id="practices">Practices</h2>
<div class="callout callout-style-simple callout-tip">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<ul>
<li>I review (and edit) for outlets that implement open evaluation, such as <a href="https://rr.peercommunityin.org/">PCI: Registered Reports</a></li>
<li>I make my reviews publicly available (e.g.&nbsp;on <a href="https://prereview.org/profiles/0000-0001-5052-066X">PREreview</a>, my blog, etc.)</li>
<li>I adhere to the PRO Initiative’s transparency and openness <a href="https://www.opennessinitiative.org/the-initiative/">guidelines</a></li>
<li>I acknowledge that e.g.&nbsp;privacy reasons may require deviating from these guidelines</li>
</ul>
</div>
</div>
</div>
</section>
<section id="template-responses" class="level2">
<h2 class="anchored" data-anchor-id="template-responses">Template responses</h2>
<p>Here’s some boilerplate text that I use in my responses to review invitations.</p>
<section id="when-no-preprint-exists" class="level3">
<h3 class="anchored" data-anchor-id="when-no-preprint-exists">When no preprint exists</h3>
<div class="callout callout-style-simple callout-warning">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>Thank you for considering me as a reviewer. I was not able to find a publicly available version of this manuscript, and so will tentatively decline your request. If you can point me to the publicly available manuscript, or if the authors make the manuscript publicly available, I would be happy to provide my signed review which I will also post publicly on PREreview (https://prereview.org/profiles/0000-0001-5052-066X) under a CC-BY 4.0 license to ensure it is permanently available and citeable.</p>
<p>This approach aligns with my commitment to rigorous, open, transparent, and citeable peer review of publicly available scientific work. (see e.g.&nbsp;Kriegeskorte, 2012 “Open Evaluation: A Vision for Entirely Transparent Post-Publication Peer Review and Rating for Science”). (If a preprint already exists, I apologize for missing it and would be happy to review it if you can provide a link to it.) Please let me know if you have any questions about this process.</p>
</div>
</div>
</div>
</section>
<section id="when-a-preprint-exists" class="level3">
<h3 class="anchored" data-anchor-id="when-a-preprint-exists">When a preprint exists</h3>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>Thank you for considering me as a reviewer. I am happy to provide my signed review which I will also post publicly on PREreview (https://prereview.org/profiles/0000-0001-5052-066X) under a CC-BY 4.0 license to ensure it is permanently available and citeable.</p>
<p>This approach aligns with my commitment to open science and transparent evaluation (see e.g.&nbsp;Kriegeskorte, 2012 “Open Evaluation: A Vision for Entirely Transparent Post-Publication Peer Review and Rating for Science”). Please let me know if you would prefer to not have me upload a public review, or if have any questions about this process.</p>
</div>
</div>
</div>
</section>
<section id="open-datamaterials" class="level3">
<h3 class="anchored" data-anchor-id="open-datamaterials">Open data/materials</h3>
<p>When data/materials are not shared or transparently cited (see <a href="https://www.opennessinitiative.org/guidelines-for-action-editors-and-reviews/" class="uri">https://www.opennessinitiative.org/guidelines-for-action-editors-and-reviews/</a>) I will communicate to the editor that</p>
<div class="callout callout-style-simple callout-warning">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>I believe strongly in the value of openness and transparency. Please ask the authors on my behalf whether they can certify that they have met the standards of the Peer Reviewers’ Openness Initiative (https://opennessinitiative.org/).</p>
<p>– <a href="https://www.opennessinitiative.org/the-initiative/">PRO Initiative</a>; <span class="citation" data-cites="moreyPeerReviewersOpenness2016">Morey et al. (2016)</span></p>
</div>
</div>
</div>
<p>If a resubmission doesn’t meet the basic PRO requirements, I will communicate that</p>
<div class="callout callout-style-simple callout-important">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>I cannot recommend this paper for publication, as it does not meet the minimum quality requirements for an open scientific manuscript (see https://opennessinitiative.org/). I would be happy to review a revision of the manuscript that corrects this critical oversight.</p>
<p>– <a href="https://www.opennessinitiative.org/the-initiative/">PRO Initiative</a>; <span class="citation" data-cites="moreyPeerReviewersOpenness2016">Morey et al. (2016)</span></p>
</div>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>There is no conclusion. How we conduct, communicate, and evaluate scientific research is and always will be a work in progress. This document simply outlines my modest attempts at keeping up with (what I perceive to be) the latest gold-standard practices in transparent communication and evaluation.</p>
</section>




<div id="quarto-appendix" class="default"><section id="further-reading" class="level2 appendix"><h2 class="anchored quarto-appendix-heading">Further reading</h2><div class="quarto-appendix-contents">

<p>Some valuable background reading on these topics can be found in <span class="citation" data-cites="ahmedFutureAcademicPublishing2023">Ahmed et al. (2023)</span>; <span class="citation" data-cites="aleksicOpenSciencePeer2015">Aleksic et al. (2015)</span>; <span class="citation" data-cites="eisenImplementingPublishThen2020">Eisen et al. (2020)</span>; <span class="citation" data-cites="holcombeScientistsWhatAre2025">Holcombe (2025)</span>; <span class="citation" data-cites="kathawallaEasingOpenScience2021">Kathawalla, Silverstein, and Syed (2021)</span>; <span class="citation" data-cites="kriegeskorteOpenEvaluationVision2012">Kriegeskorte (2012)</span>; <span class="citation" data-cites="moreyPeerReviewersOpenness2016">Morey et al. (2016)</span>; <span class="citation" data-cites="moshontzGuidePostingManaging2021">Moshontz et al. (2021)</span>; <span class="citation" data-cites="severBiomedicalPublishingHistoric2023">Sever (2023)</span>; <span class="citation" data-cites="silversteinGuideSocialScience2024">Silverstein et al. (2024)</span>; <span class="citation" data-cites="syedValuingPreprintsMust2024">Syed (2024)</span>. <span class="citation" data-cites="silversteinGuideSocialScience2024">Silverstein et al. (2024)</span> might be especially relevant when communicating these ideas to editors.</p>
<p>Feature image credit: <a href="https://undraw.co/" class="uri">https://undraw.co/</a>.</p>
</div></section><section id="feedback-comments" class="level2 appendix"><h2 class="anchored quarto-appendix-heading">Feedback &amp; comments</h2><div class="quarto-appendix-contents">

<p>I’d appreciate any feedback on these ideas/practices; feel free to le me know what you think either using the comments field (below) or on Bluesky:</p>
    <bluesky-comments post="at://did:plc:ai4isl2n4j2h7qcqebj7vu2k/app.bsky.feed.post/3lhbko45psk2c" filter-config="{&quot;filterEmptyReplies&quot;:true,&quot;mutePatterns&quot;:[],&quot;muteUsers&quot;:[]}" profile="did:plc:ai4isl2n4j2h7qcqebj7vu2k"></bluesky-comments>
  



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-ahmedFutureAcademicPublishing2023" class="csl-entry">
Ahmed, Abubakari, Aceil Al-Khatib, Yap Boum, Humberto Debat, Alonso Gurmendi Dunkelberg, Lisa Janicke Hinchliffe, Frith Jarrad, et al. 2023. <span>“The Future of Academic Publishing.”</span> <em>Nature Human Behaviour</em>, July, 1–6. <a href="https://doi.org/10.1038/s41562-023-01637-2">https://doi.org/10.1038/s41562-023-01637-2</a>.
</div>
<div id="ref-aleksicOpenSciencePeer2015" class="csl-entry">
Aleksic, Jelena, Adrian Alexa, Teresa K. Attwood, Neil Chue Hong, Martin Dahlö, Robert Davey, Holger Dinkel, et al. 2015. <span>“An <span>Open Science Peer Review Oath</span>.”</span> January 9, 2015. <a href="https://doi.org/10.12688/f1000research.5686.2">https://doi.org/10.12688/f1000research.5686.2</a>.
</div>
<div id="ref-eisenImplementingPublishThen2020" class="csl-entry">
Eisen, Michael B, Anna Akhmanova, Timothy E Behrens, Diane M Harper, Detlef Weigel, and Mone Zaidi. 2020. <span>“Implementing a "Publish, Then Review" Model of Publishing.”</span> <em>eLife</em> 9 (December): e64910. <a href="https://doi.org/10.7554/eLife.64910">https://doi.org/10.7554/eLife.64910</a>.
</div>
<div id="ref-holcombeScientistsWhatAre2025" class="csl-entry">
Holcombe, Alex O. 2025. <span>“Scientists! <span>What</span> Are You Supporting?”</span> Alex Holcombe’s blog. January 31, 2025. <a href="https://alexholcombe.wordpress.com/2025/01/31/scientists-what-are-you-supporting/">https://alexholcombe.wordpress.com/2025/01/31/scientists-what-are-you-supporting/</a>.
</div>
<div id="ref-kathawallaEasingOpenScience2021" class="csl-entry">
Kathawalla, Ummul-Kiram, Priya Silverstein, and Moin Syed. 2021. <span>“Easing <span>Into Open Science</span>: <span>A Guide</span> for <span>Graduate Students</span> and <span>Their Advisors</span>.”</span> Edited by Eunike Wetzel. <em>Collabra: Psychology</em> 7 (1): 18684. <a href="https://doi.org/10.1525/collabra.18684">https://doi.org/10.1525/collabra.18684</a>.
</div>
<div id="ref-kriegeskorteOpenEvaluationVision2012" class="csl-entry">
Kriegeskorte, Nikolaus. 2012. <span>“Open <span>Evaluation</span>: <span>A Vision</span> for <span>Entirely Transparent Post-Publication Peer Review</span> and <span>Rating</span> for <span>Science</span>.”</span> <em>Frontiers in Computational Neuroscience</em> 6. <a href="https://doi.org/10.3389/fncom.2012.00079">https://doi.org/10.3389/fncom.2012.00079</a>.
</div>
<div id="ref-moreyPeerReviewersOpenness2016" class="csl-entry">
Morey, Richard D., Christopher D. Chambers, Peter J. Etchells, Christine R. Harris, Rink Hoekstra, Daniël Lakens, Stephan Lewandowsky, et al. 2016. <span>“The <span>Peer Reviewers Openness Initiative</span>: Incentivizing Open Research Practices Through Peer Review.”</span> <em>Royal Society Open Science</em> 3 (1): 150547. <a href="https://doi.org/10.1098/rsos.150547">https://doi.org/10.1098/rsos.150547</a>.
</div>
<div id="ref-moshontzGuidePostingManaging2021" class="csl-entry">
Moshontz, Hannah, Grace Binion, Haley Walton, Benjamin T. Brown, and Moin Syed. 2021. <span>“A <span>Guide</span> to <span>Posting</span> and <span>Managing Preprints</span>.”</span> <em>Advances in Methods and Practices in Psychological Science</em> 4 (2): 25152459211019948. <a href="https://doi.org/10.1177/25152459211019948">https://doi.org/10.1177/25152459211019948</a>.
</div>
<div id="ref-severBiomedicalPublishingHistoric2023" class="csl-entry">
Sever, Richard. 2023. <span>“Biomedical Publishing: <span>Past</span> Historic, Present Continuous, Future Conditional.”</span> <em>PLOS Biology</em> 21 (10): e3002234. <a href="https://doi.org/10.1371/journal.pbio.3002234">https://doi.org/10.1371/journal.pbio.3002234</a>.
</div>
<div id="ref-silversteinGuideSocialScience2024" class="csl-entry">
Silverstein, Priya, Colin Elman, Amanda Montoya, Barbara McGillivray, Charlotte R. Pennington, Chase H. Harrison, Crystal N. Steltenpohl, et al. 2024. <span>“A Guide for Social Science Journal Editors on Easing into Open Science.”</span> <em>Research Integrity and Peer Review</em> 9 (1): 2. <a href="https://doi.org/10.1186/s41073-023-00141-5">https://doi.org/10.1186/s41073-023-00141-5</a>.
</div>
<div id="ref-syedValuingPreprintsMust2024" class="csl-entry">
Syed, Moin. 2024. <span>“Valuing <span>Preprints Must</span> Be <span>Part</span> of <span>Responsible Research Assessment</span>.”</span> <em>Meta-Psychology</em> 8 (March). <a href="https://doi.org/10.15626/MP.2023.3758">https://doi.org/10.15626/MP.2023.3758</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Obviously I also review the manuscripts on their content, but that is not the topic of this post.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2025,
  author = {Vuorre, Matti},
  title = {My Peer Review Principles \&amp; Practices},
  date = {2025-02-03},
  url = {https://vuorre.com/posts/open-peer-review/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2025" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2025. <span>“My Peer Review Principles &amp;
Practices.”</span> February 3, 2025. <a href="https://vuorre.com/posts/open-peer-review/">https://vuorre.com/posts/open-peer-review/</a>.
</div></div></section></div> ]]></description>
  <category>preprints</category>
  <category>science communication</category>
  <category>peer review</category>
  <category>open review</category>
  <category>open evaluation</category>
  <guid>https://vuorre.com/posts/open-peer-review/</guid>
  <pubDate>Sun, 02 Feb 2025 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/open-peer-review/images/undraw_collaboration_dtwk.png" medium="image" type="image/png" height="133" width="144"/>
</item>
<item>
  <title>Preprints: A Quarto extension and website</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/quarto-preprint-psyarxiv-zero/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>It turns out that preprints are both important and pretty, <a href="https://youtu.be/kRz8-EXlhBo?feature=shared">pretty good</a> <span class="citation" data-cites="ahmedFutureAcademicPublishing2023 moshontzGuidePostingManaging2021 severBiomedicalPublishingHistoric2023 syedValuingPreprintsMust2024">(Ahmed et al. 2023; Moshontz et al. 2021; Sever 2023; Syed 2024)</span>. In fact in the modern scholarly publishing and communication ecosystem, the word “pre<em>print</em>” is a bit of misnomer: “Preprint” can refer to peer-reviewed <span class="citation" data-cites="vuorreThreeObjectionsNovel2022">(e.g. Vuorre, Johannes, and Przybylski 2022)</span> and non-peer-reviewed <span class="citation" data-cites="ballouHowVideoGames2024">(e.g. Ballou et al. 2024)</span> documents that may or may not ever be printed on physical paper. I think many in the community think of them as either (1) non-peer-reviewed documents that communicate scholarly arguments/content, or (2) pre-typeset versions of peer-reviewed (or otherwise “ready for production”) documents about to be published in a journal.</p>
<p>Many related issues remain before the community is ready to follow more mature sciences and embrace preprints as bona-fide scholarly outputs <span class="citation" data-cites="petrichoweNatureTakeWhat2022 syedValuingPreprintsMust2024">(Petrić Howe et al. 2022; Syed 2024)</span>, including discovery (how will I find signal from all this [subjective] noise?), and typesetting (“make papers look not awful”) which we so dearly love. Below, I describe my recent efforts on these two fronts.</p>
<section id="discovery" class="level2">
<h2 class="anchored" data-anchor-id="discovery">Discovery</h2>
<p>There are a handful of very popular preprint services, such as <a href="https://arxiv.org/">arXiv</a>, the OG preprint server for hard sciences, and <a href="https://www.biorxiv.org/">bioRxiv</a> for the biological sciences. <a href="https://osf.io/preprints">OSF Preprints</a> is a “A scholarly commons to connect the entire research cycle”, and home to some two dozen field-specific preprint services such as <a href="https://osf.io/preprints/metaarxiv">MetaArXiv</a> (metascience) and <a href="https://osf.io/preprints/psyarxiv">PsyArXiv</a> (psychology). While all these services offer support for categorizing / tagging submissions, it is still often the case that researchers find it difficult to follow the latest (and greatest?) in their chosen area of interest.</p>
<p>For my areas of interest in the psychological sciences, I try to keep an eye on the Social and Behavioral Sciences <a href="https://osf.io/search?activeFilters=%5B%7B%22propertyVisibleLabel%22%3A%22Subject%22%2C%22propertyPathKey%22%3A%22subject%22%2C%22label%22%3A%22Social%20and%20Behavioral%20Sciences%22%2C%22value%22%3A%22https%3A%2F%2Fapi.osf.io%2Fv2%2Fsubjects%2F584240da54be81056cecac48%22%7D%5D&amp;q=&amp;resourceType=Preprint&amp;sort=-relevance&amp;view_only=">category</a> on OSF Preprints, and a small handful of more focused categories on the PsyArXiv discovery <a href="https://osf.io/preprints/psyarxiv/discover">feed</a>. These allow me to narrow down the feeds by e.g.&nbsp;author, subject, date, etc, and order them by date. So effectively I can have, say, a <a href="https://osf.io/preprints/psyarxiv/discover?activeFilters=%5B%7B%22propertyVisibleLabel%22%3A%22Subject%22%2C%22propertyPathKey%22%3A%22subject%22%2C%22label%22%3A%22Cognitive%20Psychology%22%2C%22value%22%3A%22https%3A%2F%2Fapi.osf.io%2Fv2%2Fsubjects%2F584240da54be81056cecab7e%22%7D%2C%7B%22propertyVisibleLabel%22%3A%22Has%20related%20resource%22%2C%22propertyPathKey%22%3A%22hasPreregisteredAnalysisPlan%22%2C%22label%22%3A%22Preregistered%20analysis%20plan%22%2C%22value%22%3A%22is-present%22%2C%22suggestedFilterOperator%22%3A%22is-present%22%7D%5D&amp;sort=-dateCreated">feed</a> for the latest preprints in Cognitive Psychology that have pre-registered analysis plans and refresh it every morning in my browser. This is very cool.</p>
<section id="psyarxiv-zero" class="level3">
<h3 class="anchored" data-anchor-id="psyarxiv-zero">Psyarxiv Zero</h3>
<p>I wanted to build on this service to allow users to subscribe (e.g.&nbsp;via email or website account) to different custom feeds, and to present them in a fast text-based UI. To date I haven’t had time to make much progress on the first goal, but have finished a prototype for the latter (fast UI) at <a href="https://psyarxiv.vuorre.com" class="uri">https://psyarxiv.vuorre.com</a>. This website, Psyarxiv Zero<sup>1</sup>, at the moment presents a simple feed of recently (users can specify a time-frame) posted or edited preprints from PsyArXiv (Figure&nbsp;1).</p>
<div id="fig-1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/quarto-preprint-psyarxiv-zero/images/psyarxiv-zero-home.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Screenshot of Psyarxiv Zero homepage
</figcaption>
</figure>
</div>
<p>Clicking on any of the titles on the homepage sends the user to a preprint’s page (Figure&nbsp;2). I tried to make this page display the preprints main summaries (links, authors, keywords, and abstract) in an information-dense manner.</p>
<div id="fig-2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/quarto-preprint-psyarxiv-zero/images/psyarxiv-zero-item.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Screenshot of Psyarxiv Zero preprint page
</figcaption>
</figure>
</div>
<p>A lot of work remains to make this alternative UI for PsyArXiv (in the future, OSF Preprints more broadly) more useable and feature-rich. But at the moment I am happy with its performance—which is only limited by the speed of responses from the OSF API—and UI. Take it for a spin and give me your worst feedback / bug reports / feature requests at <a href="https://github.com/mvuorre/psyarxiv-ui" class="uri">https://github.com/mvuorre/psyarxiv-ui</a>.</p>
</section>
</section>
<section id="typesetting" class="level2">
<h2 class="anchored" data-anchor-id="typesetting">Typesetting</h2>
<p>I have a hunch that the typesetting of an article plays some non-ignorable role in readers’ credibility judgments of manuscripts made under time pressure and without other quality indicators. Moreover, reading a well-typeset document is a more pleasant experience than reading a poorly-typeset one. These (non-?)issues related to typesetting are prominent for readers of preprints, because preprints do not have any formatting standards or requirements. That’s probably a good thing, but at least I find reading typeset manuscripts a less onerous task.</p>
<p>I write most of my manuscripts in a computationally reproducible manner—in source documents that combine analysis code, its outputs, and prose—using <a href="https://quarto.org/">Quarto</a>. Quarto already has many <a href="https://quarto.org/docs/extensions/listing-journals.html">extensions</a> for producing (PDF) documents typeset to several journals’ requirements. In my field, the most relevant one is <a href="https://github.com/wjschne/apaquarto">apaquarto</a> that typesets documents to the American Psychological Association guidelines.</p>
<p>However I think many of these journal- or society-specific typesetting systems have a drawback: They require users to commit to a specific journal’s formatting requirements before knowing whether the paper will even end up in that journal; after rejection users will have to change to another format. Using Quarto makes this process easier by promising standard metadata fields for manuscripts, such as the ways in which author information should be formatted. Nevertheless, many format extensions require idiosyncratic settings / metadata, making switching between journal formats not quite the click of a button workflow as promised by Quarto.</p>
<p>Therefore, to add to the existing high-quality, but journal (or society-) specific Quarto formats, I wrote a little Quarto Typst extension called <a href="https://mvuorre.github.io/quarto-preprint/"><code>quarto-prepint</code></a> (<a href="https://mvuorre.github.io/quarto-preprint/index.pdf">PDF</a>). My aim with it is to enable fast and not-too-opinionated typesetting for computationally reproducible preprints written with <a href="https://quarto.org/">Quarto</a>. I paste from quarto-preprint’s manual below:</p>
<section id="quarto-preprint" class="level3">
<h3 class="anchored" data-anchor-id="quarto-preprint">quarto-preprint</h3>
<p><a href="https://quarto.org">Quarto</a> is an “<em>An open-source scientific and technical publishing system</em>”. It is both a markup language that extends <a href="https://pandoc.org/">pandoc</a> <a href="https://quarto.org/docs/authoring/markdown-basics.html">Markdown</a> and a program that renders source code written in Quarto Markdown to a variety of formats including PDF, MS Word, HTML, ePub, and many <a href="https://quarto.org/docs/output-formats/all-formats.html">more</a>. This source code can include prose (this text), maths (<img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B2%7D">), code evaluation (<code>{r} sqrt(2)</code> renders to 1.414), scholarly <a href="https://quarto.org/docs/authoring/front-matter.html">metadata</a>, and more. In short, Quarto is a language and engine for reproducible manuscripts.</p>
<p>The look and feel of the output documents can be controlled within the source document (e.g.&nbsp;<a href="https://quarto.org/docs/output-formats/html-basics.html">here</a>), or by using a Quarto <a href="https://quarto.org/docs/extensions/">extension</a>. <a href="https://github.com/mvuorre/quarto-preprint"><code>quarto-preprint</code></a> is such an extension, designed to produce neat PDF documents quickly with minimum fuss. It is called “preprint” because it provides a basic layout in a Quarto-standards compliant package, allowing users to easily switch to a journal-specific <a href="https://quarto.org/docs/extensions/listing-journals.html">extension</a> if they so choose. It also produces basic Word .docx documents to facilitate collaboration and/or further WYSIWYG editing.</p>
<p>Why might one use the <code>preprint</code> extension? One, it renders documents from Quarto markdown to PDF using <a href="https://typst.app/docs">Typst</a><sup>2</sup>, and therefore is very fast in doing so. Typst doesn’t require complicated TeX installations and so is practically easier to use than other PDF-producing methods. Typst also simplifies the development and codebase of <code>preprint</code>, thus making edits, bug fixes, forks, and new features easier. Second, <code>preprint</code> aims to be 100% Quarto standards compliant: Users don’t need to adapt their source code in any way when they switch to other formats, such as other journal extensions, or completely different output formats such as HTML<sup>3</sup>.</p>
<p>If this sounds interesting, read more <a href="https://github.com/mvuorre/quarto-preprint">here</a>.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>I encourage scholars to think more proactively about the roles that preprints play in the modern scholarly communication landscape <span class="citation" data-cites="severBiomedicalPublishingHistoric2023 syedValuingPreprintsMust2024 moshontzGuidePostingManaging2021 ahmedFutureAcademicPublishing2023">(Sever 2023; Syed 2024; Moshontz et al. 2021; Ahmed et al. 2023)</span>. To this end (and to learn web and Quarto extension development <span class="emoji" data-emoji="smile">😄</span>), I put together two (early-stage) resources for preprint authors and readers. If you try them out, feel free to let me know what’s wrong with them!</p>



</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-ahmedFutureAcademicPublishing2023" class="csl-entry">
Ahmed, Abubakari, Aceil Al-Khatib, Yap Boum, Humberto Debat, Alonso Gurmendi Dunkelberg, Lisa Janicke Hinchliffe, Frith Jarrad, et al. 2023. <span>“The Future of Academic Publishing.”</span> <em>Nature Human Behaviour</em>, July, 1–6. <a href="https://doi.org/10.1038/s41562-023-01637-2">https://doi.org/10.1038/s41562-023-01637-2</a>.
</div>
<div id="ref-ballouHowVideoGames2024" class="csl-entry">
Ballou, Nick, Thomas Hakman, Matti Vuorre, Kristoffer Magnusson, and Andrew K. Przybylski. 2024. <span>“How Do Video Games Affect Mental Health? <span>A</span> Narrative Review of 13 Proposed Mechanisms.”</span> OSF. <a href="https://doi.org/10.31234/osf.io/q2kxg">https://doi.org/10.31234/osf.io/q2kxg</a>.
</div>
<div id="ref-moshontzGuidePostingManaging2021" class="csl-entry">
Moshontz, Hannah, Grace Binion, Haley Walton, Benjamin T. Brown, and Moin Syed. 2021. <span>“A <span>Guide</span> to <span>Posting</span> and <span>Managing Preprints</span>.”</span> <em>Advances in Methods and Practices in Psychological Science</em> 4 (2): 25152459211019948. <a href="https://doi.org/10.1177/25152459211019948">https://doi.org/10.1177/25152459211019948</a>.
</div>
<div id="ref-petrichoweNatureTakeWhat2022" class="csl-entry">
Petrić Howe, Nick, Elizabeth Gibney, Ehsan Masood, and Zoltan Fehervari. 2022. <span>“Nature’s <span>Take</span>: What’s Next for the Preprint Revolution.”</span> <em>Nature</em>, August. <a href="https://doi.org/10.1038/d41586-022-01985-5">https://doi.org/10.1038/d41586-022-01985-5</a>.
</div>
<div id="ref-severBiomedicalPublishingHistoric2023" class="csl-entry">
Sever, Richard. 2023. <span>“Biomedical Publishing: <span>Past</span> Historic, Present Continuous, Future Conditional.”</span> <em>PLOS Biology</em> 21 (10): e3002234. <a href="https://doi.org/10.1371/journal.pbio.3002234">https://doi.org/10.1371/journal.pbio.3002234</a>.
</div>
<div id="ref-syedValuingPreprintsMust2024" class="csl-entry">
Syed, Moin. 2024. <span>“Valuing <span>Preprints Must</span> Be <span>Part</span> of <span>Responsible Research Assessment</span>.”</span> <em>Meta-Psychology</em> 8 (March). <a href="https://doi.org/10.15626/MP.2023.3758">https://doi.org/10.15626/MP.2023.3758</a>.
</div>
<div id="ref-vuorreThreeObjectionsNovel2022" class="csl-entry">
Vuorre, Matti, Niklas Johannes, and Andrew K. Przybylski. 2022. <span>“Three Objections to a Novel Paradigm in Social Media Effects Research.”</span> PsyArXiv. <a href="https://doi.org/10.31234/osf.io/dpuya">https://doi.org/10.31234/osf.io/dpuya</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Yes I quite like the look and feel of Hacker News and tried to copy much of it.↩︎</p></li>
<li id="fn2"><p>“<em><a href="https://typst.app/docs">Typst</a> is a new markup-based typesetting system for the sciences. It is designed to be an alternative both to advanced tools like LaTeX and simpler tools like Word and Google Docs.</em>”↩︎</p></li>
<li id="fn3"><p>There are a few small features that likely won’t show up in other formats, such as <code>branding</code> (see below), but their inclusion or exclusion in the metadata doesn’t impact how sources are rendered to other formats.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2024,
  author = {Vuorre, Matti},
  title = {Preprints: {A} {Quarto} Extension and Website},
  date = {2024-06-20},
  url = {https://vuorre.com/posts/quarto-preprint-psyarxiv-zero/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2024" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2024. <span>“Preprints: A Quarto Extension and
Website.”</span> June 20, 2024. <a href="https://vuorre.com/posts/quarto-preprint-psyarxiv-zero/">https://vuorre.com/posts/quarto-preprint-psyarxiv-zero/</a>.
</div></div></section></div> ]]></description>
  <category>psychology</category>
  <category>preprints</category>
  <category>science communication</category>
  <guid>https://vuorre.com/posts/quarto-preprint-psyarxiv-zero/</guid>
  <pubDate>Wed, 19 Jun 2024 22:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/quarto-preprint-psyarxiv-zero/images/undraw_Reviewed_docs_re_9lmr.png" medium="image" type="image/png" height="80" width="144"/>
</item>
<item>
  <title>A simple statistics syllabus</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/statistics-syllabus/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>Here are some recommended writings on statistics and data analysis for the social and behavioral sciences. This blog entry is probably most useful for students, but I also list some more advanced books that might be of interest to others.</p>
<p><em>tl;dr</em>:</p>
<ul>
<li><a href="https://avehtari.github.io/ROS-Examples"><em>Regression and other stories</em></a> <span class="citation" data-cites="gelmanRegressionOtherStories2020">(Gelman, Hill, and Vehtari 2020)</span></li>
<li><a href="https://openintro-ims.netlify.app/"><em>Introduction to Modern Statistics</em></a> <span class="citation" data-cites="cetinkaya-rundelIntroductionModernStatistics2021">(Çetinkaya-Rundel and Hardin 2021)</span></li>
<li><a href="https://xcelab.net/rm/statistical-rethinking/"><em>Statistical rethinking: a Bayesian course with examples in R and Stan</em></a> <span class="citation" data-cites="mcelreathStatisticalRethinkingBayesian2020">(McElreath 2020)</span></li>
<li><a href="https://r4ds.hadley.nz/"><em>R for Data Science</em></a> <span class="citation" data-cites="wickhamDataScienceImport2016">(Wickham, Çetinkaya-Rundel, and Grolemund 2016)</span></li>
</ul>
<section id="the-basics-regression" class="level2">
<h2 class="anchored" data-anchor-id="the-basics-regression">The basics: Regression</h2>
<p>If there is one single concept in applied statistics worth learning, it is that of <em>regression</em>. You’ve probably learned statistics in the context of p-values from hypothesis tests, ANOVAs, t-tests and stuff like that, but the underlying and unifying concept is <em>regression</em>: Modelling (a set of) outcome variables on (a set of) predictor variables. ANOVA is a regression model… Assuming that your data is normally distributed can be a regression model… So I’d advise you to just take a moment and learn what this thing called regression is and what it could do for you.</p>
<p>To get started, I recommend taking a look at this book called <a href="https://avehtari.github.io/ROS-Examples"><em>Regression and other stories</em></a> <span class="citation" data-cites="gelmanRegressionOtherStories2020">(Gelman, Hill, and Vehtari 2020)</span>. The book is freely available on the authors’ website (<a href="https://avehtari.github.io/ROS-Examples/" class="uri">https://avehtari.github.io/ROS-Examples/</a>), and is extremely accessible:</p>
<blockquote class="blockquote">
<p>Many textbooks on regression focus on theory and the simplest of examples. Real statistical problems, however, are complex and subtle. This is not a book about the theory of regression. It is a book about how to use regression to solve real problems of comparison, estimation, prediction, and causal inference. It focuses on practical issues such as sample size and missing data and a wide range of goals and techniques. It jumps right in to methods and computer code you can use fresh out of the box.</p>
</blockquote>
<p>The quote-unquote downside of this book is that it is a bit heterodox in its approach to statistical inference. I believe this to be an entirely good thing, but the orthodox approach focusing on test statistics, p-values, and hypothesis testing gets a bit less attention in this book than you’d find in those orthodox introductions. In fact this is a reason for recommending this book over alternatives, but it is useful to know this nevertheless.</p>
<p>While we’re at the topic of unorthodox approaches to statistical inference, I’ll mention another book that personally influenced my thinking a lot: <a href="https://sites.google.com/site/doingbayesiandataanalysis/"><em>Doing Bayesian Data Analysis</em></a> by John Kruschke <span class="citation" data-cites="kruschkeDoingBayesianData2014">(Kruschke 2014)</span>. This book includes code examples for conducting bayesian analyses for common scenarios in the behavioral sciences. While much appreciated at the time, modern software options have outpaced those in the book. Nevertheless it is a very well (and whimsically) written book full of educational wisdom, such as “The steps of bayesian data analysis”:</p>
<blockquote class="blockquote">
<ol type="1">
<li>Identify the data relevant to the research questions. What are the measurement scales of the data? Which data variables are to be predicted, and which data variables are supposed to act as predictors?</li>
<li>Define a descriptive model for the relevant data. The mathematical form and its parameters should be meaningful and appropriate to the theoretical purposes of the analysis.</li>
<li>Specify a prior distribution on the parameters. The prior must pass muster with the audience of the analysis, such as skeptical scientists.</li>
<li>Use Bayesian inference to re-allocate credibility across parameter values. Interpret the posterior distribution with respect to theoretically meaningful issues (assuming that the model is a reasonable description of the data; see next step).</li>
<li>Check that the posterior predictions mimic the data with reasonable accuracy (i.e., conduct a “posterior predictive check”). If not, then consider a different descriptive model.</li>
</ol>
</blockquote>
<p>Two other books about regression come to mind: <a href="https://www.john-fox.ca/AppliedRegression/index.html"><em>Applied Regression Analysis and Generalized Linear Models</em></a> <span class="citation" data-cites="foxAppliedRegressionAnalysis2015">(Fox 2015)</span> and <a href="http://irep.ntu.ac.uk/id/eprint/16540/"><em>Serious stats: a guide to advanced statistics for the behavioral sciences</em></a> <span class="citation" data-cites="baguleySeriousStatsGuide2012">(Baguley 2012)</span>. Both are very clear in their treatment of foundational concepts and include just the right amount (in my view) of mathematics. The Fox book is used a lot as a textbook for applied stats courses and I quite like it.</p>
</section>
<section id="statistical-rethinking" class="level2">
<h2 class="anchored" data-anchor-id="statistical-rethinking">Statistical rethinking</h2>
<p>This book needs its own heading here, it is just that good.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/statistics-syllabus/images/rethinking-fig-1-1.png" class="img-fluid figure-img" alt="Example decision tree, or flowchart, for selecting an appropri- ate statistical procedure. Beginning at the top, the user answers a series of questions about measurement and intent, arriving eventually at the name of a procedure. Many such decision trees are possible."></p>
<figcaption>Figure 1.1 from “Statistical rethinking”</figcaption>
</figure>
</div>
<p>This book, <a href="https://xcelab.net/rm/statistical-rethinking/"><em>Statistical rethinking: a Bayesian course with examples in R and Stan</em></a> <span class="citation" data-cites="mcelreathStatisticalRethinkingBayesian2020">(McElreath 2020)</span> essentially <em>argues against</em> a view of statistics visualized as a decision-tree like process above. Instead, it makes the–again–heterodox suggestion that researchers should instead <em>critically think</em> about their research problem and design appropriate models that mathematically represent those problems. It also serves as an excellent textbook on bayesian statistics, which is another term for using the rules of probability to make inferences from data. This is a very good candidate for a second textbook on statistics, once you’ve confirmed with a first book that you indeed ever want to read another book on statistics again!</p>
<p>The author of this book also teaches an amazing course on statistics, and the lectures are all available on YouTube: <a href="https://www.youtube.com/playlist?list=PLDcUM9US4XdPz-KxHM4XHt7uUVGWWVSus" class="uri">https://www.youtube.com/playlist?list=PLDcUM9US4XdPz-KxHM4XHt7uUVGWWVSus</a>. Highly recommended.</p>
<p>On that topic–Bayesian statistics–the current “bible” is the third edition of <a href="http://www.stat.columbia.edu/~gelman/book/"><em>Bayesian Data Analysis</em></a> by Gelman and colleagues <span class="citation" data-cites="gelmanBayesianDataAnalysis2013">(Gelman et al. 2013)</span>. It is also freely available as a PDF on the book’s website: <a href="http://www.stat.columbia.edu/~gelman/book/" class="uri">http://www.stat.columbia.edu/~gelman/book/</a>.</p>
</section>
<section id="bonus-round-actually-doing-statistics" class="level2">
<h2 class="anchored" data-anchor-id="bonus-round-actually-doing-statistics">Bonus round: Actually doing statistics</h2>
<p>For this, you will need to make a computer do stuff. There’s very little to say about this because the 2nd edition of <a href="https://r4ds.hadley.nz/"><em>R for Data Science</em></a> <span class="citation" data-cites="wickhamDataScienceImport2016">(Wickham, Çetinkaya-Rundel, and Grolemund 2016)</span> just is that good. The (online; free) book takes you by the hand, helps you open up a software suite, and then do <em>magic</em> with it.</p>
</section>
<section id="bonus-round-2-multilevel-regression" class="level2">
<h2 class="anchored" data-anchor-id="bonus-round-2-multilevel-regression">Bonus round 2: Multilevel regression</h2>
<p>Generalized Linear <em>Mixed</em> Model. Hierarchical models. Hierarchical <em>Bayesian</em> Models. Multilevel models. Random effect models. Models with models in them. It’s just what we do and let’s call it multilevel regression. For most data analysis problems you will likely want to apply some variation of this theme. Actually the book <em>Statistical rethinking</em> above is a great read on this topic, but I thought I would mention <a href="http://www.stat.columbia.edu/~gelman/arm/"><em>Data Analysis Using Regression and Multilevel/Hierarchical Models</em></a> <span class="citation" data-cites="gelmanDataAnalysisUsing2007">(Gelman and Hill 2007)</span> because it is a damn good book. The only reason I’m leaving it here and not as the second book on this page is that it is somewhat outdated regarding some of the software presented. The upshot is that a completely revised version of this book should be out sometime soon. Once that happens, this will be up there right after <em>Regression and other stories</em>.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-baguleySeriousStatsGuide2012" class="csl-entry">
Baguley, T. 2012. <em>Serious Stats: A Guide to Advanced Statistics for the Behavioral Sciences</em>. <span>Basingstoke</span>: <span>Palgrave Macmillan</span>. <a href="http://irep.ntu.ac.uk/id/eprint/16540/">http://irep.ntu.ac.uk/id/eprint/16540/</a>.
</div>
<div id="ref-cetinkaya-rundelIntroductionModernStatistics2021" class="csl-entry">
Çetinkaya-Rundel, Mine, and Johanna Hardin. 2021. <em>Introduction to <span>Modern Statistics</span></em>. OpenIntro. <a href="https://openintro-ims.netlify.app/">https://openintro-ims.netlify.app/</a>.
</div>
<div id="ref-foxAppliedRegressionAnalysis2015" class="csl-entry">
Fox, John. 2015. <em>Applied <span>Regression Analysis</span> and <span>Generalized Linear Models</span></em>. <span>SAGE Publications</span>. <a href="https://books.google.com?id=cjB3BwAAQBAJ">https://books.google.com?id=cjB3BwAAQBAJ</a>.
</div>
<div id="ref-gelmanBayesianDataAnalysis2013" class="csl-entry">
Gelman, Andrew, John B. Carlin, Hal S. Stern, David B. Dunson, Aki Vehtari, and Donald B. Rubin. 2013. <em>Bayesian <span>Data Analysis</span>, <span>Third Edition</span></em>. <span>Boca Raton</span>: <span>Chapman and Hall/CRC</span>. <a href="http://www.stat.columbia.edu/~gelman/book/">http://www.stat.columbia.edu/~gelman/book/</a>.
</div>
<div id="ref-gelmanDataAnalysisUsing2007" class="csl-entry">
Gelman, Andrew, and Jennifer Hill. 2007. <em>Data <span>Analysis Using Regression</span> and <span>Multilevel</span>/<span>Hierarchical Models</span></em>. <span>New York, NY</span>: <span>Cambridge University Press</span>. <a href="http://www.stat.columbia.edu/~gelman/arm/">http://www.stat.columbia.edu/~gelman/arm/</a>.
</div>
<div id="ref-gelmanRegressionOtherStories2020" class="csl-entry">
Gelman, Andrew, Jennifer Hill, and Aki Vehtari. 2020. <em>Regression and <span>Other Stories</span></em>. <span>Cambridge University Press</span>. <a href="https://avehtari.github.io/ROS-Examples/">https://avehtari.github.io/ROS-Examples/</a>.
</div>
<div id="ref-kruschkeDoingBayesianData2014" class="csl-entry">
Kruschke, John K. 2014. <em>Doing <span>Bayesian Data Analysis</span>: <span>A Tutorial Introduction</span> with <span>R</span></em>. 2nd Edition. <span>Burlington, MA</span>: <span>Academic Press</span>. <a href="https://sites.google.com/site/doingbayesiandataanalysis/">https://sites.google.com/site/doingbayesiandataanalysis/</a>.
</div>
<div id="ref-mcelreathStatisticalRethinkingBayesian2020" class="csl-entry">
McElreath, Richard. 2020. <em>Statistical Rethinking: A <span>Bayesian</span> Course with Examples in <span>R</span> and <span>Stan</span></em>. 2nd ed. <span>CRC</span> Texts in Statistical Science. <span>Boca Raton</span>: <span>Taylor and Francis, CRC Press</span>. <a href="https://xcelab.net/rm/statistical-rethinking/">https://xcelab.net/rm/statistical-rethinking/</a>.
</div>
<div id="ref-wickhamDataScienceImport2016" class="csl-entry">
Wickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2016. <em>R for <span>Data Science</span>: <span>Import</span>, <span>Tidy</span>, <span>Transform</span>, <span>Visualize</span>, and <span>Model Data</span></em>. <span>"O’Reilly Media, Inc."</span>. <a href="https://r4ds.hadley.nz/">https://r4ds.hadley.nz/</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2024,
  author = {Vuorre, Matti},
  title = {A Simple Statistics Syllabus},
  date = {2024-01-19},
  url = {https://vuorre.com/posts/statistics-syllabus/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2024" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2024. <span>“A Simple Statistics Syllabus.”</span>
January 19, 2024. <a href="https://vuorre.com/posts/statistics-syllabus/">https://vuorre.com/posts/statistics-syllabus/</a>.
</div></div></section></div> ]]></description>
  <category>statistics</category>
  <category>education</category>
  <guid>https://vuorre.com/posts/statistics-syllabus/</guid>
  <pubDate>Thu, 18 Jan 2024 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/statistics-syllabus/images/edge2edge-media-uKlneQRwaxY-unsplash.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Yet another data request email</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/yet-another-data-request-email/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Latest update: I tried emailing some authors and tried submitting another enquiry through the system but never heard back from anyone. Sigh. I don’t have time for this shit.</p>
</div>
</div>
<p>In “Associations Between Infant Screen Use, Electroencephalography Markers, and Cognitive Outcomes” <span class="citation" data-cites="lawAssociationsInfantScreen2023">Law et al. (2023)</span> write that “Screen time at age 12 months contributed to multiple 9-year attention and executive functioning measures (<img src="https://latex.codecogs.com/png.latex?%5Ceta%5E2">, 0.03-0.16; Cohen d, 0.35-0.87)”. This is potentially huge news, for at least two reasons:</p>
<ol type="1">
<li><p>There isn’t very much literature on such longitudinal within-person associations between “screen time” <span class="citation" data-cites="k.kayeConceptualMethodologicalMayhem2020">(K. Kaye et al. 2020)</span> and psychosocial outcomes in a time frame spanning infancy to childhood. Studying this association is very important in trying to understand how digital technologies in extremely sensitive developmental periods might affect later life outcomes. So this study potentially provides some really important evidence on the effects of “screen time”.</p></li>
<li><p>The effects are <em>huge</em>. <img src="https://latex.codecogs.com/png.latex?%5Ceta%5E2"> is a metric assessing the proportion of variability in the outcome that is explained by the predictor. Here, the finding is that infants’ screen time can explain up to 16% of variability in cognitive functioning at age 9.</p></li>
</ol>
<p>Naturally, scientists studying the effects of digital technologies should be very interested in these findings. As the authors write (emphasis mine):</p>
<blockquote class="blockquote">
<p>In short, increased screen time in infancy is associated with impairments in cognitive processes critical for health, academic achievement, and future work success. However, the findings from this cohort study do not prove causation. Screen time likely represents a measurable contextual characteristic of a family or a proxy for the quality of parent-child interaction. <em>Replication of this study’s findings</em> and randomized clinical trials are warranted.</p>
</blockquote>
<p>As a first step, I wanted to see and reproduce the computations leading to those effect size estimates. Basic reproduction of analyses is often considered an essential first step in replicating a study. Then, I wanted to extend their analysis by examining the impact of potential measurement error in the infant screen time measure (such self- [or here, parent-] reports are known to be somewhat inaccurate <span class="citation" data-cites="parrySystematicReviewMetaanalysis2021">(Parry et al. 2021)</span>) on the associations.</p>
<p>I went ahead to the article’s website, and looked at Supplement 2. Data sharing statement. It states:</p>
<blockquote class="blockquote">
<p>Data available: No<br>
Explanation for why data not available: This cohort study requires ethics approval for each specific research question before data may be shared. The data used in this cohort are described in https://gustodatavault.sg/. The data will be made available to researchers who provide a methodologically sound proposal.</p>
</blockquote>
<p>That’s great. I understand that these data are potentially very sensitive, and the people curating these data are right in protecting their participants’ privacy. It is also great to see that the data will be shared with serious researchers. I have a clear and methodologically sound proposal for analysing these data:</p>
<blockquote class="blockquote">
<p>Importance: Law et al.&nbsp;(2023) report potentially very consequential results regarding associations between infant screen time and later psychosocial functioning. It is imperative, then, to reproduce the analyses and examine their underlying assumptions.<br>
Objective: Reproduce the analyses in Law et al.&nbsp;(2023) and examine the impact of assuming no measurement error in the screen time measure at infancy on resulting associations between screen time and psychological functioning at age 9.<br>
Methodology: Statistical analyses as reported in Law et al.&nbsp;(2023), with a sensitivity analysis with varying levels of measurement error in age 12 months “screen time”.<br>
Proposed outcome: A pre-print deposited on https://psyarxiv.com/ reporting the results and implications of a. the reproduction analysis and b. the sensitivity analysis.</p>
</blockquote>
<p>I clicked through to the data website (<a href="https://gustodatavault.sg/about/request-for-data" class="uri">https://gustodatavault.sg/about/request-for-data</a>), and created an account. I am now waiting to have my account approved so that I can proceed with submitting my data request. Stay tuned!</p>




<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-k.kayeConceptualMethodologicalMayhem2020" class="csl-entry">
K. Kaye, Linda, Amy Orben, David A. Ellis, Simon C. Hunter, and Stephen Houghton. 2020. <span>“The <span>Conceptual</span> and <span>Methodological Mayhem</span> of <span>‘<span>Screen Time</span>’</span>.”</span> <em>International Journal of Environmental Research and Public Health</em> 17 (10, 10): 3661. <a href="https://doi.org/10.3390/ijerph17103661">https://doi.org/10.3390/ijerph17103661</a>.
</div>
<div id="ref-lawAssociationsInfantScreen2023" class="csl-entry">
Law, Evelyn C., Meredith X. Han, Zhuoyuan Lai, Shuping Lim, Zi Yan Ong, Valerie Ng, Laurel J. Gabard-Durnam, et al. 2023. <span>“Associations <span>Between Infant Screen Use</span>, <span>Electroencephalography Markers</span>, and <span>Cognitive Outcomes</span>.”</span> <em>JAMA Pediatrics</em> 177 (3): 311–18. <a href="https://doi.org/10.1001/jamapediatrics.2022.5674">https://doi.org/10.1001/jamapediatrics.2022.5674</a>.
</div>
<div id="ref-parrySystematicReviewMetaanalysis2021" class="csl-entry">
Parry, Douglas A., Brittany I. Davidson, Craig J. R. Sewall, Jacob T. Fisher, Hannah Mieczkowski, and Daniel S. Quintana. 2021. <span>“A Systematic Review and Meta-Analysis of Discrepancies Between Logged and Self-Reported Digital Media Use.”</span> <em>Nature Human Behaviour</em>, May, 1–13. <a href="https://doi.org/10.1038/s41562-021-01117-5">https://doi.org/10.1038/s41562-021-01117-5</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2023,
  author = {Vuorre, Matti},
  title = {Yet Another Data Request Email},
  date = {2023-03-24},
  url = {https://vuorre.com/posts/yet-another-data-request-email/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2023" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2023. <span>“Yet Another Data Request Email.”</span>
March 24, 2023. <a href="https://vuorre.com/posts/yet-another-data-request-email/">https://vuorre.com/posts/yet-another-data-request-email/</a>.
</div></div></section></div> ]]></description>
  <category>psychology</category>
  <guid>https://vuorre.com/posts/yet-another-data-request-email/</guid>
  <pubDate>Thu, 23 Mar 2023 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/yet-another-data-request-email/images/orben-przybylski-2019-fig3.png" medium="image" type="image/png" height="113" width="144"/>
</item>
<item>
  <title>Latent mean centering with brms</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/latent-mean-centering/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(knitr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggthemes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(posterior)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plotting theme</span></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(</span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_few</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb1-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), </span>
<span id="cb1-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb1-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>, </span>
<span id="cb1-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.justification =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span></span>
<span id="cb1-18">  )</span>
<span id="cb1-19">)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download and uncompress McNeish and Hamaker materials if not yet done</span></span>
<span id="cb1-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache"</span>)</span>
<span id="cb1-23">path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"materials/materials.zip"</span></span>
<span id="cb1-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(path)) {</span>
<span id="cb1-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"materials"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showWarnings =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(</span>
<span id="cb1-27">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://files.osf.io/v1/resources/wuprx/providers/osfstorage/5bfc839601593f0016774697/?zip="</span>,</span>
<span id="cb1-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">destfile =</span> path</span>
<span id="cb1-29">  )</span>
<span id="cb1-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unzip</span>(path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exdir =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"materials"</span>)</span>
<span id="cb1-31">}</span></code></pre></div>
</details>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Within-cluster centering, or <em>person-mean centering</em> (psychologists’ clusters are typically persons), is an easy data processing step that allows separating within-person from between-person associations. For example, consider the example data of 100 people’s ratings of urge to smoke and depression, collected over 50 days with one response per day <span class="citation" data-cites="mcneishPrimerTwolevelDynamic2020">(McNeish and Hamaker 2020)</span> <sup>1</sup>, shown in Table&nbsp;1 and Figure&nbsp;1.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(</span>
<span id="cb2-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"materials/Data/Two-Level Data.csv"</span>, </span>
<span id="cb2-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"urge"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dep"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"js"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>)</span>
<span id="cb2-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>hs, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>js) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relocate</span>(person, time, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">person =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(person),</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(time)</span>
<span id="cb2-10">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">u_lag =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(urge),</span>
<span id="cb2-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dep_lag =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(dep),</span>
<span id="cb2-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> person</span>
<span id="cb2-15">  )</span></code></pre></div>
</details>
</div>
<div class="cell">
<div id="tbl-data" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Example longitudinal data (McNeish &amp; Hamaker, 2020); first three rows from two random participants.
</figcaption>
<div aria-describedby="tbl-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="do-not-create-environment cell caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">person</th>
<th style="text-align: right;">time</th>
<th style="text-align: right;">urge</th>
<th style="text-align: right;">dep</th>
<th style="text-align: right;">u_lag</th>
<th style="text-align: right;">dep_lag</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0.34</td>
<td style="text-align: right;">0.43</td>
<td style="text-align: right;">NA</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">-0.48</td>
<td style="text-align: right;">-0.68</td>
<td style="text-align: right;">0.34</td>
<td style="text-align: right;">0.43</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">-4.44</td>
<td style="text-align: right;">-1.49</td>
<td style="text-align: right;">-0.48</td>
<td style="text-align: right;">-0.68</td>
</tr>
<tr class="even">
<td style="text-align: left;">2</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1.65</td>
<td style="text-align: right;">0.68</td>
<td style="text-align: right;">NA</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: left;">2</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0.31</td>
<td style="text-align: right;">1.49</td>
<td style="text-align: right;">1.65</td>
<td style="text-align: right;">0.68</td>
</tr>
<tr class="even">
<td style="text-align: left;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0.46</td>
<td style="text-align: right;">0.03</td>
<td style="text-align: right;">0.31</td>
<td style="text-align: right;">1.49</td>
</tr>
</tbody>
</table>
</div>
</div>
</figure>
</div>
</div>
<p>Table&nbsp;1 shows the original data values. Those could then be transformed to person-means and person-mean centered deviations with simple data processing. However, the person-mean is an unknown quantity, and centering on the observed value rather than an estimate of the true “latent” quantity can be problematic. Specifically, observed mean centering leads to Nickell’s (negative bias in autoregressive effects) and Lüdtke’s (bias in other time-varying effects) biases <span class="citation" data-cites="mcneishPrimerTwolevelDynamic2020">(McNeish and Hamaker 2020, 617–18)</span>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>)</span>
<span id="cb3-2">pids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb3-3"></span>
<span id="cb3-4">dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(person <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(urge, dep)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Time =</span> time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Depression"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Urge"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Time, value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller =</span> label_both)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-data" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/latent-mean-centering/index_files/figure-html/fig-data-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Four persons’ depression and urge to smoke over time
</figcaption>
</figure>
</div>
</div>
</div>
<p>So, what to do? McNeish and Hamaker <span class="citation" data-cites="mcneishPrimerTwolevelDynamic2020">(2020)</span> and others discuss latent mean centering, which accounts for uncertainty in the person-means appropriately, and thus debiases the estimated coefficients. Latent mean centering is done inside the model, and means treating the means as estimated parameters. However, I have only been able to find examples that do this latent mean centering in MPlus <span class="citation" data-cites="mcneishPrimerTwolevelDynamic2020">(McNeish and Hamaker 2020)</span> and Stan (<a href="https://experienced-sampler.netlify.app/post/stan-hierarchical-ar/" class="uri">https://experienced-sampler.netlify.app/post/stan-hierarchical-ar/</a>). My goal here is to show how latent mean centering can be done in the <a href="https://mc-stan.org">Stan</a> front-end R package <a href="https://paul-buerkner.github.io/brms/">brms</a>.</p>
</section>
<section id="univariate-latent-means-model" class="level2">
<h2 class="anchored" data-anchor-id="univariate-latent-means-model">Univariate latent means model</h2>
<p>We begin with a univariate model of the urge to smoke. This model examines the degree of autocorrelation in the urge to smoke and how it varies between people. For individual <em>i</em> in 1…I=100 and time point <em>t</em> in 1…T=50, we model <code>urge</code> (U) as normally distributed. We model the mean on person-specific intercepts <img src="https://latex.codecogs.com/png.latex?%5Calpha_i"> and slopes <img src="https://latex.codecogs.com/png.latex?%5Cphi_i"> of that person’s within-person centered <code>urge</code> at a previous time point (<img src="https://latex.codecogs.com/png.latex?U%5Ec_%7Bit-1%7D">). I model person-specific deviations as multivariate normal but do not model correlations between the intercepts and slopes for consistency with <span class="citation" data-cites="mcneishPrimerTwolevelDynamic2020">(McNeish and Hamaker 2020)</span>.</p>
<p><span id="eq-1"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AU_%7Bit%7D%20&amp;%5Csim%20N(%5Calpha_i%20+%20%5Cphi_i%20U%5Ec_%7Bit-1%7D,%20%5Csigma%5E2),%20%5C%5C%0AU%5E%7Bc%7D_%7Bit-1%7D%20&amp;=%20U%5E%7B%5Ctext%7Braw%7D%7D_%7Bit-1%7D%20-%20%5Calpha_i,%20%5C%5C%0A%5Calpha_i%20&amp;=%20%5Cgamma_%7B0%7D%20+%20u_%7B0i%7D,%20%5C%5C%0A%5Cphi_i%20&amp;=%20%5Cgamma_%7B1%7D%20+%20u_%7B1i%7D,%20%5C%5C%0A%5Cbegin%7Bbmatrix%7D%0A%20%20u_%7B0i%7D%20%5C%5C%20u_%7B1i%7D%0A%5Cend%7Bbmatrix%7D%20&amp;%5Csim%20MVN%5Cleft(%0A%20%20%5Cbegin%7Bbmatrix%7D%0A%20%20%20%200%20%5C%5C%200%0A%20%20%5Cend%7Bbmatrix%7D,%0A%20%20%5Cbegin%7Bpmatrix%7D%0A%20%20%5Ctau_%5Calpha%20%5C%20&amp;%20%5C%5C%200%20%5C%20&amp;%5Ctau_%5Cphi%0A%20%20%5Cend%7Bpmatrix%7D%0A%5Cright).%0A%5Cend%7Balign%7D%0A%5Ctag%7B1%7D"></span></p>
<p>Let us pay some attention to the issue of within-person centering in Equation&nbsp;1. Instead of decomposing urge to smoke into its within- and between-person components before fitting the model, we use “latent mean centering”. What this means is that we estimate the person means (<img src="https://latex.codecogs.com/png.latex?%5Calpha">) along with other model parameters, and subtract those means from the observed values (line 2 in above). I refer to the latent person-mean centered lagged urge to smoke as <img src="https://latex.codecogs.com/png.latex?U%5Ec_%7Bit-1%7D">.</p>
<p>I use the R package brms to estimate this model. The following code chunk shows how to specify this model inside brms’ <code>bf()</code> (“brmsformula”) function. In the first line, we specify a regression equation for <code>urge</code>. Everything on the right-hand side of this formula (to the right of the tilde) is treated as a regression coefficient to be estimated from data unless it is the exact name of a variable in the data. Thus we will be estimating an <code>alpha</code> (intercept) and a <code>phi</code> (the autoregressive coefficient).</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(</span>
<span id="cb4-2">  urge <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> alpha <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> phi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (u_lag <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> alpha),</span>
<span id="cb4-3">  alpha <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> phi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> person),</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nl =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb4-5">)</span></code></pre></div>
</details>
</div>
<p>One unusual part in this syntax is <code>(u_lag - alpha)</code>. It just subtracts <code>alpha</code> from each lagged urge value in creating the predictor for <code>phi</code>. That is “latent mean centering”. This first line can be considered the “level 1” equation or rather the <em>nonlinear</em> part of the model.</p>
<p>The second line then specifies the “level 2” equation, or the linear equations to predict the parameters in the above (potentially) nonlinear level 1 model. Both regression parameters are modelled on a population level average (the gamma in Equation&nbsp;1) and person-specific deviations from it.</p>
<p>The fourth line specifying <code>nl = TRUE</code> is critical, because it allows us to specifically name parameters inside <code>bf()</code>, and thereby to e.g.&nbsp;construct the latent mean centered variable on the first row. We could also indicate the distribution that we assume for the data. But in this work we model everything as gaussian, which is the software default and thus doesn’t need to be separately indicated. We then sample from the model. Everything from here on is standard operating procedure.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb5-2">  model,</span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat,</span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-example-univariate"</span></span>
<span id="cb5-5">)</span></code></pre></div>
</details>
</div>
<p>The object <code>fit</code> now contains the estimated model (the data, posterior samples, and lots of brms-specific information). We can call <code>summary(fit)</code> to see a default summary of the model.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: gaussian 
  Links: mu = identity; sigma = identity 
Formula: urge ~ alpha + phi * (u_lag - alpha) 
         alpha ~ 1 + (1 | person)
         phi ~ 1 + (1 | person)
   Data: dat (Number of observations: 4900) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup draws = 4000

Multilevel Hyperparameters:
~person (Number of levels: 100) 
                    Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(alpha_Intercept)     0.78      0.07     0.67     0.92 1.00      906     1707
sd(phi_Intercept)       0.15      0.02     0.11     0.19 1.00     2354     2767

Regression Coefficients:
                Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
alpha_Intercept    -0.01      0.08    -0.18     0.15 1.00      714     1207
phi_Intercept       0.20      0.02     0.16     0.25 1.00     2424     2654

Further Distributional Parameters:
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sigma     1.57      0.02     1.54     1.60 1.00     6653     2873

Draws were sampled using sample(hmc). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
</div>
<p>The first few rows above print information about the model (the formulas, data, and number of posterior samples). Then, “Multilevel Hyperparameters” are standard deviations (and correlations, if estimated) of the parameters that we allowed to vary across individuals (as indicated by <code>~person</code>). For each of those parameters, one row indicates its posterior summary statistics; “Estimate” is the posterior mean, “Est.Error” is the posterior standard deviation, “l-” and “u-95% CI” are the lower and upper bounds of the 95% credibility interval (so the 2.5 and 97.5 percentiles of the posterior samples). Then, Rhat is the convergence metric which should be smaller than 1.05 (optimally 1.00) to indicate that the estimation algorithm has converged. “Bulk_” and “Tail_ESS” indicate the effective sample sizes of the posterior draws, and should be pretty large.</p>
<p>The “Regression Coefficients” indicate the same information but for the means of the person-specific parameters’ distributions; or the “fixed effects”. For the average person, there is a positive autocorrelation in these data. Finally, the “Further Distributional Parameters” indicate parameters that are specific to the outcome distribution. We used the default gaussian distribution, and thus get an estimated residual standard deviation.</p>
<p>Going forward we will create a small function to print out model summaries. It will take samples of the population level, group-level, and family-specific parameters, and return their 50th (median), 2.5th, and 97.5th quantiles.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">sm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) {</span>
<span id="cb8-2">  x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_draws_df</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">regex =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_draws</span>(</span>
<span id="cb8-5">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile2</span>(.x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">025</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">975</span>))</span>
<span id="cb8-6">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove_all</span>(variable, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Intercept"</span>))</span>
<span id="cb8-8">}</span></code></pre></div>
</details>
</div>
<p>We show the results in Table&nbsp;2.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sm</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div id="tbl-model-1" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-model-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: Summaries of main parameters from the example univariate model.
</figcaption>
<div aria-describedby="tbl-model-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="do-not-create-environment cell caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">variable</th>
<th style="text-align: right;">q50</th>
<th style="text-align: right;">q2.5</th>
<th style="text-align: right;">q97.5</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">b_alpha</td>
<td style="text-align: right;">-0.01</td>
<td style="text-align: right;">-0.18</td>
<td style="text-align: right;">0.15</td>
</tr>
<tr class="even">
<td style="text-align: left;">b_phi</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">0.16</td>
<td style="text-align: right;">0.25</td>
</tr>
<tr class="odd">
<td style="text-align: left;">sd_person__alpha</td>
<td style="text-align: right;">0.78</td>
<td style="text-align: right;">0.67</td>
<td style="text-align: right;">0.92</td>
</tr>
<tr class="even">
<td style="text-align: left;">sd_person__phi</td>
<td style="text-align: right;">0.15</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">0.19</td>
</tr>
<tr class="odd">
<td style="text-align: left;">sigma</td>
<td style="text-align: right;">1.57</td>
<td style="text-align: right;">1.54</td>
<td style="text-align: right;">1.60</td>
</tr>
</tbody>
</table>
</div>
</div>
</figure>
</div>
</div>
</section>
<section id="multilevel-ar1-model" class="level2">
<h2 class="anchored" data-anchor-id="multilevel-ar1-model">Multilevel AR(1) Model</h2>
<p>We then replicate the two-level AR(1) model in <span class="citation" data-cites="mcneishPrimerTwolevelDynamic2020">McNeish and Hamaker (2020)</span> (equations 4a-c) that predicts urge from a time-lagged urge and depression. The model is</p>
<p><span id="eq-2"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AU_%7Bit%7D%20&amp;%5Csim%20N(%5Calpha_i%20+%20%5Cphi_i%20U%5Ec_%7Bit-1%7D%20+%20%5Cbeta_i%20D%5Ec_%7Bit%7D,%20%5Csigma%5E2),%20%5C%5C%0AU%5E%7Bc%7D_%7Bit%7D%20&amp;=%20U%5E%7B%5Ctext%7Braw%7D%7D_%7Bit%7D%20-%20%5Calpha%5EU_i,%20%5C%5C%0AD%5E%7Bc%7D_%7Bit%7D%20&amp;=%20D%5E%7B%5Ctext%7Braw%7D%7D_%7Bit%7D%20-%20%5Calpha%5ED_i,%20%5C%5C%0A%5Calpha%5EU_i%20&amp;=%20%5Cgamma_%7B0%7D%20+%20u_%7B0i%7D,%20%5C%5C%0A%5Calpha%5ED_i%20&amp;=%20%5Cgamma_%7B1%7D%20+%20u_%7B1i%7D,%20%5C%5C%0A%5Cphi_i%20&amp;=%20%5Cgamma_%7B2%7D%20+%20u_%7B2i%7D,%20%5C%5C%0A%5Cbeta_i%20&amp;=%20%5Cgamma_%7B3%7D%20+%20u_%7B3i%7D,%20%5C%5C%0A%5Cbegin%7Bbmatrix%7D%0A%20%20u_%7B0i%7D%20%5C%5C%20u_%7B1i%7D%20%5C%5C%20u_%7B2i%7D%20%5C%5C%20u_%7B3i%7D%0A%5Cend%7Bbmatrix%7D%20&amp;%5Csim%20MVN%5Cleft(%0A%20%20%5Cbegin%7Bbmatrix%7D%0A%20%20%20%200%20%5C%5C%200%20%5C%5C%200%20%5C%5C%200%0A%20%20%5Cend%7Bbmatrix%7D,%0A%20%20%5Cbegin%7Bpmatrix%7D%0A%20%20%20%20%5Ctau_%7B%5Calpha%5EU%7D%20%5C%20&amp;%20%5C%20&amp;%20&amp;%20%5C%5C%0A%20%20%20%200%20%5C%20&amp;%5Ctau_%7B%5Calpha%5ED%7D%20%5C%20&amp;%20%5C%20&amp;%20%5C%5C%0A%20%20%20%200%20%5C%20&amp;0%20%5C%20&amp;%5Ctau_%5Cphi%20%5C%20&amp;%20%5C%5C%0A%20%20%20%200%20%5C%20&amp;0%20%5C%20&amp;0%20%5C%20&amp;%5Ctau_%5Cbeta%0A%20%20%5Cend%7Bpmatrix%7D%0A%5Cright)%0A%5Cend%7Balign%7D%0A%5Ctag%7B2%7D"></span></p>
<p>We then see from Equation&nbsp;2 that we need to refer to different outcomes’ parameters across model formulas. That is, when predicting the urge to smoke, we need a way to refer to the (latent) mean of depression so that we can appropriately center the depression predictor. Currently brms does not support sharing parameters across formulas for different outcomes, but we can overcome this limitation with a small data wrangling trick</p>
<p>That is, we “stack” our data into the long format with respect to the two different outcomes, urge to smoke and depression. Then, on each row we have all variables from that measurement occasion, in addition to new ones that indicate the value of the outcome, and which outcome it refers to (Table&nbsp;3).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(urge, dep), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"outcome"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb10-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_urge =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"urge"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb10-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_dep =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dep"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb10-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Include predictors from each row</span></span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(dat)</span>
<span id="cb10-9"></span>
<span id="cb10-10">dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div id="tbl-data-2" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-data-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;3: Rearranged data for multivariate models.
</figcaption>
<div aria-describedby="tbl-data-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="do-not-create-environment cell caption-top table table-sm table-striped small">
<colgroup>
<col style="width: 10%">
<col style="width: 7%">
<col style="width: 9%">
<col style="width: 12%">
<col style="width: 12%">
<col style="width: 9%">
<col style="width: 10%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">person</th>
<th style="text-align: right;">time</th>
<th style="text-align: right;">u_lag</th>
<th style="text-align: right;">dep_lag</th>
<th style="text-align: left;">outcome</th>
<th style="text-align: right;">y</th>
<th style="text-align: right;">i_urge</th>
<th style="text-align: right;">i_dep</th>
<th style="text-align: right;">urge</th>
<th style="text-align: right;">dep</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">NA</td>
<td style="text-align: right;">NA</td>
<td style="text-align: left;">urge</td>
<td style="text-align: right;">0.34</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.34</td>
<td style="text-align: right;">0.43</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">NA</td>
<td style="text-align: right;">NA</td>
<td style="text-align: left;">dep</td>
<td style="text-align: right;">0.43</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0.34</td>
<td style="text-align: right;">0.43</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0.34</td>
<td style="text-align: right;">0.43</td>
<td style="text-align: left;">urge</td>
<td style="text-align: right;">-0.48</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">-0.48</td>
<td style="text-align: right;">-0.68</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0.34</td>
<td style="text-align: right;">0.43</td>
<td style="text-align: left;">dep</td>
<td style="text-align: right;">-0.68</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">-0.48</td>
<td style="text-align: right;">-0.68</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">-0.48</td>
<td style="text-align: right;">-0.68</td>
<td style="text-align: left;">urge</td>
<td style="text-align: right;">-4.44</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">-4.44</td>
<td style="text-align: right;">-1.49</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">-0.48</td>
<td style="text-align: right;">-0.68</td>
<td style="text-align: left;">dep</td>
<td style="text-align: right;">-1.49</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">-4.44</td>
<td style="text-align: right;">-1.49</td>
</tr>
</tbody>
</table>
</div>
</div>
</figure>
</div>
</div>
<p>Given these data, we then reparameterize Equation&nbsp;2 to also model depression in an otherwise identical model (Equation&nbsp;3).</p>
<p><span id="eq-3"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AY_%7Bit%7D%20&amp;%5Csim%20N(%5Cmu,%20%5Csigma%5E2)%20%5C%5C%0A%5Cmu%20&amp;=%20I_%7B%5Ctext%7Burge%7D%7D(%5Calpha_%7B1i%7D%20+%20%5Cphi_i%20U%5Ec_%7Bit-1%7D%20+%20%5Cbeta_i%20D%5Ec_%7Bit%7D)%20+%20I_%7B%5Ctext%7Bdep%7D%7D%5Calpha_%7B2i%7D%20%5C%5C%0A%5Csigma%20&amp;=%20%5Ctext%7Bexp%7D(I_%7B%5Ctext%7Burge%7D%7D%5Csigma_1%20+%20I_%7B%5Ctext%7Bdep%7D%7D%5Csigma_2)%20%5C%5C%0AU%5E%7Bc%7D_%7Bit%7D%20&amp;=%20U%5E%7B%5Ctext%7Braw%7D%7D_%7Bit%7D%20-%20%5Calpha_%7B1i%7D,%20%5C%5C%0AD%5E%7Bc%7D_%7Bit%7D%20&amp;=%20D%5E%7B%5Ctext%7Braw%7D%7D_%7Bit%7D%20-%20%5Calpha_%7B2i%7D,%20%5C%5C%0A%5Calpha_%7B1i%7D%20&amp;=%20%5Cgamma_%7B0%7D%20+%20u_%7B0i%7D,%20%5C%5C%0A%5Calpha_%7B2i%7D%20&amp;=%20%5Cgamma_%7B1%7D%20+%20u_%7B1i%7D,%20%5C%5C%0A%5Cphi_i%20&amp;=%20%5Cgamma_%7B2%7D%20+%20u_%7B2i%7D,%20%5C%5C%0A%5Cbeta_i%20&amp;=%20%5Cgamma_%7B3%7D%20+%20u_%7B3i%7D,%20%5C%5C%0A%5Cbegin%7Bbmatrix%7D%0A%20%20u_%7B0i%7D%20%5C%5C%20u_%7B1i%7D%20%5C%5C%20u_%7B2i%7D%20%5C%5C%20u_%7B3i%7D%0A%5Cend%7Bbmatrix%7D%20&amp;%5Csim%20MVN%5Cleft(%0A%20%20%5Cbegin%7Bbmatrix%7D%0A%20%20%20%200%20%5C%5C%200%20%5C%5C%200%20%5C%5C%200%0A%20%20%5Cend%7Bbmatrix%7D,%0A%20%20%5Cbegin%7Bpmatrix%7D%0A%20%20%20%20%5Ctau_%7B%5Calpha1%7D%20%5C%20&amp;%20%5C%20&amp;%20&amp;%20%5C%5C%0A%20%20%20%200%20%5C%20&amp;%5Ctau_%7B%5Calpha2%7D%20%5C%20&amp;%20%5C%20&amp;%20%5C%5C%0A%20%20%20%200%20%5C%20&amp;0%20%5C%20&amp;%5Ctau_%5Cphi%20%5C%20&amp;%20%5C%5C%0A%20%20%20%200%20%5C%20&amp;0%20%5C%20&amp;0%20%5C%20&amp;%5Ctau_%5Cbeta%0A%20%20%5Cend%7Bpmatrix%7D%0A%5Cright)%0A%5Cend%7Balign%7D%0A%5Ctag%7B3%7D"></span></p>
<p>That is, I model <code>y</code> that is either <code>urge</code> or <code>dep</code> as indicated by <code>i_urge</code> and <code>i_dep</code> respectively. So, below <code>alpha1</code>, <code>phi</code>, and <code>beta</code> to apply to <code>urge</code>, but <code>alpha2</code> to <code>dep</code>.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">bform <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(</span>
<span id="cb11-2">  y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> </span>
<span id="cb11-3">    i_urge <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (alpha1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> phi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (u_lag <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> alpha1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (dep <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> alpha2)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-4">    i_dep <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> alpha2,</span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nlf</span>(sigma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> i_urge <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sigma1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i_dep <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sigma2),</span>
<span id="cb11-6">  alpha1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> phi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> alpha2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> person),</span>
<span id="cb11-7">  sigma1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sigma2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb11-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nl =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-9">)</span></code></pre></div>
</details>
</div>
<p>Notice that essentially there are two models of <code>y</code> depending on the values of <code>i_urge</code> and <code>i_dep</code>. Critically, this also needs to extend to different models of the residual standard deviations. That is accomplished inside <code>nlf()</code>, where I model <code>sigma</code> on the two indicators. By default, sigmas are modelled through the log-link function, and notice that I only include a global intercept for each <code>sigma1</code> and <code>sigma2</code>; that is they are not further modelled on covariates. This is not pretty, but as we will see it works.</p>
<p>I then sample from the model.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb12-2">  bform,</span>
<span id="cb12-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat,</span>
<span id="cb12-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>),</span>
<span id="cb12-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-example-4"</span></span>
<span id="cb12-6">)</span></code></pre></div>
</details>
</div>
<p>And then compare the model summary to <span class="citation" data-cites="mcneishPrimerTwolevelDynamic2020">McNeish and Hamaker (2020)</span>. We can see the estimates match to within differences in priors and MCSE (Table&nbsp;4). Note in the code below I transform standard deviations by first exponentiating draws of residual standard deviations, and then square to put them on the variance scale as in <span class="citation" data-cites="mcneishPrimerTwolevelDynamic2020">McNeish and Hamaker (2020)</span>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_draws_df</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd_"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">regex =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb13-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd_"</span>), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb13-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_sigma"</span>), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(.)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb13-5">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_draws</span>(</span>
<span id="cb13-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">brms =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile2</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">025</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">975</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-8">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">number</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">01</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-9">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_glue_data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{q50} [{q2.5}, {q97.5}]"</span>)</span>
<span id="cb13-10">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb13-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace</span>(variable, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd_person__"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"var_"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-13">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove_all</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Intercept"</span>),</span>
<span id="cb13-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">M&amp;H (2020)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb13-15">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-0.01 [-0.18, 0.16]"</span>,</span>
<span id="cb13-16">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 0.21 [0.17, 0.24]"</span>,</span>
<span id="cb13-17">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 0.80 [0.61, 0.95]"</span>,</span>
<span id="cb13-18">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 0.01 [-0.02, 0.04]"</span>,</span>
<span id="cb13-19">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 1.14 [1.09, 1.19]"</span>,</span>
<span id="cb13-20">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb13-21">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 0.60 [0.44, 0.83]"</span>,</span>
<span id="cb13-22">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 0.02 [0.01, 0.03]"</span>,</span>
<span id="cb13-23">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 0.79 [0.61, 0.95]"</span>,</span>
<span id="cb13-24">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 0.01 [0.00, 0.01]"</span></span>
<span id="cb13-25">    )</span>
<span id="cb13-26">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div id="tbl-ml" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-ml-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;4: Multilevel AR(1) model results.
</figcaption>
<div aria-describedby="tbl-ml-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="do-not-create-environment cell caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">variable</th>
<th style="text-align: left;">brms</th>
<th style="text-align: left;">M&amp;H (2020)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">b_alpha1</td>
<td style="text-align: left;">-0.01 [-0.16, 0.16]</td>
<td style="text-align: left;">-0.01 [-0.18, 0.16]</td>
</tr>
<tr class="even">
<td style="text-align: left;">b_phi</td>
<td style="text-align: left;">0.21 [0.18, 0.25]</td>
<td style="text-align: left;">0.21 [0.17, 0.24]</td>
</tr>
<tr class="odd">
<td style="text-align: left;">b_beta</td>
<td style="text-align: left;">0.79 [0.62, 0.96]</td>
<td style="text-align: left;">0.80 [0.61, 0.95]</td>
</tr>
<tr class="even">
<td style="text-align: left;">b_alpha2</td>
<td style="text-align: left;">0.00 [-0.02, 0.03]</td>
<td style="text-align: left;">0.01 [-0.02, 0.04]</td>
</tr>
<tr class="odd">
<td style="text-align: left;">b_sigma1</td>
<td style="text-align: left;">1.14 [1.10, 1.19]</td>
<td style="text-align: left;">1.14 [1.09, 1.19]</td>
</tr>
<tr class="even">
<td style="text-align: left;">b_sigma2</td>
<td style="text-align: left;">1.00 [0.96, 1.04]</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">var_alpha1</td>
<td style="text-align: left;">0.59 [0.44, 0.81]</td>
<td style="text-align: left;">0.60 [0.44, 0.83]</td>
</tr>
<tr class="even">
<td style="text-align: left;">var_phi</td>
<td style="text-align: left;">0.02 [0.01, 0.03]</td>
<td style="text-align: left;">0.02 [0.01, 0.03]</td>
</tr>
<tr class="odd">
<td style="text-align: left;">var_beta</td>
<td style="text-align: left;">0.77 [0.59, 1.03]</td>
<td style="text-align: left;">0.79 [0.61, 0.95]</td>
</tr>
<tr class="even">
<td style="text-align: left;">var_alpha2</td>
<td style="text-align: left;">0.00 [0.00, 0.01]</td>
<td style="text-align: left;">0.01 [0.00, 0.01]</td>
</tr>
</tbody>
</table>
</div>
</div>
</figure>
</div>
</div>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Because it is easy to specify latent means in brms, I think I will be using them much more often from now on, especially if my sample size per person is small. I don’t think this will make much of a difference after that sample size is greater than, say, the magic number 30.</p>
<p>Let me know if you have any comments!</p>
</section>




<div id="quarto-appendix" class="default"><section id="history" class="level1 appendix"><h2 class="anchored quarto-appendix-heading">History</h2><div class="quarto-appendix-contents">

<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Earlier versions of this post contained syntax errors. The data stacking trick was suggested to me by Mauricio Garnier-Villarreal (thanks!)</p>
<p>While drafting this entry, I asked for help with coding this up in brms on the Stan forums: <a href="https://discourse.mc-stan.org/t/latent-mean-centering-latent-covariate-models-in-brms/29424" class="uri">https://discourse.mc-stan.org/t/latent-mean-centering-latent-covariate-models-in-brms/29424</a>. I couldn’t have figured it out without the help of all those people who answered. Thanks!</p>
<p>The earlier drafts and mistakes I made in coding the brms model up can be found in the <a href="https://github.com/mvuorre/mvuorre.github.io/commits/main/posts/stan-latent-mean-centering/index.qmd">Git history</a> of this file <span class="emoji" data-emoji="smile">😄</span></p>
</div>
</div>
</div></section><section id="see-also" class="level1 appendix"><h2 class="anchored quarto-appendix-heading">See also</h2><div class="quarto-appendix-contents">

<p>I’ve found these prior discussions useful</p>
<ul>
<li><a href="https://quantscience.rbind.io/2020/02/04/bayesian-mlm-with-group-mean-centering/#group-mean-centering-treating-group-means-as-latent-variables" class="uri">https://quantscience.rbind.io/2020/02/04/bayesian-mlm-with-group-mean-centering/#group-mean-centering-treating-group-means-as-latent-variables</a></li>
<li><a href="https://discourse.mc-stan.org/t/treat-the-cluster-mean-of-a-predictor-variable-as-a-latent-variable-hierarchical-linear-models/15001/5" class="uri">https://discourse.mc-stan.org/t/treat-the-cluster-mean-of-a-predictor-variable-as-a-latent-variable-hierarchical-linear-models/15001/5</a></li>
<li><a href="https://discourse.mc-stan.org/t/modeling-latent-means-in-brms-for-multilevel-group-mean-centering/12642/3" class="uri">https://discourse.mc-stan.org/t/modeling-latent-means-in-brms-for-multilevel-group-mean-centering/12642/3</a></li>
<li><a href="https://scottclaessens.github.io/blog/2020/brmsLV/" class="uri">https://scottclaessens.github.io/blog/2020/brmsLV/</a></li>
<li><a href="https://discourse.mc-stan.org/t/mi-with-non-linear-model/11227" class="uri">https://discourse.mc-stan.org/t/mi-with-non-linear-model/11227</a></li>
</ul>



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-endersCenteringPredictorVariables2007" class="csl-entry">
Enders, Craig K., and Davood Tofighi. 2007. <span>“Centering Predictor Variables in Cross-Sectional Multilevel Models: <span>A</span> New Look at an Old Issue.”</span> <em>Psychological Methods</em> 12 (2): 121–38. <a href="https://doi.org/10.1037/1082-989X.12.2.121">https://doi.org/10.1037/1082-989X.12.2.121</a>.
</div>
<div id="ref-mcneishPrimerTwolevelDynamic2020" class="csl-entry">
McNeish, Daniel, and Ellen L. Hamaker. 2020. <span>“A Primer on Two-Level Dynamic Structural Equation Models for Intensive Longitudinal Data in <span>Mplus</span>.”</span> <em>Psychological Methods</em> 25 (5): 610–35. <a href="https://doi.org/10.1037/met0000250">https://doi.org/10.1037/met0000250</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Grab a free copy at <a href="https://osf.io/j56bm/download" class="uri">https://osf.io/j56bm/download</a>. I couldn’t figure if this example data is real or simulated, or what the measurement instruments were.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2023,
  author = {Vuorre, Matti},
  title = {Latent Mean Centering with Brms},
  date = {2023-01-01},
  url = {https://vuorre.com/posts/latent-mean-centering/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2023" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2023. <span>“Latent Mean Centering with Brms.”</span>
January 1, 2023. <a href="https://vuorre.com/posts/latent-mean-centering/">https://vuorre.com/posts/latent-mean-centering/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>modelling</category>
  <category>bayes</category>
  <category>centering</category>
  <category>longitudinal</category>
  <category>brms</category>
  <guid>https://vuorre.com/posts/latent-mean-centering/</guid>
  <pubDate>Sat, 31 Dec 2022 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/latent-mean-centering/index_files/figure-html/fig-data-1.png" medium="image" type="image/png" height="58" width="144"/>
</item>
<item>
  <title>How I like to set up my computer</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/computer-setup-dotfiles/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>Like many people in academia, I spend much of my working time in front of computers. It’s then important to me that everything is <em>just</em> the way I want it, software is easily available and updated, and that my terminal looks nice <span class="emoji" data-emoji="mage">🧙</span>.</p>
<p>This blog post is an adaptation of a document that I’ve saved for myself in the eventual case that I have to wipe my computer and reinstall everything, or if I get a new computer. I use Macs, but some of these things also work on Linux. Nothing here will work for Windows machines.</p>
<section id="macos-setup" class="level1">
<h1>MacOS setup</h1>
<p>This aims to be succinct and quick, using homebrew to install as much as possible from the command line.</p>
<section id="software" class="level2">
<h2 class="anchored" data-anchor-id="software">Software</h2>
<p>Fire up the terminal and install <a href="https://brew.sh/">homebrew</a>. The command is currently</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/bin/bash</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
<p>but I would check the website before running that. Then install some stuff. First the GUI stuff that I use:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GUI apps</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cask</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-3">  firefox iterm2 microsoft-office <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-4">  zotero obsidian todoist sublime-text <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-5">  mactex rectangle alfred slack zoom <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-6">  visual-studio-code docker monitorcontrol</span></code></pre></div>
<p>Then the terminal and command line things that I like to use:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Terminal and CLI things</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-3">  tailscale starship bat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-4">  btop lsd dua syncthing</span></code></pre></div>
<p>And then a bunch of fonts. There’s probably more now but I’ve forgotten. The more the merrier <span class="emoji" data-emoji="smile">😄</span>.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> tap homebrew/cask-fonts</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install svn</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cask</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-4">  font-fantasque-sans-mono font-fantasque-sans-mono-nerd-font <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-5">  font-noto-sans font-noto-serif font-noto-mono font-noto-mono-for-powerline <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-6">  font-noto-emoji font-hasklug-nerd-font font-anonymice-nerd-font <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-7">  font-meslo-lg-nerd-font font-fira-code font-fira-mono font-fira-sans <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-8">  font-fira-sans-condensed font-pt-mono font-pt-sans font-pt-sans-narrow <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-9">  font-pt-serif font-pt-sans-caption font-pt-serif-caption</span></code></pre></div>
</section>
<section id="terminal" class="level2">
<h2 class="anchored" data-anchor-id="terminal">Terminal</h2>
<p>I then set up my terminal environment. I use <a href="https://iterm2.com/">iTerm2</a> and the <a href="https://starship.rs/">Starship</a> prompt. I also pick up some nice iTerm2 color themes from <a href="https://iterm2colorschemes.com/" class="uri">https://iterm2colorschemes.com/</a>.</p>
<p>Now I can open up VS Code in the current working directory with <code>code .</code>, or get nice outputs when listing working directory contents (I’ve aliased <code>l</code> to <code>lsd -la</code> in <code>~/.zshrc</code>):</p>
<p><img src="https://vuorre.com/posts/computer-setup-dotfiles/images/terminal.png" class="img-fluid"></p>
</section>
<section id="r" class="level2">
<h2 class="anchored" data-anchor-id="r">R</h2>
<p>Then onto the serious stuff <span class="emoji" data-emoji="gem">💎</span></p>
<ul>
<li><p>I install R from <a href="https://cran.r-project.org/">CRAN</a> because I (sometimes) want to use specific versions. Also I need to remember to get the appropriate M1 version more often <span class="emoji" data-emoji="smile">😄</span>.</p></li>
<li><p>RStudio: I use the <a href="https://dailies.rstudio.com/">daily development version</a> of RStudio. I don’t install this with homebrew because it sometimes has issues with using the right R version.</p></li>
<li><p>I also used to make sure that I’m using the faster Apple provided <a href="https://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html#Which-BLAS-is-used-and-how-can-it-be-changed_003f">BLAS</a> (20x faster for some operations). I can’t remember if I’ve done that this time though and am now afraid to check.</p></li>
</ul>
<p>I then immediately open RStudio and install my “base” packages that I use all the time.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pak"</span>)</span>
<span id="cb5-2">pak<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pkg_install</span>(</span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb5-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"usethis"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyverse"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brms"</span>, </span>
<span id="cb5-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kableExtra"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"janitor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"here"</span>, </span>
<span id="cb5-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scales"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gtsummary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multidplyr"</span>, </span>
<span id="cb5-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggtext"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidybayes"</span>, </span>
<span id="cb5-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggstance"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggdist"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"patchwork"</span>, </span>
<span id="cb5-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggforce"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggh4x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lavaan"</span>, </span>
<span id="cb5-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"emmeans"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggstance"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv"</span>, </span>
<span id="cb5-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"furrr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"remotes"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kableExtra"</span>,</span>
<span id="cb5-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gt"</span></span>
<span id="cb5-13">  )</span>
<span id="cb5-14">)</span></code></pre></div>
</section>
<section id="utilities" class="level2">
<h2 class="anchored" data-anchor-id="utilities">Utilities</h2>
<p>I use <a href="https://apps.apple.com/us/app/amphetamine/id937984704?mt=12">Amphetamine</a> to make sure my computer never sleeps (unless I tell it to.) Amphetamine is not available on homebrew.</p>
<section id="zotero" class="level3">
<h3 class="anchored" data-anchor-id="zotero">Zotero</h3>
<p>I love Zotero, and it has some stellar plugins:</p>
<ul>
<li>Install the Zotero SciHub add-on so I can access papers <a href="https://github.com/ethanwillis/zotero-scihub" class="uri">https://github.com/ethanwillis/zotero-scihub</a></li>
<li>Better BibTex <a href="https://retorque.re/zotero-better-bibtex/installation/" class="uri">https://retorque.re/zotero-better-bibtex/installation/</a>
<ul>
<li>This will automatically help manage bibtex keys</li>
<li>Possible to live-update a .bib file for e.g.&nbsp;syncing to somewhere</li>
</ul></li>
<li>Zutilo <a href="https://github.com/wshanks/Zutilo" class="uri">https://github.com/wshanks/Zutilo</a>, but I can’t now remember what it even does</li>
<li>ZotFile
<ul>
<li>Point Zotero to my pdfs on ~/Sync/ZoteroPDF (Syncthing directory)</li>
<li>check change to lower case, replace blanks, max length 60 in zotfile settings</li>
</ul></li>
<li>Use <a href="https://github.com/retorquere/zotero-storage-scanner" class="uri">https://github.com/retorquere/zotero-storage-scanner</a> to e.g.&nbsp;get rid of broken attachments</li>
</ul>
</section>
</section>
<section id="general-things" class="level2">
<h2 class="anchored" data-anchor-id="general-things">General Things</h2>
<p>I then turn on Dock hiding in Mac settings. Have I told you that the Ventura update totally destroyed the Settings menu, and I am now seriously considering switching to Linux? Well I did now. I also rename the computer to something dumb in System settings &gt; Sharing &gt; Computer Name.</p>
</section>
<section id="dotfiles-and-configuration-files" class="level2">
<h2 class="anchored" data-anchor-id="dotfiles-and-configuration-files">Dotfiles and configuration files</h2>
<p>I also have a git repo with some dotfiles and configurations I use, but it’s currently private. It mainly creates some terminal aliases and theme options, and git global configurations. I just backup existing files and copy from the repo to wherever they need to be, but there are more complicated workflows too.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>After this I usually have a pretty useful computer. Because of homebrew its quite fast too.</p>

</section>

<div id="quarto-appendix" class="default"><section id="credits" class="level2 appendix"><h2 class="anchored quarto-appendix-heading">Credits</h2><div class="quarto-appendix-contents">

<p>Inspired by <a href="https://gist.github.com/gadenbuie/a14cab3d075901d8b25cbaf9e1f1fa7d" class="uri">https://gist.github.com/gadenbuie/a14cab3d075901d8b25cbaf9e1f1fa7d</a>.</p>


</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2022,
  author = {Vuorre, Matti},
  title = {How {I} Like to Set up My Computer},
  date = {2022-12-08},
  url = {https://vuorre.com/posts/computer-setup-dotfiles/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2022" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2022. <span>“How I Like to Set up My Computer.”</span>
December 8, 2022. <a href="https://vuorre.com/posts/computer-setup-dotfiles/">https://vuorre.com/posts/computer-setup-dotfiles/</a>.
</div></div></section></div> ]]></description>
  <category>tips</category>
  <category>computers</category>
  <guid>https://vuorre.com/posts/computer-setup-dotfiles/</guid>
  <pubDate>Wed, 07 Dec 2022 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/computer-setup-dotfiles/images/terminal.png" medium="image" type="image/png" height="74" width="144"/>
</item>
<item>
  <title>Tidymultiverse</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/parallel-multiverse/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>The results of statistical analyses often depend on analysts’ (sometimes arbitrary) decisions, such as which covariates to model or what subsets of data to analyse. Multiverse, or specification curve, analysis is a method whereby the analysts don’t only conduct and report the results from one model, but instead conduct all the relevant and plausible analyses and report all the results <span class="citation" data-cites="simonsohnSpecificationCurveAnalysis2020 steegenIncreasingTransparencyMultiverse2016">(Simonsohn, Simmons, and Nelson 2020; Steegen et al. 2016)</span>.</p>
<p>For example, <span class="citation" data-cites="orbenAssociationAdolescentWellbeing2019">Orben and Przybylski (2019)</span> showed, through analyzing the same datasets in thousands of different ways, that conclusions regarding the association between the psychological well-being of adolescents and their digital technology use critically depend on (mostly) arbitrary decisions in how and which data are analysed (Figure&nbsp;1).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-op3" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-op3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/parallel-multiverse/images/orben-przybylski-2019-fig3.png" class="img-fluid figure-img" width="944">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-op3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Figure 3 from <span class="citation" data-cites="orbenAssociationAdolescentWellbeing2019">Orben and Przybylski (2019)</span>. Reproduced 100% without permission, but I don’t think Dr Orben or Dr Przybylski would mind.
</figcaption>
</figure>
</div>
</div>
</div>
<p>This blog entry is about the technical aspects of conducting multiverse analyses in R. Specifically, I want to find out easy and flexible methods of specifying and conducting multiverse analyses <em>in parallel</em>. I have briefly examined the landscape of R packages that facilitate multiverse analyses, and found that none suited my needs perfectly. In this entry, I therefore try to outline a general and flexible <a href="https://www.tidyverse.org/">tidyverse</a>-centric <span class="citation" data-cites="tidyverse">(Wickham et al. 2019)</span> multiverse analysis pipeline. I eschew using external packages to maximize flexibility and speed (parallel processing).</p>
<p>Currently, I am aware of three R packages for conducting multiverse analyses. The <a href="https://github.com/MUCollective/multiverse/">multiverse</a> package <span class="citation" data-cites="multiverse-r">(Sarma et al. 2021)</span> provides extensive functionality for conducting and reporting multiverse analyses, including a “domain specific language” for analyses and reporting. However, while powerful, the package seems somewhat complicated (for the use cases that I have in mind). Frankly, after briefly reviewing the documentation, I don’t know how to use it (but it seems very cool!) <a href="https://github.com/mverseanalysis/mverse/">mverse</a> aims to make the multiverse package easier to use <span class="citation" data-cites="mverse">(Moon et al. 2022)</span>. I haven’t explored it much but it only seems to offer <code>lm()</code> and <code>glm()</code> models. <a href="https://github.com/masurp/specr">specr</a> (maybe most relevant for my use cases in psychology) provides a much simpler set of functions (with less flexibility, however <span class="citation" data-cites="specr">(Masur and Scharkow 2020)</span>).</p>
<p>Another downside of these packages is that they, with multiverse being an exception, don’t provide options for parallel computations. Parallelization is quite important because multiverse analyses can include (tens, hundreds) of thousands of analyses and can therefore take a long time to complete. I started a pull request that aimed to add that functionality to specr, but along the way found that it wasn’t so easy to implement with the current specr syntax and codebase, and my limited R skills.</p>
<p>While thinking about how to best contribute to specr, I realized that multiverse analyses don’t necessarily need extra functions, but can be easily implemented in familiar data analysis pipelines (<a href="https://dplyr.tidyverse.org/">dplyr</a> and <code>%&gt;%</code> <span class="citation" data-cites="dplyr">(Wickham et al. 2022)</span>; depending on how familiar you are with the tidyverse). This entry is part of my journey of trying to figure out how to flexibly conduct multiverse analyses in parallel in R, and demonstrates a flexible syntax for parallelizing multiverse analyses with <code>%&gt;%</code>lines.</p>
<p>I am not an expert in parallel processing by any means, so would love to know if you have any feedback on how I’ve implemented it below! Let me know in the comments <span class="emoji" data-emoji="smile">😄</span></p>
</section>
<section id="example-multiverse-analysis-with-specr" class="level1">
<h1>Example multiverse analysis with specr</h1>
<p>Let’s start with a simple toy example with two outcomes, two predictors, two covariates, and four subgroups, and no prior reason to choose between specifications. That is, we think that <code>y1</code> and <code>y2</code> are equally likely to represent our outcome construct of interest, <code>x1</code> and <code>x2</code> are equally likely to represent the predictor construct, and we can’t choose if or how to include the covariates <code>c1</code> and <code>c2</code> in the model. We might also consider the subgroups defined by <code>group</code> separately (and are not willing to do hierarchical models.) Let’s load the required libraries and show the example data (Table&nbsp;1):</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggthemes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tictoc)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pretty plots</span></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(</span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_few</span>(</span>
<span id="cb1-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comic Sans MS"</span>, </span>
<span id="cb1-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb1-13">  )</span>
<span id="cb1-14">)</span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pretty tables</span></span>
<span id="cb1-17">k2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_width =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) {</span>
<span id="cb1-18">  x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kbl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic_2</span>(</span>
<span id="cb1-21">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">html_font =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Arial"</span>, </span>
<span id="cb1-22">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lightable_options =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"striped"</span>, </span>
<span id="cb1-23">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_width =</span> full_width</span>
<span id="cb1-24">    )</span>
<span id="cb1-25">}</span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data generation</span></span>
<span id="cb1-28">generate_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e5</span>) {</span>
<span id="cb1-29">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(seed)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(seed)</span>
<span id="cb1-30">  dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n),</span>
<span id="cb1-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n),</span>
<span id="cb1-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb1-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n),</span>
<span id="cb1-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d"</span>), n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-38">  )</span>
<span id="cb1-39">}</span>
<span id="cb1-40">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_data</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div id="tbl-data" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Example data (n = 100,000; 5.3 Mb on disk)
</figcaption>
<div aria-describedby="tbl-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="lightable-classic-2 lightable-striped do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: right;" data-quarto-table-cell-role="th">x1</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">x2</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">y1</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">y2</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">c1</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">c2</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">group</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">-0.77</td>
<td style="text-align: right;">1.10</td>
<td style="text-align: right;">-0.36</td>
<td style="text-align: right;">-1.23</td>
<td style="text-align: right;">0.78</td>
<td style="text-align: right;">-0.77</td>
<td style="text-align: left;">d</td>
</tr>
<tr class="even">
<td style="text-align: right;">-0.82</td>
<td style="text-align: right;">-1.68</td>
<td style="text-align: right;">-0.50</td>
<td style="text-align: right;">-0.79</td>
<td style="text-align: right;">-1.08</td>
<td style="text-align: right;">-0.81</td>
<td style="text-align: left;">b</td>
</tr>
<tr class="odd">
<td style="text-align: right;">-0.14</td>
<td style="text-align: right;">-1.89</td>
<td style="text-align: right;">-0.67</td>
<td style="text-align: right;">0.71</td>
<td style="text-align: right;">-0.89</td>
<td style="text-align: right;">-0.66</td>
<td style="text-align: left;">b</td>
</tr>
<tr class="even">
<td style="text-align: right;">-0.28</td>
<td style="text-align: right;">-0.98</td>
<td style="text-align: right;">0.68</td>
<td style="text-align: right;">-1.40</td>
<td style="text-align: right;">1.24</td>
<td style="text-align: right;">-0.25</td>
<td style="text-align: left;">c</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0.44</td>
<td style="text-align: right;">-0.10</td>
<td style="text-align: right;">0.83</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">-0.78</td>
<td style="text-align: right;">-0.45</td>
<td style="text-align: left;">d</td>
</tr>
<tr class="even">
<td style="text-align: right;">-1.19</td>
<td style="text-align: right;">-0.54</td>
<td style="text-align: right;">-0.38</td>
<td style="text-align: right;">2.10</td>
<td style="text-align: right;">1.42</td>
<td style="text-align: right;">1.11</td>
<td style="text-align: left;">b</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
<p>We can specify a fully crossed multiverse analysis over outcomes, predictors, and covariates, easily with specr. Also, to make the example a bit more interesting (slower!) for later examples, I’ll estimate the model using two functions (<code>lm()</code> and <code>glm()</code> which in this case give the same results, but the latter is much slower). I time the multiverse analysis using tictoc. Table&nbsp;2 shows the first few rows of the results.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(specr)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tic</span>()</span>
<span id="cb2-3">results_specr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_specs</span>(</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">df =</span> dat, </span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y2"</span>), </span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x2"</span>), </span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>), </span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">controls =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c2"</span>), </span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subsets =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group))</span>
<span id="cb2-10">)</span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>27.768 sec elapsed</code></pre>
</div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">results_specr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-3">  .[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kbl</span>(</span>
<span id="cb4-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic_2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">html_font =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Arial"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_width =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</details>
<div id="tbl-specr" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-specr-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: First six rows of multiverse numerical results from specr
</figcaption>
<div aria-describedby="tbl-specr-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="lightable-classic-2 do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">x</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">y</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">model</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">controls</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">estimate</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">std.error</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">statistic</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">p.value</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">conf.low</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">conf.high</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">c1 + c2</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">13.96</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.08</td>
<td style="text-align: right;">0.11</td>
</tr>
<tr class="even">
<td style="text-align: left;">x2</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">c1 + c2</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">0.48</td>
<td style="text-align: right;">0.63</td>
<td style="text-align: right;">-0.01</td>
<td style="text-align: right;">0.02</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y2</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">c1 + c2</td>
<td style="text-align: right;">0.20</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">29.79</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.18</td>
<td style="text-align: right;">0.21</td>
</tr>
<tr class="even">
<td style="text-align: left;">x2</td>
<td style="text-align: left;">y2</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">c1 + c2</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">0.79</td>
<td style="text-align: right;">0.43</td>
<td style="text-align: right;">-0.01</td>
<td style="text-align: right;">0.02</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">glm</td>
<td style="text-align: left;">c1 + c2</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">13.96</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.08</td>
<td style="text-align: right;">0.11</td>
</tr>
<tr class="even">
<td style="text-align: left;">x2</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">glm</td>
<td style="text-align: left;">c1 + c2</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">0.48</td>
<td style="text-align: right;">0.63</td>
<td style="text-align: right;">-0.01</td>
<td style="text-align: right;">0.02</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
<p>Another great thing about this package is that you can easily draw specification curve figures (Figure&nbsp;2)</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_specs</span>(</span>
<span id="cb5-2">  results_specr, </span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"controls"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"subsets"</span>)</span>
<span id="cb5-4">)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-specr" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-specr-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/parallel-multiverse/index_files/figure-html/fig-specr-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-specr-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Specification curve figure drawn from specr results
</figcaption>
</figure>
</div>
</div>
</div>
<p>However, even with this modest data set and 160 specifications, this took a while.</p>
<p>I first decided to take a stab at parallelizing <code>run_specs()</code>. This turned out to be a bit of a dead end because I couldn’t make the parallelization fit in with how <a href="https://github.com/masurp/specr/blob/master/R/run_specs.r"><code>run_specs()</code></a> works in the back-end.<sup>1</sup> So instead of shoehorning a parallel back-end to specr, I decided to implement the parallelization in a tidy pipeline. This pipeline, with no additional dependencies (apart from the tidyverse <span class="emoji" data-emoji="wink">😉</span>), works pretty well. It of course does not provide specr’s one-liners, but I believe the flexibility of this approach pays back for it.</p>
</section>
<section id="tidymultiverse" class="level1">
<h1>Tidymultiverse</h1>
<section id="specification-table" class="level2">
<h2 class="anchored" data-anchor-id="specification-table">Specification table</h2>
<p>The first step in a multiverse analysis is defining the grid of specifications.</p>
<p>The one difficulty here is that the dataset can also be part of the specifications (e.g.&nbsp;different outlier removal thresholds, or more generally any subsets or transformations of the data). If you include the dataset in the table of specifications, you would easily run out of memory (I learned this the hard way). So we will still iterate over the specs table, and pull relevant subsets of the data inside the function that iterates over the specs.</p>
<p>A flexible and easy way to declare the specifications is <code>expand_grid()</code>. This allows creating tables that cross all the variables declared therein. (There are related functions such as <code>expand()</code>, <code>crossing()</code>, and <code>nesting()</code> that allow for more flexibility.)</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">specs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(</span>
<span id="cb6-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x2"</span>),</span>
<span id="cb6-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y2"</span>),</span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">covariate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x2"</span>),</span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>)</span>
<span id="cb6-6">)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div id="tbl-specs-1" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-specs-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;3: First six rows of example specifications table.
</figcaption>
<div aria-describedby="tbl-specs-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="lightable-classic-2 lightable-striped do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">x</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">y</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">covariate</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">model</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">lm</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">glm</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x2</td>
<td style="text-align: left;">lm</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x2</td>
<td style="text-align: left;">glm</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y2</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">lm</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y2</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">glm</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
<p>But we could also just as well create a grid of formulas. Depending on your analysis, this might be a viable option</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(</span>
<span id="cb7-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y1 ~ x1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y1 ~ x2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y1 ~ x1 + c1"</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># And so on</span></span>
<span id="cb7-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>)</span>
<span id="cb7-4">)</span></code></pre></div>
</details>
</div>
<p>We will stick with specifying variables instead, for this example. We can include subgroups as well:</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">specs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(</span>
<span id="cb8-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x2"</span>),</span>
<span id="cb8-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y2"</span>),</span>
<span id="cb8-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">covariate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x2"</span>),</span>
<span id="cb8-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>),</span>
<span id="cb8-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cross with all the unique values of `group` in the data</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(dat, group)</span>
<span id="cb8-8">)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div id="tbl-specs-2" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-specs-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;4: First six rows of example specifications table with subgroups.
</figcaption>
<div aria-describedby="tbl-specs-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="lightable-classic-2 lightable-striped do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">x</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">y</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">covariate</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">model</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">group</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">d</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">b</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">c</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">a</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">glm</td>
<td style="text-align: left;">d</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: left;">glm</td>
<td style="text-align: left;">b</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
<p>Now each row in the table specifies the modelling function (e.g.&nbsp;<code>lm()</code>), the subgroup, and the left-hand and right-hand side variables of the formula to put in the modelling function. Next, we need a function to also expand the covariates to all their combinations (I lifted much of this from the <a href="https://github.com/masurp/specr/blob/7d5a0c3664dd5d281ecaebb783ce75b638447205/R/setup_specs.r#L41">specr source</a>, I found it surprisingly hard to write):</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Expand a vector of covariate names to all their combinations</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' For example expand_covariate(c("age", "sex")) returns</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' c("1", "age", "sex", "age + sex")</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'</span></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param covariate vector of covariate(s) e.g. c("age", "sex")</span></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'</span></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @return a character vector of all predictor combinations</span></span>
<span id="cb9-9">expand_covariate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(covariate) {</span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb9-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>,</span>
<span id="cb9-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(</span>
<span id="cb9-13">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb9-14">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(</span>
<span id="cb9-15">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(covariate), </span>
<span id="cb9-16">        <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">combn</span>(covariate, .x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> list))</span>
<span id="cb9-17">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-18">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" + "</span>))</span>
<span id="cb9-19">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-20">    unlist</span>
<span id="cb9-21">}</span></code></pre></div>
</details>
</div>
<p>Do let me know if you come up with something easier!</p>
<section id="the-specification-table" class="level3">
<h3 class="anchored" data-anchor-id="the-specification-table">The specification table</h3>
<p>Putting all this together, and creating the formulas from <code>y</code>, <code>x</code>, and <code>c</code> with <code>str_glue()</code>, we have completed the first part of our pipeline, creating the specifications:</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">specs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(</span>
<span id="cb10-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x2"</span>),</span>
<span id="cb10-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y2"</span>),</span>
<span id="cb10-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">covariate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_covariate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c2"</span>)),</span>
<span id="cb10-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>),</span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(dat, group)</span>
<span id="cb10-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{y} ~ {x} + {covariate}"</span>))</span></code></pre></div>
</details>
</div>
<div class="cell">
<div id="tbl-specs-3" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-specs-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;5: First six rows of example specifications table with subgroups and formulas.
</figcaption>
<div aria-describedby="tbl-specs-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="lightable-classic-2 lightable-striped do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">x</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">y</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">covariate</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">model</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">group</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">formula</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">d</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">b</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">c</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">lm</td>
<td style="text-align: left;">a</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">glm</td>
<td style="text-align: left;">d</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">glm</td>
<td style="text-align: left;">b</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
</section>
</section>
<section id="estimating-the-specifications" class="level2">
<h2 class="anchored" data-anchor-id="estimating-the-specifications">Estimating the specifications</h2>
<p>Having set up the specifications, all that is left to do is to iterate over them, while at the same time using the correct subsets of data. But before we do so, let’s first think about what we want the output to look like.</p>
<section id="outputs-and-errors" class="level3">
<h3 class="anchored" data-anchor-id="outputs-and-errors">Outputs and errors</h3>
<p>Currently, the output of <code>lm()</code> or <code>glm()</code> on each row will be a (g)lm object, from which we need to pull the information we need. In addition, the object will include the data used to estimate the model, and so the output might grow very large very quickly.</p>
<p>So it is best to just get the parameter(s) of interest when iterating over specs. To do that, we create functions to replace the model fitting functions with ones that estimate the model and then only return a table of parameters, and a count of observations in the model.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">lm2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(formula, data) {</span>
<span id="cb11-2">  fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> formula, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data)</span>
<span id="cb11-3">  out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.int =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tidy table of parameters</span></span>
<span id="cb11-4">  out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(out, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Second row (slope parameter)</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(out, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nobs</span>(fit))</span>
<span id="cb11-6">}</span>
<span id="cb11-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm2</span>(y1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div id="tbl-lm2-1" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-lm2-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;6: Output of <code>lm2(y1 ~ x1, data = dat)</code>.
</figcaption>
<div aria-describedby="tbl-lm2-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="lightable-classic-2 lightable-striped do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">term</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">estimate</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">std.error</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">statistic</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">p.value</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">conf.low</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">conf.high</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">n</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: right;">0.1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">31.23</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.1</td>
<td style="text-align: right;">1e+05</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
<p>We now have a neat function (<code>lm2()</code>) that fits the model and extracts the key parameter (Table&nbsp;6).</p>
<p>In addition, for a general solution, we should be able to handle errors. For example, some specifications might return 0 rows of data, which would break the iteration. To do so, we replace <code>lm2()</code> with a version that returns the output, or a tibble that says that zero observations were found (Table&nbsp;7).</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">lm2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">possibly</span>(lm2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">otherwise =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># See what it return when it gets bad input</span></span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm2</span>(group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div id="tbl-lm2-2" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-lm2-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;7: Output of <code>lm2(group ~ x1, data = dat)</code>.
</figcaption>
<div aria-describedby="tbl-lm2-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="lightable-classic-2 lightable-striped do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: right;" data-quarto-table-cell-role="th">n</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">0</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
<p>We also do this for <code>glm()</code>.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">glm2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(formula, data) {</span>
<span id="cb13-2">  fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> formula, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data)</span>
<span id="cb13-3">  out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.int =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb13-4">  out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(out, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(out, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nobs</span>(fit))</span>
<span id="cb13-6">}</span>
<span id="cb13-7">glm2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">possibly</span>(glm2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">otherwise =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
</details>
</div>
<p>Generally, I would have done this before creating the specs table, but I was trying to start easy <span class="emoji" data-emoji="smile">😄</span>. For now, I just replace the model names in specs:</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">specs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(specs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(model, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>))</span></code></pre></div>
</details>
</div>
</section>
<section id="iterating-over-specs-with-pmap" class="level3">
<h3 class="anchored" data-anchor-id="iterating-over-specs-with-pmap">Iterating over specs with <code>pmap()</code></h3>
<p>We are now ready to iterate over specs, and apply <code>model</code> therein to the data and formula specified on each row. To do so, we pipe specs into <code>pmap()</code> (inside <code>mutate()</code>, which means that we are operating inside the specs data frame). <code>pmap()</code> takes a list of arguments, and passes them to a function, <code>pmap(list(a, b, c), ~some_function())</code>. But since we need to pull our function from a string within the list of arguments, our function is in fact the <code>do.call()</code> function caller. We can then pass all our arguments to the function called by <code>do.call()</code>. Freaky.</p>
<p>We will pass <code>list(model, formula, group)</code> to <code>do.call()</code>, that then uses the shorthand <code>..1</code>, <code>..2</code>, etc to take the first, second, etc, argument from the list. Critically, we can also put in another function (<code>filter()</code>) inside the <code>do.call()</code> argument list that will help us subset the data, based on the original arguments.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tic</span>()</span>
<span id="cb15-2">results_dplyr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> specs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb15-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">out =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmap</span>(</span>
<span id="cb15-5">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(model, formula, group), </span>
<span id="cb15-6">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(</span>
<span id="cb15-7">        ..<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb15-8">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb15-9">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> ..<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb15-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(dat, group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> ..<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb15-11">        )</span>
<span id="cb15-12">      )</span>
<span id="cb15-13">    )</span>
<span id="cb15-14">  )</span>
<span id="cb15-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>12.878 sec elapsed</code></pre>
</div>
</div>
<p>This then returns a copy of the specs table (<code>results_dplyr</code>) with an additional column <code>out</code>. But <code>out</code> is a data frame column, so to show the values next to our original specs, we can call <code>unnest()</code> (Table&nbsp;8).</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">results_dplyr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results_dplyr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(out)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div id="tbl-mv-1" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-mv-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;8: First six rows of results from multiverse analysis.
</figcaption>
<div aria-describedby="tbl-mv-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="lightable-classic-2 lightable-striped do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">x</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">y</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">covariate</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">model</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">group</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">formula</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">term</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">estimate</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">std.error</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">statistic</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">p.value</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">conf.low</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">conf.high</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">n</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">lm2</td>
<td style="text-align: left;">d</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">14.78</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.08</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">24800</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">lm2</td>
<td style="text-align: left;">b</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">16.98</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">25257</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">lm2</td>
<td style="text-align: left;">c</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: right;">0.10</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">15.61</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">25045</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">lm2</td>
<td style="text-align: left;">a</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: right;">0.10</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">15.10</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.08</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">24898</td>
</tr>
<tr class="odd">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">glm2</td>
<td style="text-align: left;">d</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">14.78</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.08</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">24800</td>
</tr>
<tr class="even">
<td style="text-align: left;">x1</td>
<td style="text-align: left;">y1</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">glm2</td>
<td style="text-align: left;">b</td>
<td style="text-align: left;">y1 ~ x1 + 1</td>
<td style="text-align: left;">x1</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">16.98</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">25257</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
<p>If you noticed above, we already saw an improvement in the run-time of this pipeline over <code>run_specs()</code>, but note that my implementation does not estimate models for the complete data (<code>subsets</code> = <code>all</code> in specr), so it is not a fair comparison.</p>
<p>Nevertheless, now that we have the basic building blocks of the tidy multiverse pipeline collected, let’s focus on what matters; <em>speed</em>.</p>
</section>
</section>
</section>
<section id="parallelizing-the-tidymultiverse" class="level1">
<h1>Parallelizing the tidymultiverse</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Parallelization is hard and rarely works out of the box. Multidplyr works best when the individual computations are slow, because there is always some overhead in sending stuff back and forth between the nodes of the cluster. So the benefits will be even greater with larger data or slower models. The furrr package seems to offer a slightly simpler solution, but your mileage may vary. Your feedback is more than welcome (comments are open at the end of this post)!</p>
</div>
</div>
<section id="multidplyr" class="level2">
<h2 class="anchored" data-anchor-id="multidplyr">multidplyr</h2>
<p>To start, we load multidplyr, create a new cluster, and send the required libraries and variables to it.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(multidplyr)</span>
<span id="cb18-2"></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new cluster with eight nodes</span></span>
<span id="cb18-4">cluster <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new_cluster</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb18-5"></span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load libraries in and send variables to nodes in the cluster</span></span>
<span id="cb18-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cluster_library</span>(cluster, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purrr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"broom"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dplyr"</span>))</span>
<span id="cb18-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cluster_copy</span>(cluster, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dat"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm2"</span>))</span></code></pre></div>
</details>
</div>
<p>Multidplyr integrates seamlessly into <code>%&gt;%</code>lines by sending groups in the passed data to nodes in the cluster. It is therefore important to think a bit about how to group your data. For us, we want to equally divide the <code>lm()</code> and <code>glm()</code> calls across nodes, because <code>glm()</code> is considerably slower. If one node got all the <code>glm()</code> calls, we would have to wait for that one node even after the others had completed.</p>
<p>Here, it makes sense for us to group the data by <code>formula</code> and <code>group</code>. After grouping the data, we <code>partition()</code> it across the nodes in the cluster, run our computations, and then <code>collect()</code> the results back to our main R process. Notice that the <code>pmap()</code> call is identical to above.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tic</span>()</span>
<span id="cb19-2">results_multidplyr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> specs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(formula, group) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">partition</span>(cluster) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb19-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">out =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmap</span>(</span>
<span id="cb19-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(model, formula, group), </span>
<span id="cb19-8">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(</span>
<span id="cb19-9">        ..<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb19-10">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb19-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> ..<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb19-12">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(dat, group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> ..<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb19-13">        )</span>
<span id="cb19-14">      )</span>
<span id="cb19-15">    )</span>
<span id="cb19-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(out)</span>
<span id="cb19-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>4.319 sec elapsed</code></pre>
</div>
</div>
<p>This particular parallelization scheme (8 cores working on subsets defined by <code>formula</code> and <code>group</code> in <code>dat</code>) sped up our computations about 8 times compared to the original implementation, and about 4 times compared to the non-parallelized equivalent. Good stuff.</p>
</section>
<section id="furrr" class="level2">
<h2 class="anchored" data-anchor-id="furrr">furrr</h2>
<p>I like multidplyr a lot because I can manually specify how the data and computations are assigned across the cluster. I also like that you need to explicitly tell what packages and objects to send to the cluster. As a consequence the syntax grows a bit verbose, however.</p>
<p>As an alternative, the <a href="https://github.com/DavisVaughan/furrr/">furrr</a> package promises drop-in replacements to purrr’s <code>map()</code> functions that parallelize the computations <span class="citation" data-cites="furrr">(Vaughan and Dancho 2022)</span>. To use furrr’s functions, we first need to specify the parallelization scheme with <code>plan()</code>. We can then replace <code>pmap()</code> above with <code>future_pmap()</code>. Also, we need to pass objects from the global environment and packages using <code>furrr_options()</code> as shown below. Otherwise we can keep our <code>%&gt;%</code>line exactly the same.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(furrr)</span>
<span id="cb21-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plan</span>(multisession, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">workers =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb21-3"></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pass these global objects to `future_pmap()`</span></span>
<span id="cb21-5">opts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">furrr_options</span>(</span>
<span id="cb21-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">globals =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dat =</span> dat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lm2 =</span> lm2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">glm2 =</span> glm2),</span>
<span id="cb21-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">packages =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dplyr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"broom"</span>)</span>
<span id="cb21-8">)</span>
<span id="cb21-9"></span>
<span id="cb21-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tic</span>()</span>
<span id="cb21-11"></span>
<span id="cb21-12">results_furrr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> specs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb21-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">out =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">future_pmap</span>(</span>
<span id="cb21-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(model, formula, group), </span>
<span id="cb21-16">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(</span>
<span id="cb21-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">what =</span> ..<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb21-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">args =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb21-19">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> ..<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb21-20">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(dat, group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> ..<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb21-21">        )</span>
<span id="cb21-22">      ), </span>
<span id="cb21-23">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.options =</span> opts</span>
<span id="cb21-24">    )</span>
<span id="cb21-25">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(out)</span>
<span id="cb21-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>4.952 sec elapsed</code></pre>
</div>
</div>
<p>This worked great. While we don’t have to partition our data, and collect the computations afterwards, furrr does require passing stuff using the <code>.options</code> argument. But this is still a bit less verbose than multidplyr, and perhaps therefore preferred. I like it!</p>
</section>
<section id="checking-results" class="level2">
<h2 class="anchored" data-anchor-id="checking-results">Checking results</h2>
<p>I also spot check that the results are consistent across the methods. I am a bit paranoid with what comes to parallel computation. Table&nbsp;9 shows that everything is as it should be.</p>
<div class="cell">
<div id="tbl-results-check" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-results-check-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;9: Example results from the four estimation methods.
</figcaption>
<div aria-describedby="tbl-results-check-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="lightable-classic-2 lightable-striped do-not-create-environment cell caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Method</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">estimate</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">std.error</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">conf.low</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">conf.high</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">group</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">specr</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">0.08</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: left;">a</td>
</tr>
<tr class="even">
<td style="text-align: left;">tidymultiverse</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">0.08</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: left;">a</td>
</tr>
<tr class="odd">
<td style="text-align: left;">tidymultiverse multidplyr</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">0.08</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: left;">a</td>
</tr>
<tr class="even">
<td style="text-align: left;">tidymultiverse furrr</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">0.08</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: left;">a</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
</section>
</section>
<section id="a-visualization" class="level1">
<h1>A visualization</h1>
<p>Finally, like any analysis, multiverse analyses need to be visualized for understanding and communicating. Here, we use some ggplot2 magic to create a standard specification curve analysis figure (Figure&nbsp;3).</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb23-2">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(results_furrr, estimate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">spec =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb23-3">p_dash <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(spec, p.value, x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>group) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(spec, p.value), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_transform =</span> as.character) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(spec, value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set1"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb23-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Specification"</span></span>
<span id="cb23-10">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rows =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(name), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">space =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span>
<span id="cb23-14">p_curve <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(spec, estimate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set1"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> conf.low, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> conf.high), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span>
<span id="cb23-19">(p_curve <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> p_dash) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb23-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-results-sca" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-results-sca-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/parallel-multiverse/index_files/figure-html/fig-results-sca-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-results-sca-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Specification curve figure example with ggplot().
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="what-else" class="level1">
<h1>What else?</h1>
<p>Using this method, we can pass whatever modelling functions (e.g.&nbsp;<code>lmer()</code>, <code>brm()</code>) and arguments to them (e.g.&nbsp;append the formula with <code>(1 | participant)</code> for <code>lmer()</code> hierarchical models) and parallelize the iterations quite easily. We can also imagine more complex data subsetting scenarios. For example, we could expand the specs table to include various conditions for filtering data (e.g.&nbsp;outliers). We could then pre-compute those (or do it in <code>do.call()</code>) to dynamically subset data differently in each row of specs.</p>
<p>I hope you found this helpful. If you’ve any feedback, comments are open below and I’d appreciate your thoughts!</p>



</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-specr" class="csl-entry">
Masur, Philipp K., and Michael Scharkow. 2020. <span>“Specr: Conducting and Visualizing Specification Curve Analyses (Version 0.2.2).”</span> <a href="https://CRAN.R-project.org/package=specr">https://CRAN.R-project.org/package=specr</a>.
</div>
<div id="ref-mverse" class="csl-entry">
Moon, Michael Jongho, Haoda Li, Mingwei Xu, Nathan Taback, and Fanny Chevalier. 2022. <em>Mverse: Tidy Multiverse Analysis Made Simple</em>. <a href="https://CRAN.R-project.org/package=mverse">https://CRAN.R-project.org/package=mverse</a>.
</div>
<div id="ref-orbenAssociationAdolescentWellbeing2019" class="csl-entry">
Orben, Amy, and Andrew K. Przybylski. 2019. <span>“The Association Between Adolescent Well-Being and Digital Technology Use.”</span> <em>Nature Human Behaviour</em> 3 (2, 2): 173–82. <a href="https://doi.org/10.1038/s41562-018-0506-1">https://doi.org/10.1038/s41562-018-0506-1</a>.
</div>
<div id="ref-multiverse-r" class="csl-entry">
Sarma, Abhraneel, Alex Kale, Michael Moon, Nathan Taback, Fanny Chevalier, Jessica Hullman, and Matthew Kay. 2021. <span>“Multiverse: Multiplexing Alternative Data Analyses in r Notebooks (Version 0.6.1).”</span> <em>OSF Preprints</em>. <a href="https://github.com/MUCollective/multiverse">https://github.com/MUCollective/multiverse</a>.
</div>
<div id="ref-simonsohnSpecificationCurveAnalysis2020" class="csl-entry">
Simonsohn, Uri, Joseph P. Simmons, and Leif D. Nelson. 2020. <span>“Specification Curve Analysis.”</span> <em>Nature Human Behaviour</em>, July, 1–7. <a href="https://doi.org/10.1038/s41562-020-0912-z">https://doi.org/10.1038/s41562-020-0912-z</a>.
</div>
<div id="ref-steegenIncreasingTransparencyMultiverse2016" class="csl-entry">
Steegen, Sara, Francis Tuerlinckx, Andrew Gelman, and Wolf Vanpaemel. 2016. <span>“Increasing <span>Transparency Through</span> a <span>Multiverse Analysis</span>.”</span> <em>Perspectives on Psychological Science</em>, September. <a href="https://doi.org/10.1177/1745691616658637">https://doi.org/10.1177/1745691616658637</a>.
</div>
<div id="ref-furrr" class="csl-entry">
Vaughan, Davis, and Matt Dancho. 2022. <em>Furrr: Apply Mapping Functions in Parallel Using Futures</em>. <a href="https://CRAN.R-project.org/package=furrr">https://CRAN.R-project.org/package=furrr</a>.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. <span>“Welcome to the <span class="nocase">tidyverse</span>.”</span> <em>Journal of Open Source Software</em> 4 (43): 1686. <a href="https://doi.org/10.21105/joss.01686">https://doi.org/10.21105/joss.01686</a>.
</div>
<div id="ref-dplyr" class="csl-entry">
Wickham, Hadley, Romain François, Lionel Henry, and Kirill Müller. 2022. <em>Dplyr: A Grammar of Data Manipulation</em>. <a href="https://CRAN.R-project.org/package=dplyr">https://CRAN.R-project.org/package=dplyr</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>It first creates a data frame with the specs, then the requested subsets, and then either applies <code>run_spec()</code> to all the datasets and specs using <code>map()</code>, or if no subsets were requested, runs the <code>run_spec()</code> on the specs only. So it wasn’t straightforward to parallelize over both data subsets and specs. Parallelizing over specs <a href="https://github.com/masurp/specr/pull/31/commits/142bdf879b96966b3f4bd1fdf04e886711d827f1">was simple</a>.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2022,
  author = {Vuorre, Matti},
  title = {Tidymultiverse},
  date = {2022-12-07},
  url = {https://vuorre.com/posts/parallel-multiverse/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2022" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2022. <span>“Tidymultiverse.”</span> December 7, 2022. <a href="https://vuorre.com/posts/parallel-multiverse/">https://vuorre.com/posts/parallel-multiverse/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>statistics</category>
  <category>tutorial</category>
  <category>multiverse</category>
  <category>tidyverse</category>
  <category>specr</category>
  <guid>https://vuorre.com/posts/parallel-multiverse/</guid>
  <pubDate>Tue, 06 Dec 2022 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/parallel-multiverse/images/undraw-lost-online.png" medium="image" type="image/png" height="117" width="144"/>
</item>
<item>
  <title>Some alternatives to raincloud plots</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/raincloud-plot-alt/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<section id="ggrain" class="level1">
<h1>ggrain</h1>
<p><a href="https://github.com/njudd/ggrain">ggrain</a> <span class="citation" data-cites="ggrain">(Judd, van Langen, and Kievit 2022)</span> is an R package that brings extra geoms to ggplot2 to make it easy to create informative plots of your data like Figure&nbsp;1.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrain)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(</span>
<span id="cb1-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comic Sans MS"</span>)</span>
<span id="cb1-4">)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(iris, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Sepal.Length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span>  Species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_rain</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rain.side =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ggrain" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-ggrain-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/raincloud-plot-alt/index_files/figure-html/fig-ggrain-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-ggrain-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: A raincloud plot using the ggrain package.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The hallmark feature of a raincloud plot is that it includes the raw data (points), a summary (boxplot), and a density (shaded curve/area) of your data.</p>
<p>I love raincloud plots. But. I am concerned that they might unnecessarily duplicate features of the data, which might lead to visually overwhelming presentations, and therefore degrade the signal to noise ratio of the plots.</p>
<p>It just might be possible to show these three features—raw data, summary, and densities—in a visually simpler and perhaps more compelling way. In this blog entry, I’ll try two variations on this theme that I hope simplify the presentation without taking information away.</p>
</section>
<section id="raincloud-plots-the-hard-way" class="level1">
<h1>Raincloud plots the hard way</h1>
<p>But first, I’ll try to recreate this raincloud plot without the ggrain package. Most of the geoms and stats we need are in the <a href="https://mjskay.github.io/ggdist/index.html">ggdist</a> package <span class="citation" data-cites="ggdist">(Kay 2022)</span>. The end result (Figure&nbsp;2) looks very similar to the ggrain version, above.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdist)</span>
<span id="cb2-3">iris <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Species, Sepal.Length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">033</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_nudge</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.085</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_halfeye</span>(</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, </span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normalize =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb2-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb2-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_nudge</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>), </span>
<span id="cb2-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point_interval =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb2-13">  )</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ggdistrain-1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-ggdistrain-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/raincloud-plot-alt/index_files/figure-html/fig-ggdistrain-1-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-ggdistrain-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: A raincloud plot made using ‘base’ ggplot2 and ggdist.
</figcaption>
</figure>
</div>
</div>
</div>
<p>OK, so now we have a handle on how to create raincloud plots “manually”.</p>
</section>
<section id="removing-summaries-and-densities" class="level1">
<h1>Removing summaries and densities</h1>
<p>What I would like to do next is to make the summaries less prominent. I can use <code>stat_halfeye()</code>. Above, I used <code>stat_halfeye(..., point_inteval = NULL)</code> to remove them completely. Here, I will specify some quantiles to show with the <code>width</code> argument. I am not sure if Figure&nbsp;3 is an improvement.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">iris <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Species, Sepal.Length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">033</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_halfeye</span>(</span>
<span id="cb3-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, </span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normalize =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb3-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb3-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_nudge</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>),</span>
<span id="cb3-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.width =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>)</span>
<span id="cb3-10">  )</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ggdistrain-2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-ggdistrain-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/raincloud-plot-alt/index_files/figure-html/fig-ggdistrain-2-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-ggdistrain-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: A raincloud plot made using ‘base’ ggplot2 and ggdist, with different summary geoms (a point interval).
</figcaption>
</figure>
</div>
</div>
</div>
<p>Maybe all this information can be gleaned from the points alone. To do this, we can jitter the points according to a method specified in the <a href="https://cran.r-project.org/web/packages/vipor/index.html">vipor</a> package <span class="citation" data-cites="vipor">(Sherrill-Mix and Clarke 2017)</span>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggbeeswarm)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-3">iris <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Species, Sepal.Length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> Species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb4-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_quasirandom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-7">  )</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-rain-bee" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-rain-bee-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/raincloud-plot-alt/index_files/figure-html/fig-rain-bee-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-rain-bee-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: A scatterplot where the points are jittered on the x-axis according to a normal density kernel.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Figure&nbsp;4 arranges the points using one of the offsetting algorithms in vipor, brought to ggplot via the <a href="https://cran.r-project.org/web/packages/ggbeeswarm/index.html">ggbeeswarm</a> package <span class="citation" data-cites="ggbeeswarm">(Clarke and Sherrill-Mix 2017)</span>. By default, this is the “quasirandom” method, where “points are distributed within a kernel density estimate of the distribution with offset determined by quasirandom Van der Corput noise”. I can only guess that “the distribution” refers to a gaussian distribution.</p>
<p>It would be really nice if we could choose the x-axis side to which jitter the points. Then we could display two groups side by side. Unfortunately that is not possible.</p>
</section>
<section id="a-more-complicated-example" class="level1">
<h1>A more complicated example</h1>
<div id="fig-new-ggrain" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-new-ggrain-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://cdn.fosstodon.org/cache/media_attachments/files/109/460/641/893/080/595/small/0f1dcd129a6b60a5.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-new-ggrain-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: A more complicated raincloud plot courtesy of Rogier Kievit
</figcaption>
</figure>
</div>
<p>Let’s try a more complicated example similar to Rogier Kievit’s figure (Figure&nbsp;5). I first simulate some data with two groups and four timepoints. There’s also some covariate that I’d like to display.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data generation</span></span>
<span id="cb5-2">generate_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>) {</span>
<span id="cb5-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(seed)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(seed)</span>
<span id="cb5-4">  dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb5-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n,</span>
<span id="cb5-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb5-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n),</span>
<span id="cb5-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>),</span>
<span id="cb5-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">2</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>),</span>
<span id="cb5-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">3</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>),</span>
<span id="cb5-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">4</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span>)</span>
<span id="cb5-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Young"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">4</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(name))</span>
<span id="cb5-16">}</span>
<span id="cb5-17">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_data</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span></code></pre></div>
</div>
<p>I’ll try to show this plot with much fewer visual symbols, and hopefully retain most of the information.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggnewscale)</span>
<span id="cb6-2">dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Time =</span> name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Value =</span> value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Time, Value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_c</span>(</span>
<span id="cb6-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Covariate"</span></span>
<span id="cb6-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb6-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> c, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> x),</span>
<span id="cb6-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>,</span>
<span id="cb6-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_quasirandom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dodge.width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)</span>
<span id="cb6-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new_scale_color</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(</span>
<span id="cb6-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Group"</span>,</span>
<span id="cb6-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set1"</span></span>
<span id="cb6-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_pointinterval</span>(</span>
<span id="cb6-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> x),</span>
<span id="cb6-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interval_size_range =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>),</span>
<span id="cb6-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_dodge</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">075</span>)</span>
<span id="cb6-22">  )</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ggdistrain-new" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-ggdistrain-new-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/raincloud-plot-alt/index_files/figure-html/fig-ggdistrain-new-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-ggdistrain-new-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: An attempt at a more complicated “raincloud” plot using ggnewscale and ggdist.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Hmm. Figure&nbsp;6 doesn’t quite work visually as I’d like it to. I think it would be really nice if the jittered points were jittered only on their respective sides.</p>
<p>I might come back to this later to see if I can improve on this design.</p>
<p>The takeaway, though, is that the ggrain package provides really nice figures out of the box. If we want to do more complex figures kind of like these, the ggdist and ggbeeswarm plots can create compelling alternatives.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-ggbeeswarm" class="csl-entry">
Clarke, Erik, and Scott Sherrill-Mix. 2017. <em>Ggbeeswarm: Categorical Scatter (Violin Point) Plots</em>. <a href="https://CRAN.R-project.org/package=ggbeeswarm">https://CRAN.R-project.org/package=ggbeeswarm</a>.
</div>
<div id="ref-ggrain" class="csl-entry">
Judd, Nicholas, Jordy van Langen, and Rogier Kievit. 2022. <em>Ggrain: A Rainclouds Geom for Ggplot2</em>. <a href="https://github.com/njudd/ggrain">https://github.com/njudd/ggrain</a>.
</div>
<div id="ref-ggdist" class="csl-entry">
Kay, Matthew. 2022. <em><span class="nocase">ggdist</span>: Visualizations of Distributions and Uncertainty</em>. <a href="https://doi.org/10.5281/zenodo.3879620">https://doi.org/10.5281/zenodo.3879620</a>.
</div>
<div id="ref-vipor" class="csl-entry">
Sherrill-Mix, Scott, and Erik Clarke. 2017. <em>Vipor: Plot Categorical Data Using Quasirandom Noise and Density Estimates</em>. <a href="https://CRAN.R-project.org/package=vipor">https://CRAN.R-project.org/package=vipor</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2022,
  author = {Vuorre, Matti},
  title = {Some Alternatives to Raincloud Plots},
  date = {2022-12-06},
  url = {https://vuorre.com/posts/raincloud-plot-alt/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2022" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2022. <span>“Some Alternatives to Raincloud
Plots.”</span> December 6, 2022. <a href="https://vuorre.com/posts/raincloud-plot-alt/">https://vuorre.com/posts/raincloud-plot-alt/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>visualization</category>
  <category>ggplot2</category>
  <guid>https://vuorre.com/posts/raincloud-plot-alt/</guid>
  <pubDate>Mon, 05 Dec 2022 23:00:00 GMT</pubDate>
</item>
<item>
  <title>How to run R remotely</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/remote-r/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>I recently saw an <a href="https://fosstodon.org/@michaelflynn/109445977522188850">interesting question</a> on Mastodon: <strong>How can I run R remotely?</strong></p>
<p>It’s often the case that we write code and manuscripts on computers that are not powerful enough to run complicated data analyses. Or maybe it is not possible for us to leave the computer running alone for a long time. Sometimes we’re lucky enough to have a powerful desktop computer somewhere that could run those tasks with much greater speed, but we either don’t like using them (maybe they have windows installed!) or we don’t have physical access to them. In those cases, we’d like to run R on the fast computer but also access it remotely from other computers. In this entry, I show how to create remote R sessions with ease using RStudio Server, Docker (optionally), and Tailscale.</p>
<p>In order to best solve this problem, we need to recognize two main scenarios:</p>
<ol type="1">
<li>The laptop (or “slow” computer) and desktop (or “fast” computer) are on the same local network, or</li>
<li>The laptop and desktop are not on the same local network.</li>
</ol>
<p>We discuss these options in turn. The answers turn out to be very similar, but when the computers are not on the same network, the solution is just a wee bit more complicated.</p>
<section id="what-you-need" class="level1">
<h1>What you need</h1>
<p>These solutions work on Linux, MacOS, and even Windows operating systems. The slow and fast computers can have any combination of these.</p>
<p>You also need to use RStudio for the solutions discussed here. It turns out that doing this in VS Code can be even easier because of its superb remote session support. I’ll add the VS Code writeup later, once my transition from RStudio to VS Code is complete <span class="emoji" data-emoji="wink">😉</span>.</p>
<p>The first thing you need to set up is an RStudio Server instance on the fast computer. If your fast computer is running Linux, <a href="https://posit.co/download/rstudio-server/">this is trivial</a>.</p>
<p>If your fast computer has either MacOS or Windows, you will need to set up the RStudio Server instance using Docker. This is really easy, and we begin here.</p>
</section>
<section id="rstudio-server" class="level1">
<h1>RStudio Server</h1>
<p>We are first going to install RStudio Server on the fast computer. You cannot run RStudio Server on MacOS or Windows, but we can easily fire one up using <a href="https://www.docker.com/">Docker</a>. First, using your fast computer, head over to the Docker website and download the Docker desktop app. Then start it and make sure it is running (you will have a menu bar or taskbar Docker button to indicate that it’s running).</p>
<p>Then start a terminal session, and use it to start a <a href="https://rocker-project.org/">rocker/rstudio</a> container:</p>
<div class="aside callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The rocker images don’t yet work on M1 Macs. If you, like me, are using an M1 Mac, you can replace <code>rocker/rstudio</code> with <code>amoselb/rstudio-m1</code>.</p>
</div>
</div>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ti</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>/work:/home/rstudio <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> PASSWORD=yourpassword <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 8787:8787 rocker/rstudio</span></code></pre></div>
<p>This creates a directory in your current working directory called <code>work</code>, and lets the Docker container access files therein (inside the container, the path is <code>/home/rstudio</code> where RStudio Server sessions typically start). This way whatever files you save inside Docker will remain in your disk, and you can use / edit those outside the container as well. (Thanks Kristoffer for pointing this critical point to me!)</p>
<p>Now your fast computer is running an RStudio Server session. You can verify this by opening a browser tab on the fast computer, and typing <code>localhost:8787</code> in the address bar. You should see the RStudio Server login window pop up (Figure&nbsp;1).</p>
<div id="fig-login" class="quarto-float quarto-figure quarto-figure-center anchored" alt="RStudio Server login window.">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-login-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/remote-r/images/login.png" class="img-fluid figure-img" alt="RStudio Server login window.">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-login-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: RStudio Server login window.
</figcaption>
</figure>
</div>
<p>Then use <code>rstudio</code> as the Username, and <code>yourpassword</code> as the password. You’ll then have a fully functioning RStudio session in your browser (Figure&nbsp;2).</p>
<div id="fig-rstudio-server" class="quarto-float quarto-figure quarto-figure-center anchored" alt="RStudio Server.">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-rstudio-server-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/remote-r/images/rstudio-server.png" class="img-fluid figure-img" alt="RStudio Server.">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-rstudio-server-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: RStudio Server–RStudio in the browser!.
</figcaption>
</figure>
</div>
<p>Notice how it runs on Ubuntu, although my computer is an M1 Mac. Pretty cool, huh.</p>
<p>Ok, so how do we connect to this from other computers. We might now either want to connect from another computer on the same network, or on another network. Let’s start with the first.</p>
</section>
<section id="computers-on-the-same-local-network" class="level1">
<h1>Computers on the same local network</h1>
<p>This is pretty easy! First, find your fast computer’s local IP address. There’s many ways to find this and you could for example query it in the terminal:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ipconfig</span> getifaddr en0</span></code></pre></div>
<p>Your local IP address will be something like <code>192.168.0.123</code>. My fast computer currently runs on <code>192.168.0.155</code>, and I’ll use it below.</p>
<p>Fire up a browser in your slow computer, and navigate to <code>192.168.0.155:8787</code>. I’m using my phone as the slow computer here, and after logging in with the same credentials as above, I see Figure&nbsp;3.</p>
<div id="fig-rstudio-remote-1" class="quarto-float quarto-figure quarto-figure-center anchored" alt="RStudio remote session on my phone.">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-rstudio-remote-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/remote-r/images/phone-1.jpg" class="img-fluid figure-img" alt="RStudio remote session on my phone.">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-rstudio-remote-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: RStudio remote session on my phone.
</figcaption>
</figure>
</div>
<p>It really isn’t more difficult than that.</p>
</section>
<section id="computers-on-different-networks" class="level1">
<h1>Computers on different networks</h1>
<p>OK, so you still have RStudio Server running on your fast computer, but maybe it’s at work and you are now at home with your slow computer and a cold beer. How to connect? There’s many ways to do this, but here we will use <a href="https://tailscale.com/">Tailscale</a>.</p>
<p>First, create a Tailscale account, and then install it on both computers. (OK so I guess you still need to be physically near both machines at this point <span class="emoji" data-emoji="smile">😄</span>. [Unless you already have e.g.&nbsp;SSH access to the fast computer, in which case you can install Tailscale in the terminal.]) Make sure Tailscale is running on both and that they are signed in to the same Tailscale account. You can follow the <a href="https://tailscale.com/kb/1017/install/">official instructions</a>. It really is quite easy and that’s why I use Tailscale and not some other SSH or VPN based solution.</p>
<p>Then, you can head to <a href="https://login.tailscale.com/admin/machines" class="uri">https://login.tailscale.com/admin/machines</a> (on either computer). It will show you all the machines that you’ve connected to Tailscale (Figure&nbsp;4), whether they are active or not.</p>
<div id="fig-tailscale" class="quarto-float quarto-figure quarto-figure-center anchored" alt="Tailscale admin panel.">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-tailscale-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/remote-r/images/tailscale-1.png" class="img-fluid figure-img" alt="Tailscale admin panel.">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-tailscale-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Tailscale admin panel.
</figcaption>
</figure>
</div>
<p>Now you can connect between your computers wherever the machines might be, provided that they are connected to the internet and Tailscale. My fast computer’s Tailscale IP, redacted in Figure&nbsp;4, is <code>xxx.xxx.x.xx</code>. So now I go home with my slow computer, and then use the browser to connect to <code>xxx.xxx.x.xx:8787</code>, and I see Figure&nbsp;3 again.</p>
<p>I can then use RStudio (server) running on my fast computer on any of my other computers (as clients), by using the Tailscale IP address.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>If it is possible for you to have a powerful computer always connected to the internet, you can make a persistent RStudio computing platform out of it with RStudio Server. You can then use Tailscale to connect to it very easily from anywhere in the world.</p>
<p>I hope that was as helpful to you as it has been for me <span class="emoji" data-emoji="smile">😄</span>. If something didn’t work for you, comments are open below.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2022,
  author = {Vuorre, Matti},
  title = {How to Run {R} Remotely},
  date = {2022-12-03},
  url = {https://vuorre.com/posts/remote-r/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2022" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2022. <span>“How to Run R Remotely.”</span> December 3,
2022. <a href="https://vuorre.com/posts/remote-r/">https://vuorre.com/posts/remote-r/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>RStudio Server</category>
  <category>Docker</category>
  <category>Tailscale</category>
  <category>tutorial</category>
  <guid>https://vuorre.com/posts/remote-r/</guid>
  <pubDate>Fri, 02 Dec 2022 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/remote-r/images/christina-wocintechchat-com-glRqyWJgUeY-unsplash.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Website favicons with hexSticker</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/hexsticker-favicon/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>My website needed a new <a href="https://en.wikipedia.org/wiki/Favicon">favicon</a>, and I decided to create one with R. I quite like the look of those hexagonal R package logos, and it turns out there’s an R package that helps you make those: <a href="https://github.com/GuangchuangYu/hexSticker">hexSticker</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(hexSticker)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(viridis)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(here)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
<p>First, the design. I really like the simple symmetry of a (normal) density curve. So I based my design on that. To make it a bit more interesting, I decided to stack a small number of them on top of another, each with its own color. Here’s how I went about doing that.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A consistent color palette for the image</span></span>
<span id="cb2-2">palette <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">viridis</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create data for the density curves</span></span>
<span id="cb2-5">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb2-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nesting</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">01</span>)</span>
<span id="cb2-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x, m, s))</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot said data</span></span>
<span id="cb2-13">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> n1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> n1)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># What's a better / more overused color scale? Nothing.</span></span>
<span id="cb2-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">begin =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust the empty areas between plot geoms and axis limits</span></span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb2-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))</span>
<span id="cb2-20">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># These curves go up</span></span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(</span>
<span id="cb2-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y),</span>
<span id="cb2-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb2-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_stack</span>()</span>
<span id="cb2-26">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make the plot otherwise completely empty</span></span>
<span id="cb2-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_transparent</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb2-32">  )</span></code></pre></div>
</div>
<p>Can you imagine from above what it’ll look like 😉? You’ll see in a bit. Next I needed to pass the plot object throught <code>hexSticker::sticker()</code> to create the hexagonal sticker plot. There are quite a few arguments to that function and it took me a few minutes to figure out what they do. I basically wanted to fill the hexagonal area with the plot, and add a URL to the corner.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">outfile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tempfile</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fileext =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>)</span>
<span id="cb3-2">s <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sticker</span>(</span>
<span id="cb3-3">  p,</span>
<span id="cb3-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s_x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s_y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s_width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.9</span>,</span>
<span id="cb3-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s_height =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.7</span>,</span>
<span id="cb3-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h_fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb3-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h_color =</span> palette[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb3-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">url =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sometimes I R"</span>,</span>
<span id="cb3-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">u_color =</span> palette[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>],</span>
<span id="cb3-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">u_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>,</span>
<span id="cb3-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>,</span>
<span id="cb3-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> outfile</span>
<span id="cb3-16">)</span>
<span id="cb3-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(s)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-favicon" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-favicon-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/hexsticker-favicon/index_files/figure-html/fig-favicon-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-favicon-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Sticker made with ggplot2 and hexSticker.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The more I kept tweaking this, the more it started to look like a tropical fish swimming towards me. Only the eyes are missing! When printed in RStudio or here in the html output of a rmarkdown/quarto document, the margins are oddly large. But the output file looks just as it should, and is now both the logo (top-left corner) and favicon (browser tab) of this website.</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2022,
  author = {Vuorre, Matti},
  title = {Website Favicons with {hexSticker}},
  date = {2022-06-29},
  url = {https://vuorre.com/posts/hexsticker-favicon/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2022" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2022. <span>“Website Favicons with hexSticker.”</span>
June 29, 2022. <a href="https://vuorre.com/posts/hexsticker-favicon/">https://vuorre.com/posts/hexsticker-favicon/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <guid>https://vuorre.com/posts/hexsticker-favicon/</guid>
  <pubDate>Tue, 28 Jun 2022 22:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/hexsticker-favicon/index_files/figure-html/fig-favicon-1.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Easy notifications from R</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/easy-notifications-from-r/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>R can be a pretty slow tool. So it would be good to know when an expensive computation has ended. One way to do that is to have R send a notification to your phone when it is done. Here, I’ll show how to do that easily with <a href="https://ntfy.sh">ntfy</a>.</p>
<section id="download-ntfy.sh" class="level2">
<h2 class="anchored" data-anchor-id="download-ntfy.sh">Download ntfy.sh</h2>
<p>Go to your app store (iOS/Android) and download the ntfy app.</p>
</section>
<section id="subscribe-to-a-topic" class="level2">
<h2 class="anchored" data-anchor-id="subscribe-to-a-topic">Subscribe to a topic</h2>
<p>Open the app on your phone and <a href="https://ntfy.sh/docs/subscribe/phone/">subscribe to a topic</a>. Just type in a name that’s both memorable and not likely to already be used by someone else. I use <code>vuorre-r-notifications</code>.</p>
<p><img src="https://vuorre.com/posts/easy-notifications-from-r/images/subscribe.jpeg" class="img-fluid" alt="Subscribing to vuorre-r-notifications on ntfy.sh"></p>
</section>
<section id="send-notifications" class="level2">
<h2 class="anchored" data-anchor-id="send-notifications">Send notifications</h2>
<p>You can now include variations of <code>system("curl -d 'Notification text' ntfy.sh/vuorre-r-notifications")</code> in your R code. For example, to send a notification after a long running code</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Long running code here</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.sleep</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sleep for .1 second</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Send notification</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curl -d 'Woke up after .1 second nap!' ntfy.sh/vuorre-r-notifications"</span>)</span></code></pre></div>
</div>
<p>You’ll get this notification on your phone:</p>
<p><img src="https://vuorre.com/posts/easy-notifications-from-r/images/notification.jpeg" class="img-fluid" alt="Notification received on phone"></p>
<p>This is really useful when you have simulations (mcmc or otherwise 😉) that take a long time, and you’d like to act as soon as they are done. Have fun!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2022,
  author = {Vuorre, Matti},
  title = {Easy Notifications from {R}},
  date = {2022-06-15},
  url = {https://vuorre.com/posts/easy-notifications-from-r/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2022" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2022. <span>“Easy Notifications from R.”</span> June 15,
2022. <a href="https://vuorre.com/posts/easy-notifications-from-r/">https://vuorre.com/posts/easy-notifications-from-r/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>tips</category>
  <guid>https://vuorre.com/posts/easy-notifications-from-r/</guid>
  <pubDate>Tue, 14 Jun 2022 22:00:00 GMT</pubDate>
</item>
<item>
  <title>How to calculate contrasts from a fitted brms model</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p><a href="https://cran.rstudio.com/web/packages/brms/">brms</a> (Bayesian Regression Models using Stan) is an <a href="https://cran.rstudio.com/">R</a> package that allows fitting complex (multilevel, multivariate, mixture, …) statistical models with straightforward R modeling syntax, while using <a href="https://mc-stan.org/">Stan</a> for bayesian inference under the hood. You will find many uses of that package on this blog. I am particularly fond of brms’ helper functions for post-processing (visualizing, summarizing, etc) the fitted models. In this post, I will show how to calculate and visualize arbitrary contrasts (aka “(general linear) hypothesis tests”) with brms, with full uncertainty estimates.</p>
<section id="models-and-contrasts" class="level2">
<h2 class="anchored" data-anchor-id="models-and-contrasts">Models and contrasts</h2>
<p>Here, we will discuss linear models, which regress an outcome variable on a weighted combination of predictors, while allowing the weights to vary across individuals (hierarchical linear regression). After fitting the model, you will have estimates of the weights (“beta weights”, or simply regression parameters) that typically consist of an intercept (estimated level of outcome variable when all predictors are zero) and slopes, which indicate how the outcome variable changes as function of one-unit changes of the predictors, when other predictors are at 0.</p>
<p>However, we are often interested in further questions (contrasts, “general linear hypothesis tests”). For example, your model output may report one group’s change over time, and the difference of that slope between groups, but you are particularly interested in the other group’s slope. To find that slope, you’d need to calculate an additional contrast from your model. This is also commonly called “probing interactions” or sometimes “post hoc testing”.</p>
<section id="example-data" class="level3">
<h3 class="anchored" data-anchor-id="example-data">Example data</h3>
<p>To make this concrete, let’s consider a hypothetical example data set from <a href="http://intensivelongitudinal.com/ch4/ch4index.html">Bolger and Laurenceau (2013)</a>: Two groups’ (<code>treatment</code>: 0/1) self-reported <code>intimacy</code> was tracked over 16 days (<code>time</code>). The dataset contains data from a total of 50 (simulated) individuals.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3">tmpfile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tempfile</span>()</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(</span>
<span id="cb1-5">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://www.intensivelongitudinal.com/ch4/ch4R.zip"</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">destfile =</span> tmpfile</span>
<span id="cb1-7">  )</span>
<span id="cb1-8">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(tmpfile) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(id), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">treatment =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(treatment))</span></code></pre></div>
</div>
</section>
<section id="model" class="level3">
<h3 class="anchored" data-anchor-id="model">Model</h3>
<p>We might be interested in how the two groups’ feelings of intimacy developed over time, and how their temporal trajectories of intimacy differed. To be more specific, we have three questions:</p>
<p>Q1: How did intimacy develop over time for group 0? Q2: How did intimacy develop over time for group 1? Q3: How different were these two time-courses?</p>
<p>To answer, we model intimacy as a function of time, treatment, and their interactions. The hierarchical model includes varying intercepts and effects of time across participants.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span>
<span id="cb2-2">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb2-3">  intimacy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> treatment <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> id),</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gaussian</span>(),</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intimacymodel"</span></span>
<span id="cb2-7">)</span></code></pre></div>
</div>
</section>
<section id="interpreting-the-models-parameters" class="level3">
<h3 class="anchored" data-anchor-id="interpreting-the-models-parameters">Interpreting the model’s parameters</h3>
<p>Let’s then answer our questions by looking at the model’s summary, and interpreting the estimated population-level parameters (the posterior means and standard deviations).</p>
<div class="cell">
<div class="cell-output-display">
<table class="table caption-top table-sm table-striped small" data-quarto-postprocess="true">
<caption>Summary of the Intimacy model's parameters</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Parameter</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Estimate</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Est.Error</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Q2.5</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Q97.5</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">b_Intercept</td>
<td style="text-align: right;">2.89</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">2.49</td>
<td style="text-align: right;">3.31</td>
</tr>
<tr class="even">
<td style="text-align: left;">b_time</td>
<td style="text-align: right;">0.05</td>
<td style="text-align: right;">0.02</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.10</td>
</tr>
<tr class="odd">
<td style="text-align: left;">b_treatment1</td>
<td style="text-align: right;">-0.06</td>
<td style="text-align: right;">0.30</td>
<td style="text-align: right;">-0.65</td>
<td style="text-align: right;">0.51</td>
</tr>
<tr class="even">
<td style="text-align: left;">b_time:treatment1</td>
<td style="text-align: right;">0.06</td>
<td style="text-align: right;">0.03</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.13</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>The first lesson is that most models are simply too complex to interpret by just looking at the numerical parameter estimates. Therefore, we always draw figures to help us interpret what the model thinks is going on. The figure below shows example participants’ data (left) and the model’s estimated effects on the right.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/index_files/figure-html/figure-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Then, we can begin interpreting the parameters. First, the intercept indicates estimated intimacy when time and treatment were at their respective baseline levels (0). It is always easiest to interpret the parameters by eyeballing the right panel of the figure above and trying to connect the numbers to the figure. This estimate is the left-most point of the red line.</p>
<p>The estimated <code>time</code> parameter describes the slope of the red line (Q1); <code>treatment1</code> is the difference between the two lines at time zero (Q3). However, we cannot immediately answer Q2 from the parameters, although we can see that the slope of the blue line is about 0.05 + 0.06. To get the answer to Q2, or more generally, any contrast or “general linear hypothesis test” from a brms model, we can use the <code>hypothesis()</code> method.</p>
</section>
</section>
<section id="hypothesis" class="level2">
<h2 class="anchored" data-anchor-id="hypothesis">hypothesis()</h2>
<p><code>hypothesis()</code> truly is an underappreciated method of the brms package. It can be very useful in probing complex models. It allows us to calculate, visualize, and summarize, with full uncertainty estimates, any transformation of the model’s parameters. These transformations are often called “contrasts” or “general linear hypothesis tests”. But really, they are just transformations of the joint posterior distribution of the model’s parameters.</p>
<p>To answer Q2, then, we encode our question into a combination of the models parameters:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">q2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">q2 =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time + time:treatment1 = 0"</span>)</span></code></pre></div>
</div>
<p>The slope of group 1 is calculated from the model’s parameters by adding the slope of group 0 (<code>time</code>) and the interaction term <code>time:treatment1</code>. <code>= 0</code> indicates that we are interested in contrasting the resulting estimate the zero (“testing against zero” or even “testing the null hypothesis”). Then, we pass this named string to <code>hypothesis()</code>, and observe the results.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">q2_answer <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span>(fit, q2)</span>
<span id="cb4-2">q2_answer</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hypothesis Tests for class b:
  Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio Post.Prob Star
1         q2     0.11      0.02     0.06     0.16         NA        NA    *
---
'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.
'*': For one-sided hypotheses, the posterior probability exceeds 95%;
for two-sided hypotheses, the value tested against lies outside the 95%-CI.
Posterior probabilities of point hypotheses assume equal prior probabilities.</code></pre>
</div>
</div>
<p>The output indicates that the estimated answer to Question 2 is 0.11 with a standard error of 0.02. I will return to <code>Evid.Ratio</code> and <code>Post.Prob</code> shortly.</p>
<p>The results can also be visualized.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(q2_answer)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>That figure shows the (samples from the) posterior distribution of the answer to Question 2.</p>
</section>
<section id="more-contrasts" class="level2">
<h2 class="anchored" data-anchor-id="more-contrasts">More contrasts</h2>
<p>With <code>hypothesis()</code> you can answer many additional questions about your model, beyond the parameter estimates. To illustrate, say we are interested in the groups’ difference in intimacy at the end of the study (day 15; Question 4). (The difference at time 0 is reported by the group parameter.)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">q4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">q4 =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"treatment1 + time:treatment1 * 15 = 0"</span>)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span>(fit, q4)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hypothesis Tests for class b:
  Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio Post.Prob Star
1         q4     0.87       0.4      0.1     1.66         NA        NA    *
---
'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.
'*': For one-sided hypotheses, the posterior probability exceeds 95%;
for two-sided hypotheses, the value tested against lies outside the 95%-CI.
Posterior probabilities of point hypotheses assume equal prior probabilities.</code></pre>
</div>
</div>
<section id="directional-hypotheses-and-posterior-probabilities" class="level3">
<h3 class="anchored" data-anchor-id="directional-hypotheses-and-posterior-probabilities">Directional hypotheses and posterior probabilities</h3>
<p>We can also ask for directional questions. For example, what is the probability that group 0’s slope is greater than 0 (Q5)?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">q5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">q5 =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time &gt; 0"</span>)</span>
<span id="cb9-2">q5_answer <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span>(fit, q5)</span>
<span id="cb9-3">q5_answer</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hypothesis Tests for class b:
  Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio Post.Prob Star
1         q5     0.05      0.02     0.01     0.09      57.82      0.98    *
---
'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.
'*': For one-sided hypotheses, the posterior probability exceeds 95%;
for two-sided hypotheses, the value tested against lies outside the 95%-CI.
Posterior probabilities of point hypotheses assume equal prior probabilities.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(q5_answer)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>We can now return to <code>Evid.Ratio</code> and <code>Post.Prob</code>: The latter indicates the posterior probability that the parameter of interest is greater than zero (<code>&gt; 0</code>). (More accurately, the proportion of samples from the posterior that are greater than zero.) That should correspond to what you see in the figure above. The former is the ratio of the hypothesis and its complement (the ratio of <code>time &gt; 0</code> and <code>time &lt; 0</code>). I find posterior probabilities more intuitive than evidence ratios, but they both return essentially the same information. Perhaps of interest, with uniform priors, posterior probabilities will exactly correspond (numerically, not conceptually) to frequentist one-sided p-values (<a href="https://www.ejwagenmakers.com/2017/MarsmanWagenmakers2017ThreeInsights.pdf">Marsman &amp; Wagenmakers, 2017</a>).</p>
</section>
<section id="multiple-hypotheses" class="level3">
<h3 class="anchored" data-anchor-id="multiple-hypotheses">Multiple hypotheses</h3>
<p>You can evaluate multiple hypotheses in one function call:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span>(fit, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(q2, q4, q5))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hypothesis Tests for class b:
  Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio Post.Prob Star
1         q2     0.11      0.02     0.06     0.16         NA        NA    *
2         q4     0.87      0.40     0.10     1.66         NA        NA    *
3         q5     0.05      0.02     0.01     0.09      57.82      0.98    *
---
'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.
'*': For one-sided hypotheses, the posterior probability exceeds 95%;
for two-sided hypotheses, the value tested against lies outside the 95%-CI.
Posterior probabilities of point hypotheses assume equal prior probabilities.</code></pre>
</div>
</div>
</section>
<section id="hierarchical-hypotheses" class="level3">
<h3 class="anchored" data-anchor-id="hierarchical-hypotheses">Hierarchical hypotheses</h3>
<p>Up to this point, we have “tested” the model’s population level effects. (Parameters for the average person. “Fixed effects.”) Because we fit a hierarchical model with varying intercepts and slopes of time, we can also test the individual specific parameters. For example, we can look at every individual’s estimated intercept (intimacy at time 0):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span>(fit, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Intercept = 0"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scope =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"coef"</span>)</span></code></pre></div>
</div>
<p>In the above, we asked for the results of the hypothesis test, split by group <code>id</code> (which is the grouping factor in our hierarchical model), and indicated <code>coef</code> as the scope. The latter means that the estimates are the subject-specific deviations with the fixed effect added, as opposed to <code>ranef</code>, which are zero-centered.</p>
<p>The results of this question would be a bit too much information to print on screen, so instead we will draw a figure:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>When you find that you have a brms model whose parameters don’t quite answer your questions, <code>hypothesis()</code> will probably give you the answer. For more advanced post-processing of your models, I recommend taking a look at the <a href="http://mjskay.github.io/tidybayes/">tidybayes</a> package.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2020,
  author = {Vuorre, Matti},
  title = {How to Calculate Contrasts from a Fitted Brms Model},
  date = {2020-02-06},
  url = {https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2020" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2020. <span>“How to Calculate Contrasts from a Fitted
Brms Model.”</span> February 6, 2020. <a href="https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/">https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/</a>.
</div></div></section></div> ]]></description>
  <category>statistics</category>
  <category>tutorial</category>
  <category>R</category>
  <category>brms</category>
  <guid>https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/</guid>
  <pubDate>Wed, 05 Feb 2020 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/2020-02-06-how-to-calculate-contrasts-from-a-fitted-brms-model/index_files/figure-html/figure-1.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>How to analyze visual analog (slider) scale data?</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In psychological experiments, subjective responses are often collected using two types of response scales: ordinal and visual analog scales. These scales are unlikely to provide normally distributed data. However, researchers often analyze responses from these scales with models that assume normality of the data.<sup>1</sup></p>
<p>Ordinal scales, of which binary ratings are a special case, provide ordinal data and are thus better analyzed using ordinal models <span class="citation" data-cites="BurknerOrdinalRegressionModels2019 LiddellAnalyzingOrdinalData2018">(Bürkner and Vuorre 2019; Liddell and Kruschke 2018)</span>.</p>
<p>Analog scales, also known as slider scales, are also unlikely to provide normally distributed responses because the scale is bounded at the low and high ends. These responses also tend to be skewed. It is common for slider responses to bunch at either end of the slider scale, potentially making the deviation from normality more severe.</p>
<p>For example, Figure&nbsp;1 shows a slider scale in action. (I found this random example with a simple internet search at <a href="https://blog.surveyhero.com/2018/09/03/new-question-type-slider/" class="uri">https://blog.surveyhero.com/2018/09/03/new-question-type-slider/</a>). In experiments using slider scales, subjects are typically instructed to use their mouse to drag a response indicator along a horizontal line, and/or click with a mouse on a point of the scale that matches their subjective impression. Sometimes these responses are provided on paper, where subjects are asked to bisect a line at a point that matches their subjective feeling (e.g.&nbsp;halfway between “Leisure” and “Money” if they are subjectively equally important.)</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div id="fig-vas" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-vas-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/vas.gif" class="img-fluid quarto-figure quarto-figure-center figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-vas-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Example slider scale from https://blog.surveyhero.com/2018/09/03/new-question-type-slider/
</figcaption>
</figure>
</div>
</div>
</div>
<p>These analog ratings are sometimes thought to be ‘better’ than discrete ordinal ratings (Likert item responses) because of the greater resolution of the slider scale. The scale’s resolution is limited only by the resolution of the monitor: For example, if the rating scale is 100 pixels wide, there are 100 possible values for the ratings. It is not unthinkable that such ratings can be considered continuous between the low and high endpoints. However, they are often not well described by the normal distribution.</p>
<section id="normal-model-of-slider-ratings" class="level2">
<h2 class="anchored" data-anchor-id="normal-model-of-slider-ratings">Normal model of slider ratings</h2>
<p>Consider Figure&nbsp;2. This figure shows 200 simulated ratings on a [0, 1] slider scale (meaning that any value between 0 and 1, inclusive of the endpoints, is possible). I have also superimposed a blue curve of the best-fitting normal density on the histogram. The two most notable non-normal features of these data are that they are bounded at 0 and 1 where the data appears to “bunch”, and (possibly) skewed. Of course, these data were simulated; experience with slider scales tells me, however, that this histogram is not unrepresentative of such ratings.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div id="fig-simulate-example" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-simulate-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/index_files/figure-html/fig-simulate-example-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="480">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-simulate-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Histogram of 200 simulated slider scale ratings, with a superimposed best-fitting density curve from a normal distribution.
</figcaption>
</figure>
</div>
</div>
</div>
<p>While the height of the blue curve is not comparable to the heights of the bars (one represents a density, the other counts of observations in rating bins), it should be apparent that features of the rating scale data make the blue normal curve a poor representation of the data.</p>
<p>First, the skew apparent in the data is not captured by the normal density curve. Second, and perhaps more important, the blue curve does not respect the 0 and 1 boundaries of the slider scale data.</p>
<p>Focus on this latter point: We can see that the blue curve assigns density to areas outside the possible values: The model predicts impossible values with alarming frequency. Second, the boundary values 0.0 and 1.0 do not receive any special treatment under the normal model, but we can see that the data are bunched at the boundaries. The great frequency of responses at 0.0 and 1.0 leads to large prediction errors from the normal model of these data.</p>
<p>In other words, (simulated) subjects tend to give many extreme ratings. This is especially apparent in the low end of the rating scale, where the continuous spread of scores tapers off, but then there is a large spike of ratings at zero. The normal model misses these features of the data, and may therefore lead to unrepresentative estimates of the data generating process, and even erroneous conclusions.</p>
</section>
<section id="toward-a-better-model" class="level2">
<h2 class="anchored" data-anchor-id="toward-a-better-model">Toward a better model</h2>
<p>More generally, if your goal is to predict cognition and behavior <span class="citation" data-cites="YarkoniChoosingPredictionExplanation2017">(Yarkoni and Westfall 2017)</span>, a model that is obviously a poor representation of your data—in terms of having such a poor predictive utility—should not be your first choice for data analysis.</p>
<p>Admittedly, the data in Figure&nbsp;2 were simulated, and it remains an empirical question as to how common these features are in real data, and how severe these issues are to normal models (t-test, ANOVA, correlation, etc.).</p>
<p>Nevertheless, it would be desirable to have an accessible data-analytic model for slider scale data, whose assumption better match observed features of the data. Here, I introduce one such model—the zero-one-inflated beta (ZOIB) model—and show how it can be applied to real data using the R package brms <span class="citation" data-cites="BurknerBrmsPackageBayesian2017">(Bürkner 2017)</span>. I also compare this model to standard analyses of slider scale data and conclude that the ZOIB can provide more detailed and accurate inferences from data than its conventional counterparts.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/zoidberg.jpg" class="img-fluid figure-img" width="240"></p>
<figcaption>Dr.&nbsp;John A. Zoidberg thinks you should try a ZOIB model on your slider scale data.</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="the-zero-one-inflated-beta-model" class="level1">
<h1>The zero-one-inflated beta model</h1>
<p>Above, we established—rather informally—that normal models may be less than optimal for slider scale data. Of course, no model is the <em>correct</em> model of such data, but it would be desirable to use a model that best represents the data under study.</p>
<p>The model for analysis of slider scale data discussed here has been called the “zero-one-inflated beta” model, or ZOIB <span class="citation" data-cites="LiuZoibPackageBayesian2015">(Liu and Kong 2015)</span>. It is a model of data in the closed [0, 1] interval, and has two components: A beta distribution for responses in the closed (0, 1) interval, and a bernoulli distribution for the binary {0, 1} responses. Under this model, predictors can affect either or both the continuous and binary responses, the proportion of binary responses, or the spread of the continuous ratings.</p>
<p>To understand ZOIB, let’s start with a closer look at the theoretical beta density.</p>
<section id="the-beta-distribution" class="level2">
<h2 class="anchored" data-anchor-id="the-beta-distribution">The beta distribution</h2>
<p>The beta distribution used in beta regression <span class="citation" data-cites="FerrariBetaRegressionModelling2004">(Ferrari and Cribari-Neto 2004)</span> is a model of data in the open (0, 1) interval. (i.e.&nbsp;all values from 0 to 1, but not 0 and 1 themselves, are permitted.)</p>
<p>The beta distribution typically has two parameters, which in R are called <code>shape1</code> and <code>shape2</code>. Together, they determine the location, spread, and skew of the distribution. Four example beta densities are shown in Figure&nbsp;3. Using R’s <code>dbeta()</code>, I drew four curves corresponding to beta densities with different <code>shape1</code> and <code>2</code> parameters.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div id="fig-beta-distributions" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-beta-distributions-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/index_files/figure-html/fig-beta-distributions-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-beta-distributions-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Four examples of the beta density, corresponding to different shape parameters.
</figcaption>
</figure>
</div>
</div>
</div>
<p>This default parameterization is useful, for example, as a prior distribution for proportions: The <code>shape1</code> and <code>shape2</code> parameters can define the prior number of zeros and ones, respectively. For example, in the above figure, <code>dbeta(x, shape1 = 1, shape2 = 1)</code> results in a uniform prior over proportions, because the prior zeros and ones are 1 each.</p>
<p>However, for our purposes, it is more useful to parameterize the beta distribution with a mean and a precision. To convert the former parameterization to mean (which we’ll call <img src="https://latex.codecogs.com/png.latex?%5Cmu"> (mu)) and precision (<img src="https://latex.codecogs.com/png.latex?%5Cphi"> (phi)), the following formulas can be used</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%5Cmbox%7Bshape1%7D%20&amp;=%20%5Cmu%20%5Cphi%20%5C%5C%0A%5Cmbox%7Bshape2%7D%20&amp;=%20(1%20-%20%5Cmu)%5Cphi%0A%5Cend%7Balign*%7D"></p>
<p>(This parameterization is provided in R in the PropBeta functions from the extraDist package, which calls the precision parameter, or <img src="https://latex.codecogs.com/png.latex?%5Cphi">, <code>size</code>.) Redrawing the figure from above with this parameterization using the <code>dprop()</code> function, we get the figure below.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/index_files/figure-html/beta-reparameterized-distributions-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>Four examples of the reparameterized beta density (<code>dprop()</code>).</figcaption>
</figure>
</div>
</div>
</div>
<p>Shown above are four density functions of the beta family, whose precision and mean are varied. The first (red line) is a beta distribution with precision = 1, and mean = 0.5. It results in a uniform distribution. If a subject gave random slider scale responses, they might look much like this distribution (any rating is equally probably as any other rating).</p>
<p>The second beta distribution (green line) has precision 10, and mean 0.2. It is heavily skewed to the right. The third distribution (teal line) has precision 10, and a mean of 0.9. The fourth one, most similar to a normal distribution, has precision 70 and mean 0.50 (purple line).</p>
<p>In beta regression, this family of distributions is used to model observations, and covariates can have effects on both the mean and precision parameters.</p>
<p>However, beta regression only allows outcomes in the open (0, 1) interval. We know that slider scales often result in a bunching of values at the boundaries, and these boundary values might be informative of the participants’ cognition and behavior. To handle these extreme values, we can add a zero-one inflation process to the beta distribution.</p>
</section>
<section id="zero-one-inflation" class="level2">
<h2 class="anchored" data-anchor-id="zero-one-inflation">Zero-one inflation</h2>
<p>The zero-one-inflated beta (ZOIB) adds a separate discrete process for the {0, 1} values, using two additional parameters. Following convention, we shall call them <img src="https://latex.codecogs.com/png.latex?%5Calpha"> (alpha) and <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> (gamma). These parameters describe the probability of an observation being a 0 or 1 (<img src="https://latex.codecogs.com/png.latex?%5Calpha">), and conditional on that, whether the observation was 1 (<img src="https://latex.codecogs.com/png.latex?%5Cgamma">).</p>
<p>In other words, the model of outcomes under ZOIB is described by four parameters. The first is <img src="https://latex.codecogs.com/png.latex?%5Calpha">, the probability that an observation is either 0 or 1. (Thus, <img src="https://latex.codecogs.com/png.latex?1-%5Calpha"> is the probability of a non-boundary observation.) If an observation is not 0 or 1, the datum is described by the beta distribution with some mean <img src="https://latex.codecogs.com/png.latex?%5Cmu"> and precision <img src="https://latex.codecogs.com/png.latex?%5Cphi">. If an observation is 0 or 1, the probability of it being 1 is given by <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> (just like your usual model of binary outcomes, e.g.&nbsp;logistic regression). So you can think of the model as a kind of mixture of beta and logistic regressions, where the <img src="https://latex.codecogs.com/png.latex?%5Calpha"> parameter describes the mixing proportions. The mathematical representation of this model is given in <a href="https://cran.rstudio.com/web/packages/brms/vignettes/brms_families.html#zero-inflated-and-hurdle-models">this vignette</a> <span class="citation" data-cites="BurknerBrmsPackageBayesian2017">(Bürkner 2017)</span>.</p>
<p>To illustrate, I wrote a little function <code>rzoib()</code> that takes these parameters as arguments, and generates <code>n</code> random draws. Here is a histogram of 1k samples from four ZOIB distributions with various combinations of the parameters:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/index_files/figure-html/zoib-distributions-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>Four different ZOIB distributions resulting from various combinations of the parameters. (Parameter names are abbreviated; a = alpha, g = gamma, etc.)</figcaption>
</figure>
</div>
</div>
</div>
<p>Take the first (red) one. <img src="https://latex.codecogs.com/png.latex?%5Calpha"> was set to zero, and therefore there are no observations exactly at zero or 1. Because <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%200">, it doesn’t matter that <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> was set to 0.5. <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> is the conditional one probability, given that the observation was 0 or 1. Therefore, the first histogram only contains draws from a beta distribution with mean = 0.2, and precision = 6.</p>
<p>Next, take a look at the second (green) histogram. Here, <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%200.1">, so 10% of the observations will be either 0 or 1. Of these 10%, 30% are ones (<img src="https://latex.codecogs.com/png.latex?%5Cgamma%20=%200.3">). The bulk of the distribution, 90%, are draws from a beta distribution with a mean = 0.5, and precision = 3.</p>
<p>The bottom two histograms are two more combinations of the four parameters. Try to understand how their shapes are explained by the specific parameter combinations.</p>
<p>In summary, ZOIB is a reasonable model of slider scale data that can capture their major features, has support for the entire [0, 1] range of data, and does not assign density to impossible values (unlike the normal model). It also has an intuitive way of dealing with the boundary values as a separate process, thus providing more nuanced information about the outcome variable under study.</p>
<p>Next, we discuss a regression model with ZOIB as the data model: We are most interested in how other variables affect or relate to the outcome variables under study (slider scale ratings). By modeling the four parameters of the ZOIB model on predictors, ZOIB regression allows us to do just that.</p>
</section>
</section>
<section id="zoib-regression" class="level1">
<h1>ZOIB regression</h1>
<p>In this example, we examine the ZOIB model in the context of one binary predictor variable (Group A vs B, a “between subjects” manipulation).</p>
<section id="example-data" class="level2">
<h2 class="anchored" data-anchor-id="example-data">Example data</h2>
<p>To illustrate the ZOIB model in action, I simulated a data set of 100 ratings from two groups, A and B. These data are shown in Figure&nbsp;4.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div id="fig-zoib-example" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-zoib-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/index_files/figure-html/fig-zoib-example-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="288">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-zoib-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Simulated data set of two group’s slider scale ratings, with means and bootstrapped 95% CIs in blue. The ratings are jittered horizontally to reveal overlapping data points.
</figcaption>
</figure>
</div>
</div>
</div>
<p>We are interested in the extent to which Group A’s ratings differ from Group B’s ratings. It is common practice to address this question with a t-test, treating the ratings as normally distributed within each group. I compared the two groups’ means with a t-test: The difference was not statistically significant (B - A = 0.06, 95%CI = [-0.07, 0.2], p=0.340). I’ve also heard that you can do something called a Mann-Whitney U test, or a Kruskal-Wallis test when you have a categorical predictor and don’t want to assume a parametric form for your outcomes. I tried those as well. Neither of these nonparametric tests were significant (p=0.226; p=0.225). I therefore concluded that I was unable to reject the null hypothesis that Group A and Group B’s population means are not different.</p>
<p>But as can be seen from Figure&nbsp;2, the normal model makes unreasonable assumptions about these ratings. We see in Figure&nbsp;4 that there are many non-normal features in this example data set; e.g.&nbsp;many values are bunched at 0.0 and 1.0. Let’s fit the ZOIB model on these data, and see if our conclusions differ. Spoiler alert: they do.</p>
</section>
<section id="the-model" class="level2">
<h2 class="anchored" data-anchor-id="the-model">The model</h2>
<p>We will model the data as ZOIB, and use <code>group</code> as a predictor of the mean and precision of the beta distribution, the zero-one inflation probability <img src="https://latex.codecogs.com/png.latex?%5Calpha">, and the conditional one-inflation probability <img src="https://latex.codecogs.com/png.latex?%5Cgamma">. In other words, in this model <code>group</code> may affect the mean and/or precision of the assumed beta distribution of the continuous ratings (0, 1), and/or the probability with which a binary rating is given, and/or the probability that a binary rating is 1. How do we estimate this model?</p>
<p>It might not come as a surprise that we estimate the model with bayesian methods, using the R package brms <span class="citation" data-cites="BurknerBrmsPackageBayesian2017">(Bürkner 2017)</span>. Previously, I have discussed how to estimate signal detection theoretic models, “robust models”, and other multilevel models using this package. I’m a big fan of brms because of its modeling flexibility and post-processing functions: With concise syntax, you can fit a wide variety of possibly nonlinear, multivariate, and multilevel models, and analyze and visualize the models’ results.</p>
<p>Let’s load the package, and start building our model.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span></code></pre></div>
</div>
<p>The R formula syntax allows a concise representation of regression models in the form of <code>response ~ predictors</code>. For a simple normal (i.e.&nbsp;gaussian) model of the mean of <code>Ratings</code> as a function of <code>group</code>, you could write <code>Ratings ~ group, family = gaussian</code>. However, we want to predict the four parameters of the ZOIB model, and so will need to expand this notation.</p>
<p>The brms package allows modeling more than one parameter of an outcome distribution. Specifically, we want to predict so-called “distributional parameters”, and <code>bf()</code> allows predicting them in their own formulas. Implicitly, <code>Ratings ~ group</code> means that you want to model the <em>mean</em> of <code>Ratings</code> on <code>group</code>. Therefore, to model <img src="https://latex.codecogs.com/png.latex?%5Cphi">, <img src="https://latex.codecogs.com/png.latex?%5Calpha">, and <img src="https://latex.codecogs.com/png.latex?%5Cgamma">, we will give them their own regression formulas within a call to <code>bf()</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">zoib_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(</span>
<span id="cb2-2">  Rating <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group,</span>
<span id="cb2-3">  phi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group,</span>
<span id="cb2-4">  zoi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group,</span>
<span id="cb2-5">  coi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero_one_inflated_beta</span>()</span>
<span id="cb2-7">)</span></code></pre></div>
</div>
<p>The four sub-models of our model are, in order of appearance: 1. the model of the beta distribution’s mean (read, “predict <code>Rating</code>’s mean from <code>group</code>”). Then, 2. the model of <code>phi</code>; the beta distribution’s precision. 3. <code>zoi</code> is the zero-one inflation (<img src="https://latex.codecogs.com/png.latex?%5Calpha">); that is, we model the probability of a binary rating as a function of <code>group</code>. 4. <code>coi</code> is the conditional one-inflation: Given that a response was {0, 1}, the probability of it being 1 is modelled on <code>group</code>.</p>
<p>As is usual in R’s formula syntax, the intercepts of each of these formulas are implicitly included. (To make intercepts explicit, use e.g.&nbsp;<code>Rating ~ 1 + group</code>.) Therefore, this model will have 8 parameters; the intercepts are Group A’s mean, <code>phi</code>, <code>zoi</code>, and <code>coi</code>. Then, there will be a Group B parameter for each of them, indicating the extent to which the parameters differ for Group B versus Group A.</p>
<p>If <code>group</code> has a positive effect on (the mean of) <code>Rating</code>, we may conclude that the continuous rating’s mean differs as function of Group. On the other hand, if <code>coi</code> is affected by <code>group</code>, Group has an effect on the binary {0, 1} ratings. If group has no effects on any of the parameters, we throw up our hands and design a new study.</p>
<p>Finally, we specified <code>family = zero_one_inflated_beta()</code>. Just like logistic regression, ZOIB regression is a type of generalized linear model. Therefore, each distributional parameter is modeled through a link function. The mean, zoi, and coi parameters are modeled through a logit link function. Phi is modeled through a log link function. These link functions can be changed by giving named arguments to <code>zero_one_inflated_beta()</code>. It is important to keep in mind the specific link functions, we will need them when interpreting the model’s parameters.</p>
<p>To estimate this model, we pass the resulting <code>zoib_model</code> to <code>brm()</code>, with a data frame from the current R environment, 4 CPU cores for speed, and a file argument to save the resulting model to disk. The last two arguments are optional.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> zoib_model,</span>
<span id="cb3-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat,</span>
<span id="cb3-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb3-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brm-zoib"</span></span>
<span id="cb3-6">)</span></code></pre></div>
</div>
<p>brms estimates the regression model using bayesian methods: It will return random draws from the parameters’ posterior distribution. It takes less than a minute to draw samples from this model. Let’s then interpret the estimated parameters (i.e.&nbsp;the numerical summaries of the posterior distribution):</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit)</span>
<span id="cb4-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  Family: zero_one_inflated_beta </span></span>
<span id="cb4-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Links: mu = logit; phi = log; zoi = logit; coi = logit </span></span>
<span id="cb4-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Formula: Rating ~ group </span></span>
<span id="cb4-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##          phi ~ group</span></span>
<span id="cb4-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##          zoi ~ group</span></span>
<span id="cb4-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##          coi ~ group</span></span>
<span id="cb4-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    Data: dat (Number of observations: 100) </span></span>
<span id="cb4-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;</span></span>
<span id="cb4-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##          total post-warmup draws = 4000</span></span>
<span id="cb4-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb4-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Regression Coefficients:</span></span>
<span id="cb4-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##               Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS</span></span>
<span id="cb4-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Intercept         0.33      0.16     0.01     0.63 1.00     6253     3166</span></span>
<span id="cb4-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## phi_Intercept     1.49      0.24     1.01     1.94 1.00     5683     3040</span></span>
<span id="cb4-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## zoi_Intercept    -0.79      0.32    -1.44    -0.18 1.00     6968     2958</span></span>
<span id="cb4-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## coi_Intercept     0.62      0.57    -0.46     1.79 1.00     6660     2940</span></span>
<span id="cb4-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## groupB            0.91      0.21     0.52     1.33 1.00     5658     2983</span></span>
<span id="cb4-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## phi_groupB        0.49      0.33    -0.16     1.14 1.00     5273     3223</span></span>
<span id="cb4-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## zoi_groupB        0.08      0.43    -0.76     0.91 1.00     6631     2955</span></span>
<span id="cb4-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## coi_groupB       -0.86      0.75    -2.36     0.58 1.00     7174     2930</span></span>
<span id="cb4-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb4-23"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS</span></span>
<span id="cb4-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## and Tail_ESS are effective sample size measures, and Rhat is the potential</span></span>
<span id="cb4-25"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## scale reduction factor on split chains (at convergence, Rhat = 1).</span></span></code></pre></div>
</div>
<p>First, the summary of this model prints a paragraph of information about the model, such as the outcome family (ZOIB), link functions, etc. The regression coefficients are found under the “Population-Level Effects:” header. The columns of this section are “Estimate”, the posterior mean or point estimate of the parameter. “Est.Error”, the posterior standard deviation, or so called standard error of the parameter. Then, the lower and upper limit of the 95% Credible Interval. The two last columns are diagnostics of the model fitting procedure.</p>
<p>The first four rows of this describe the parameters for the baseline group (Group A). <code>Intercept</code> is the logit-transformed mean of the beta distribution for Group A’s ratings (the subset of ratings that were (0, 1)). Next, <code>phi_Intercept</code> describes the precision of the beta distribution fitted to Group A’s slider responses, on the scale of the (log) link function. <code>zoi_Intercept</code> is the zero or one inflation of Group A’s data, on the logit scale. <code>coi_Intercept</code> is the conditional one inflation; out of the 0 or 1 ratings in Group A’s data, describing the proportion of ones (out of the 0/1 responses)?</p>
<p>These parameters are described on the link scale, so for each of them, we can use the inverse link function to transform them to the response scale. Precision (<code>phi_Intercept</code>) was modeled on the log scale. Therefore, we can convert it back to the original scale by exponentiating. For the other parameters, which were modeled on the logit scale, we can use the inverse, which is <code>plogis()</code>.</p>
<p>However, before converting the parameters, it is important to note that the estimates displayed above are summaries (means, quantiles) of the posterior draws of the parameters on the link function scale. Therefore, we cannot simply convert the summaries. Instead, we must transform each of the posterior samples, and then re-calculate the summaries. The following code accomplishes this “transform-then-summarize” procedure for each of the four parameters:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">posterior_samples</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pars =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_"</span>)[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_at</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_phi_Intercept"</span>), exp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_at</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_phi_Intercept"</span>), plogis) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">posterior_summary</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Parameter"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<table class="caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">Parameter</th>
<th style="text-align: right;">Estimate</th>
<th style="text-align: right;">Est.Error</th>
<th style="text-align: right;">Q2.5</th>
<th style="text-align: right;">Q97.5</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">b_Intercept</td>
<td style="text-align: right;">0.58</td>
<td style="text-align: right;">0.04</td>
<td style="text-align: right;">0.50</td>
<td style="text-align: right;">0.65</td>
</tr>
<tr class="even">
<td style="text-align: left;">b_phi_Intercept</td>
<td style="text-align: right;">4.57</td>
<td style="text-align: right;">1.07</td>
<td style="text-align: right;">2.74</td>
<td style="text-align: right;">6.99</td>
</tr>
<tr class="odd">
<td style="text-align: left;">b_zoi_Intercept</td>
<td style="text-align: right;">0.32</td>
<td style="text-align: right;">0.07</td>
<td style="text-align: right;">0.19</td>
<td style="text-align: right;">0.45</td>
</tr>
<tr class="even">
<td style="text-align: left;">b_coi_Intercept</td>
<td style="text-align: right;">0.64</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">0.39</td>
<td style="text-align: right;">0.86</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>We can then interpret these summaries, beginning with <code>b_Intercept</code>. This is the estimated mean of the beta distribution fitted to Group A’s (0, 1) rating scale responses (with its standard error, lower- and upper limits of the 95% CI). Then, <code>b_Phi_Intercept</code> is the precision of the beta distribution. <code>zoi</code> is the zero-one inflation, and <code>coi</code> the conditional one inflation.</p>
<p>To make <code>b_zoi_Intercept</code> concrete, we should be able to compare its posterior mean to the observed proportion of 0/1 values in the data:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Rating[dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb6-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] 0.311</span></span></code></pre></div>
</div>
<p>Above we calculated the proportion of zeros and ones in the data set, and found that it matches the estimated value. Similarly, for <code>coi</code>, we can find the corresponding value from the data:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Rating[dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Rating <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb7-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] 0.643</span></span></code></pre></div>
</div>
<p>Let’s get back to the model summary output. The following four parameters are the effects of being in group B on these parameters. Most importantly, <code>groupB</code> is the effect of group B (versus group A) on the mean of the ratings’ assumed beta distribution, in the logit scale. Immediately, we can see that the parameter’s 95% Credible Interval does not include zero. Traditionally, this parameter would be called “significant”; group B’s (0, 1) ratings are on average greater than group A’s.</p>
<p>To transform this effect back to the data scale, we can again use <code>plogis()</code>. However, it is important to keep in mind that the effect’s size on the original scale depends on the intercept, getting smaller as the intercept increases (just like in any other generalized linear model.) The following bit of code transforms this effect and its uncertainty back to the original scale.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">h <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B - A"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plogis(Intercept + groupB) = plogis(Intercept)"</span>)</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span>(fit, h)</span>
<span id="cb8-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Hypothesis Tests for class b:</span></span>
<span id="cb8-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio Post.Prob Star</span></span>
<span id="cb8-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1      B - A     0.19      0.04     0.11     0.29         NA        NA    *</span></span>
<span id="cb8-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ---</span></span>
<span id="cb8-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.</span></span>
<span id="cb8-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## '*': For one-sided hypotheses, the posterior probability exceeds 95%;</span></span>
<span id="cb8-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## for two-sided hypotheses, the value tested against lies outside the 95%-CI.</span></span>
<span id="cb8-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Posterior probabilities of point hypotheses assume equal prior probabilities.</span></span></code></pre></div>
</div>
<p>The data were simulated with the <code>rzoib()</code> function, and I set <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%200.25,%20%5Cgamma%20=%200.5,%20%5Cmu%20=%200.6%20+%200.15%5Cmbox%7BgroupB%7D,%20%5Cphi%20=%205">. Therefore, the results of the t-tests and nonparametric tests were misses; a true effect was missed. On the other hand, the ZOIB regression model detected the true effect of group on the beta distribution’s mean.</p>
<p>Finally, let’s visualize this key finding using the <code>conditional_effects()</code> function from brms.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conditional_effects</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpar =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mu"</span>),</span>
<span id="cb9-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">points =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb9-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point_args =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-5">)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ex-me" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-ex-me-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/index_files/figure-html/fig-ex-me-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-ex-me-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Estimated mu parameters from the example ZOIB fit, as filled points and error bars (95% CIs), with the original data (empty circles).
</figcaption>
</figure>
</div>
</div>
</div>
<p>Comparing Figure&nbsp;5 to Figure&nbsp;4 reveals the fundamental difference of the normal t-test model, and the ZOIB model: The ZOIB regression (Figure&nbsp;5) has found a large difference between the continuous part of the slider ratings’ means because it has treated the data with an appropriate model. By conflating the continuous and binary data, the t-test did not detect this difference.</p>
<p>In conclusion, this example showed that ZOIB results in more informative, and potentially more accurate, inferences from analog scale (“slider”) data. Of course, in this simulation we had the benefit of knowing the true state of matters: The data were simulated from a ZOIB model. Nevertheless, we have reasoned that by respecting the major features of slider scale data, the ZOIB is a more accurate representation of it, and was therefore able to detect a difference where the t-test did not. Next, I put this conjecture to a test by conducting a small simulation study.</p>
</section>
</section>
<section id="simulation-compare-zoib-and-t-test-performances" class="level1">
<h1>Simulation: Compare ZOIB and t-test performances</h1>
<p>To compare the performance of the t-test and ZOIB in a little bit more detail, I conducted a small simulation study. I simulated 100 data sets of 200 ratings from two independent groups, from the ZOIB model (100 ratings per group). I set <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%200.2,%20%5Cgamma%20=%200.7,%20%5Cmu%20=%200.6%20+%200.1%5Cmbox%7BgroupB%7D,%20%5Cphi%20=%205">; that is, there was a small effect of group on the mean of the beta distribution, and all other parameters were constant across groups. A sample of the resulting data sets is shown in Figure&nbsp;6.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div id="fig-sim-examplesets" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-sim-examplesets-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/index_files/figure-html/fig-sim-examplesets-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-sim-examplesets-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: Six randomly selected simulated data sets. Points are individual ratings (jittered to show overlapping points), while blue symbols indicate the means and bootstrapped 95% CIs.
</figcaption>
</figure>
</div>
</div>
</div>
<p>I first conducted an independent samples, unequal variances t-test on each of the 100 simulated data sets, comparing the two groups’ mean ratings. 35% of these t-tests were significantly positive at the .05 level. That is, the power of the t-test in this simulation was about 35%. (Uncertainty in this value is moderate, because I only did 100 simulation runs.)</p>
<p>I then estimated the ZOIB model for each of the 100 simulated data sets. Statistical significance does not play a role in Bayesian statistics, but to most easily compare the results of these two models, I calculated the proportion of simulations for which the estimated Group on <img src="https://latex.codecogs.com/png.latex?%5Cmu"> effect’s 95% Credible Interval was entirely above zero. If a 95% CI does not include zero, disrespecting the philosophical differences of bayesian and frequentist statistics, I may say that the estimate is “significant”.</p>
<p>This parameter was significantly greater than zero in 65% of the ZOIB models estimated on the same 100 simulated data sets. That is, the power of this model to detect an effect was much greater than the power of the t-test. These results are illustrated in Figure&nbsp;7.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div id="fig-sims-compare" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-sims-compare-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/index_files/figure-html/fig-sims-compare-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-sims-compare-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;7: Results of the simulation study. Top: the estimated mean difference and 95% CI of the two groups’ ratings, as estimated by a t-test. Red = not statistically significant; blue = statistically significant. The data sets are ordered on the x axis on the estimated mean difference. Bottom: simulation results of the ZOIB model. Same as the top panel, but the estimated parameter is the difference between the two group’s mu parameters of the beta distribution. (I back-transformed the mu parameter from the logit scale to the data scale to make the results numerically more comparable across the t-test and ZOIB models.) In both panels, the horizontal green line indicates the true effect used in the simulations.
</figcaption>
</figure>
</div>
</div>
</div>
<p>As can be seen in this figure, in this particular setup, the t-tests severely underperformed in detecting a true effect when compared to the ZOIB model. Of course, this is to be expected, because the data were generated from the ZOIB model.</p>
<p>Out there in the wild, which of these models is closer to the true data generating process for slider scale ratings? Normal models, or ZOIB? (Or, most likely, some other class of models?) As we have seen, normal models may be poor representations of bounded and skewed slider scale data. It is therefore possible that the routine use of normal models in analyzing slider scale data can result in missing true effects at a rate higher than indicated by conventional power analyses.</p>
</section>
<section id="discussion" class="level1">
<h1>Discussion</h1>
<p>I have not extensively reviewed the performance of the ZOIB model in this blog post. Neither did I analyze real slider scale data. Therefore, I can not and would not recommend exclusively favoring the ZOIB model over normal models for the analysis of slider scale data. However, I can recommend at least trying ZOIB for your own slider scale data, and thinking about what models might best fit your data if they appear non normal.</p>
<section id="limitations" class="level2">
<h2 class="anchored" data-anchor-id="limitations">Limitations</h2>
<p>There are many limitations to the current discussion, and the simulation studies should be considerably expanded to more realistic and variable situations.</p>
<p>One limitation of the ZOIB model might be what I here discussed as its main benefit. ZOIB separates the binary and continuous processes, such that a predictor’s effect on one or both of them are independent in the model. However, it is likely that these two processes are somehow correlated. Thus, ZOIB does not give only one “effect” of a predictor on the ratings, but two, one for the continuous part, and one for the binary. By not getting a single effect, if nothing else, the model is more complex and probably more difficult to analyze and/or explain.</p>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further reading</h2>
<p>The beta regression model has previously been discussed as a reasonable model of data in the open (0, 1) interval <span class="citation" data-cites="FerrariBetaRegressionModelling2004">(Ferrari and Cribari-Neto 2004)</span>. It’s application in psychological studies has also been discussed by <span class="citation" data-cites="SmithsonBetterLemonSqueezer2006 VerkuilenMixedMixtureRegression2012">(Smithson and Verkuilen 2006; see also Verkuilen and Smithson 2012)</span>. These earlier papers recommended that values at the 0 and 1 boundaries be somehow transformed to make the data suitable for the model, but transforming the data such that a model can be fitted seems like a bad idea.</p>
<p>Mixtures of beta and discrete models were discussed by <span class="citation" data-cites="OspinaInflatedBetaDistributions2008">Ospina and Ferrari (2008)</span>, and an R package for estimation of the ZOIB model was introduced by <span class="citation" data-cites="LiuZoibPackageBayesian2015">Liu and Kong (2015)</span>. <span class="citation" data-cites="LiuReviewComparisonBayesian2018">Liu and Eugenio (2018)</span> found that ZOIB models are better estimated with Bayesian methods than with maximum likelihood methods.</p>
<p>More information about the brms package can be found in <span class="citation" data-cites="BurknerBrmsPackageBayesian2017">Bürkner (2017)</span>, and in the excellent vignettes at <a href="https://cran.rstudio.com/web/packages/brms/" class="uri">https://cran.rstudio.com/web/packages/brms/</a>.</p>



</section>
</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-BurknerBrmsPackageBayesian2017" class="csl-entry">
Bürkner, Paul-Christian. 2017. <span>“Brms: <span>An</span> <span>R</span> <span>Package</span> for <span>Bayesian</span> <span>Multilevel</span> <span>Models</span> <span>Using</span> <span>Stan</span>.”</span> <em>Journal of Statistical Software</em> 80 (1): 1–28. <a href="https://doi.org/10.18637/jss.v080.i01">https://doi.org/10.18637/jss.v080.i01</a>.
</div>
<div id="ref-BurknerOrdinalRegressionModels2019" class="csl-entry">
Bürkner, Paul-Christian, and Matti Vuorre. 2019. <span>“Ordinal <span>Regression</span> <span>Models</span> in <span>Psychology</span>: <span>A</span> <span>Tutorial</span>.”</span> <em>Advances in Methods and Practices in Psychological Science</em> 2 (1): 77–101. <a href="https://doi.org/10.1177/2515245918823199">https://doi.org/10.1177/2515245918823199</a>.
</div>
<div id="ref-FerrariBetaRegressionModelling2004" class="csl-entry">
Ferrari, Silvia, and Francisco Cribari-Neto. 2004. <span>“Beta <span>Regression</span> for <span>Modelling</span> <span>Rates</span> and <span>Proportions</span>.”</span> <em>Journal of Applied Statistics</em> 31 (7): 799–815. <a href="https://doi.org/10.1080/0266476042000214501">https://doi.org/10.1080/0266476042000214501</a>.
</div>
<div id="ref-LiddellAnalyzingOrdinalData2018" class="csl-entry">
Liddell, Torrin M., and John K. Kruschke. 2018. <span>“Analyzing Ordinal Data with Metric Models: <span>What</span> Could Possibly Go Wrong?”</span> <em>Journal of Experimental Social Psychology</em> 79 (November): 328–48. <a href="https://doi.org/10.1016/j.jesp.2018.08.009">https://doi.org/10.1016/j.jesp.2018.08.009</a>.
</div>
<div id="ref-LiuReviewComparisonBayesian2018" class="csl-entry">
Liu, Fang, and Evercita C Eugenio. 2018. <span>“A Review and Comparison of <span>Bayesian</span> and Likelihood-Based Inferences in Beta Regression and Zero-or-One-Inflated Beta Regression.”</span> <em>Statistical Methods in Medical Research</em> 27 (4): 1024–44. <a href="https://doi.org/10.1177/0962280216650699">https://doi.org/10.1177/0962280216650699</a>.
</div>
<div id="ref-LiuZoibPackageBayesian2015" class="csl-entry">
Liu, Fang, and Yunchuan Kong. 2015. <span>“Zoib: <span>An</span> <span>R</span> <span>Package</span> for <span>Bayesian</span> <span>Inference</span> for <span>Beta</span> <span>Regression</span> and <span>Zero</span>/<span>One</span> <span>Inflated</span> <span>Beta</span> <span>Regression</span>.”</span> <em>The R Journal</em> 7 (2): 34–51. <a href="https://journal.r-project.org/archive/2015/RJ-2015-019/index.html">https://journal.r-project.org/archive/2015/RJ-2015-019/index.html</a>.
</div>
<div id="ref-OspinaInflatedBetaDistributions2008" class="csl-entry">
Ospina, Raydonal, and Silvia L. P. Ferrari. 2008. <span>“Inflated Beta Distributions.”</span> <em>Statistical Papers</em> 51 (1): 111. <a href="https://doi.org/10.1007/s00362-008-0125-4">https://doi.org/10.1007/s00362-008-0125-4</a>.
</div>
<div id="ref-SmithsonBetterLemonSqueezer2006" class="csl-entry">
Smithson, Michael, and Jay Verkuilen. 2006. <span>“A Better Lemon Squeezer? <span>Maximum</span>-Likelihood Regression with Beta-Distributed Dependent Variables.”</span> <em>Psychological Methods</em> 11 (1): 54–71. <a href="https://doi.org/10.1037/1082-989X.11.1.54">https://doi.org/10.1037/1082-989X.11.1.54</a>.
</div>
<div id="ref-VerkuilenMixedMixtureRegression2012" class="csl-entry">
Verkuilen, Jay, and Michael Smithson. 2012. <span>“Mixed and <span>Mixture</span> <span>Regression</span> <span>Models</span> for <span>Continuous</span> <span>Bounded</span> <span>Responses</span> <span>Using</span> the <span>Beta</span> <span>Distribution</span>.”</span> <em>Journal of Educational and Behavioral Statistics</em> 37 (1): 82–113. <a href="https://doi.org/10.3102/1076998610396895">https://doi.org/10.3102/1076998610396895</a>.
</div>
<div id="ref-YarkoniChoosingPredictionExplanation2017" class="csl-entry">
Yarkoni, Tal, and Jacob Westfall. 2017. <span>“Choosing <span>Prediction</span> <span>Over</span> <span>Explanation</span> in <span>Psychology</span>: <span>Lessons</span> <span>From</span> <span>Machine</span> <span>Learning</span>.”</span> <em>Perspectives on Psychological Science</em> 12 (6): 1100–1122. <a href="https://doi.org/10.1177/1745691617693393">https://doi.org/10.1177/1745691617693393</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Technically, normal models assume that the residuals are normally distributed. I will keep referring to data being normally distributed or not, for clarity.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2019,
  author = {Vuorre, Matti},
  title = {How to Analyze Visual Analog (Slider) Scale Data?},
  date = {2019-02-18},
  url = {https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2019" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2019. <span>“How to Analyze Visual Analog (Slider) Scale
Data?”</span> February 18, 2019. <a href="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/">https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/</a>.
</div></div></section></div> ]]></description>
  <category>psychology</category>
  <category>statistics</category>
  <category>tutorial</category>
  <category>R</category>
  <category>brms</category>
  <guid>https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/</guid>
  <pubDate>Sun, 17 Feb 2019 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/2019-02-18-analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/index_files/figure-html/fig-beta-distributions-1.png" medium="image" type="image/png" height="70" width="144"/>
</item>
<item>
  <title>Combine ggplots with patchwork</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p><a href="https://ggplot2.tidyverse.org/">ggplot2</a> is the best R package for data visualization, and has powerful features for “facetting” plots into small multiples based on categorical variables.</p>
<section id="facetting-figures-into-small-multiples" class="level2">
<h2 class="anchored" data-anchor-id="facetting-figures-into-small-multiples">Facetting figures into small multiples</h2>
<p>This “facetting” is useful for showing the same figure, e.g.&nbsp;a bivariate relationship, at multiple levels of some other variable</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mtcars, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(mpg, disp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cyl"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>But if you would like to get a figure that consists of multiple panels of unrelated plots—with different variables on the X and Y axes, potentially from different data sources—things become more complicated.</p>
</section>
<section id="combining-arbitrary-ggplots" class="level2">
<h2 class="anchored" data-anchor-id="combining-arbitrary-ggplots">Combining arbitrary ggplots</h2>
<p>Say you have these three figures</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mtcars)</span>
<span id="cb2-2">  </span>
<span id="cb2-3">a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(mpg, disp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(vs)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb2-7"></span>
<span id="cb2-8">b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(disp, gear, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> gear) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-10">  ggstance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxploth</span>()</span>
<span id="cb2-11"></span>
<span id="cb2-12">c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(hp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_density</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"area"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</div>
<p>How would you go about combining them? There are a few options, such as <code>grid.arrange()</code> in the <a href="https://cran.r-project.org/web/packages/gridExtra/index.html">gridExtra</a> package, and <code>plot_grid()</code> in the <a href="https://cran.r-project.org/web/packages/cowplot/vignettes/plot_grid.html">cowplot</a> package. Today, I’ll point out a newer package that introduces a whole new syntax for combining together, <a href="https://github.com/thomasp85/patchwork">patchwork</a>.</p>
</section>
<section id="patchwork" class="level2">
<h2 class="anchored" data-anchor-id="patchwork">Patchwork</h2>
<p>patchwork is not yet on CRAN, so install it from GitHub:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("devtools")</span></span>
<span id="cb3-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thomasp85/patchwork"</span>)</span></code></pre></div>
</div>
<p>Once you load the package, you can add ggplots together by adding them with <code>+</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb4-2">a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Basically, you can add ggplots together as if they were geoms inside a single ggplot. However, there’s more. <code>|</code> specifies side-by-side addition</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>And <code>/</code> is for adding plots under the previous plot</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> c</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>These operators can be used to flexibly compose figures from multiple components, using parentheses to group plots and <code>+</code>, <code>|</code>, and <code>/</code> to add the groups together</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">(a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> c</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Use <code>plot_annotation()</code> to add tags, and <code>&amp;</code> to pass theme elements to all plot elements in a composition</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">(a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> c <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_annotation</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tag_levels =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/index_files/figure-html/mainfig-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>Tweak this a little bit and throw it in a manuscript.</figcaption>
</figure>
</div>
</div>
</div>
<p>There are many more examples on <a href="https://github.com/thomasp85/patchwork">patchwork’s GitHub page</a>. I’ve found this package more useful in composing figures out of multiple plots than its alternatives, mainly because of the concise but powerful syntax.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2018,
  author = {Vuorre, Matti},
  title = {Combine Ggplots with Patchwork},
  date = {2018-12-13},
  url = {https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2018" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2018. <span>“Combine Ggplots with Patchwork.”</span>
December 13, 2018. <a href="https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/">https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/</a>.
</div></div></section></div> ]]></description>
  <category>data science</category>
  <category>visualization</category>
  <category>ggplot2</category>
  <category>R</category>
  <guid>https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/</guid>
  <pubDate>Wed, 12 Dec 2018 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/2018-12-13-rpihkal-combine-ggplots-with-patchwork/index_files/figure-html/mainfig-1.png" medium="image" type="image/png" height="82" width="144"/>
</item>
<item>
  <title>Glue your strings together</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/2018-12-12-rpihkal-stop-pasting-and-start-gluing/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>We’ve all been there; writing <a href="https://github.com/crsh/papaja">manuscripts</a> with <a href="https://rmarkdown.rstudio.com/">R Markdown</a> and dreaming of easy in-text code bits for reproducible reporting. Say you’ve fit a regression model to your data, and would then like to report the model’s parameters in your text, without writing the values in the text. (If the data or model changes, you’d need to re-type the values again.)</p>
<p>For example, you can print this model summary easily in the R console:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> disp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = mpg ~ disp, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.8922 -2.2022 -0.9631  1.6272  7.2305 

Coefficients:
             Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 29.599855   1.229720  24.070  &lt; 2e-16 ***
disp        -0.041215   0.004712  -8.747 9.38e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.251 on 30 degrees of freedom
Multiple R-squared:  0.7183,    Adjusted R-squared:  0.709 
F-statistic: 76.51 on 1 and 30 DF,  p-value: 9.38e-10</code></pre>
</div>
</div>
<p>And to cite those values in the text body of your manuscript, you can write the text in R Markdown like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">The model intercept was <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r round(coef(fit)[1], 2)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, great.</span></code></pre></div>
</div>
<p>Which would show up in your manuscript like this:</p>
<p>The model intercept was 29.6, great.</p>
<section id="paste" class="level2">
<h2 class="anchored" data-anchor-id="paste">Paste</h2>
<p>However, when you want to present more information, such as the parameter estimate with its standard error, you will have to <code>paste()</code> those strings together:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">(x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)   29.600      1.230  24.070        0
disp          -0.041      0.005  -8.747        0</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">intercept <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b = "</span>, x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", SE = "</span>, x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
</div>
<p>You can then just cite the <code>intercept</code> object in your text body:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">The model intercept was very very <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">significant</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r intercept</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>).</span></code></pre></div>
</div>
<p>Which would render in your PDF or word document as:</p>
<p>The model intercept was very very significant (b = 29.6, SE = 1.23).</p>
<p><code>paste()</code> is a base R function, and as such very robust and reproducible–all R installations will have it. However, as such it has a fairly terrible syntax where you have to quote strings, separate strings and variables with commas, etc. This task is made much easier with <code>glue()</code>.</p>
</section>
<section id="glue" class="level2">
<h2 class="anchored" data-anchor-id="glue">Glue</h2>
<p><a href="https://glue.tidyverse.org/">glue</a> is a small R package that allows you to join strings together in a neat, pythonific way. It replaces the need for quoting and separating arguments in <code>paste()</code>, by asking you to wrap variables in curly braces. Here’s how to do the above pasting with glue:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(glue)</span>
<span id="cb8-2">intercept <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b = {x[1, 1]}, SE = {x[1, 2]}"</span>)</span></code></pre></div>
</div>
<p>Which gives you the same string as the much messier <code>paste()</code> approach: b = 29.6, SE = 1.23</p>
<section id="glue-with-data-frames" class="level3">
<h3 class="anchored" data-anchor-id="glue-with-data-frames">Glue with data frames</h3>
<p>Glue has other neat (more advanced) features, such as gluing variables row-by-row in a data frame:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue_data</span>(</span>
<span id="cb9-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{rownames(.)}'s point estimate was {Estimate}, with an SE of {`Std. Error`}."</span></span>
<span id="cb9-5">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(Intercept)'s point estimate was 29.6, with an SE of 1.23.
disp's point estimate was -0.041, with an SE of 0.005.</code></pre>
</div>
</div>
</section>
</section>
<section id="appendix-papaja" class="level2">
<h2 class="anchored" data-anchor-id="appendix-papaja">Appendix: papaja</h2>
<p>For some models (like our simple linear model example here), the <a href="https://github.com/crsh/papaja">papaja R package</a> (which deserves its own rpihkal post!) has very useful shortcuts</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(papaja)</span>
<span id="cb11-2">intercept <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apa_print</span>(fit)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>estimate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Intercept</span></code></pre></div>
</div>
<p>If you now cite <code>intercept</code> in the text body of your manuscript, it renders into <img src="https://latex.codecogs.com/png.latex?%5CLaTeX"> (which is interpreted nicely if you are outputting PDF or Word documents; here on this website it looks odd):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">The model intercept was rather <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">significant</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r intercept</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>).</span></code></pre></div>
</div>
<p>The model intercept was rather significant (<img src="https://latex.codecogs.com/png.latex?b%20=%2029.60">, 95% CI <img src="https://latex.codecogs.com/png.latex?%5B27.09,%2032.11%5D">).</p>
<p>Read more about glue at <a href="https://glue.tidyverse.org/" class="uri">https://glue.tidyverse.org/</a>.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2018,
  author = {Vuorre, Matti},
  title = {Glue Your Strings Together},
  date = {2018-12-12},
  url = {https://vuorre.com/posts/2018-12-12-rpihkal-stop-pasting-and-start-gluing/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2018" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2018. <span>“Glue Your Strings Together.”</span> December
12, 2018. <a href="https://vuorre.com/posts/2018-12-12-rpihkal-stop-pasting-and-start-gluing/">https://vuorre.com/posts/2018-12-12-rpihkal-stop-pasting-and-start-gluing/</a>.
</div></div></section></div> ]]></description>
  <category>data science</category>
  <category>R</category>
  <guid>https://vuorre.com/posts/2018-12-12-rpihkal-stop-pasting-and-start-gluing/</guid>
  <pubDate>Tue, 11 Dec 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Estimating Signal Detection Models with regression using the brms R package</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/sdt-regression/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>R setup</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(knitr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tinytable)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdist)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggnewscale)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(posterior)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(distributional)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(latex2exp)</span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(</span>
<span id="cb1-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">brms.backend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BRMS_BACKEND"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rstan"</span>),</span>
<span id="cb1-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">brms.threads =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BRMS_THREADS"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb1-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mc.cores =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MAX_CORES"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)),</span>
<span id="cb1-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">brms.short_summary =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb1-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tinytable_tt_digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tinytable_format_num_fmt =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"decimal"</span>,</span>
<span id="cb1-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tinytable_format_num_zero =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb1-23">)</span>
<span id="cb1-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(</span>
<span id="cb1-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_linedraw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is_html_output</span>(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb1-27">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-28">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-29">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span>
<span id="cb1-30">    )</span>
<span id="cb1-31">)</span></code></pre></div>
</details>
</div>
<section id="signal-detection-theory" class="level2">
<h2 class="anchored" data-anchor-id="signal-detection-theory">Signal Detection Theory</h2>
<p>Signal Detection Theory (SDT) is a framework for studying, understanding, and modeling a wide range of psychological phenomena <span class="citation" data-cites="greenSignalDetectionTheory1966">(Green and Swets 1966)</span>. Its origins are in the psychophysical study of perception, but it has since been used to understand memory, decision making, and other domains. So what is SDT?</p>
<blockquote class="blockquote">
<p>“Detection theory entered psychology as a way to explain detection experiments, in which weak visual or auditory signals must be distinguished from a ‘noisy’ background.” <span class="citation" data-cites="macmillan_detection_2005">(Macmillan and Creelman 2005, xiii)</span></p>
</blockquote>
<p>To unpack this definition, consider a recognition memory experiment where participants view a series of images, some of which they have not seen before (new items) and some of which they have seen before (old items). For each item, participants decide whether they have seen the item before (and thus give an “old” response) or not (a “new” response).</p>
<p>A straightforward analysis of data from this experiment focuses on accuracy: What percentage of items participants correctly classified as old or new? Such analyses of accuracy, however, are suboptimal because they conflate two critical factors, fundamental to SDT, that plausibly underlie participants’ responses: Response bias (commonly termed <em>c</em> for <em>criterion</em>) and the ability to discriminate old from new items (commonly termed <em>d’</em> for <em>discriminability</em>). Through directly modeling these two processes, SDT has repeatedly been shown to explain data better than models implied by analyses of accuracy <span class="citation" data-cites="macmillan_detection_2005 kellenTestingFoundationsSignal2021">(Macmillan and Creelman 2005, 13; Kellen et al. 2021)</span>. Why?</p>
<p>In this hypothetical experiment, participants might respond “old” for (at least) two reasons: A tendency to respond “old”, and an underlying ability to discriminate previously seen items from new items. The conceptual basis of SDT (keeping with a memory task example) is that each stimulus elicits some experience of “familiarity” (commonly termed signal strength or <em>evidence</em>). Because of noise in the environment and perceptual, cognitive, and other information processors involved, even for a fixed stimulus the resulting evidence is not constant but instead varies from trial to trial.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example data (pid=7)</span></span>
<span id="cb2-2">maxl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Highest likelihood</span></span>
<span id="cb2-3">zhr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.866</span></span>
<span id="cb2-4">zfr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.100</span></span>
<span id="cb2-5">crit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(zhr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> zfr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-6">dprime <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> zhr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> zfr</span>
<span id="cb2-7">cl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(dprime <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Likelihood at intersection</span></span>
<span id="cb2-8">ry <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">01</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Response type annotation y-coordinate</span></span>
<span id="cb2-9"></span>
<span id="cb2-10">pa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(</span>
<span id="cb2-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, maxl)</span>
<span id="cb2-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb2-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evidence"</span>,</span>
<span id="cb2-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, crit, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb2-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>),</span>
<span id="cb2-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb2-19">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb2-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>,</span>
<span id="cb2-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>))</span>
<span id="cb2-23">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Noise distribution</span></span>
<span id="cb2-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(</span>
<span id="cb2-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Noise trials"</span>,</span>
<span id="cb2-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dark2"</span></span>
<span id="cb2-28">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb2-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb2-31">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb2-32">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(</span>
<span id="cb2-33">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> crit, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"False alarm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Correct rejection"</span>)</span>
<span id="cb2-34">      )</span>
<span id="cb2-35">    ),</span>
<span id="cb2-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb2-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span>,</span>
<span id="cb2-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb2-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normalize =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb2-41">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new_scale_fill</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(</span>
<span id="cb2-44">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Signal trials"</span>,</span>
<span id="cb2-45">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set1"</span>,</span>
<span id="cb2-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-47">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-48">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Signal distribution</span></span>
<span id="cb2-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb2-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb2-51">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> dprime, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb2-52">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(</span>
<span id="cb2-53">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> crit, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Miss"</span>)</span>
<span id="cb2-54">      )</span>
<span id="cb2-55">    ),</span>
<span id="cb2-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb2-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slab_alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span>,</span>
<span id="cb2-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb2-59">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-60">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normalize =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb2-61">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-62">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Annotate dprime</span></span>
<span id="cb2-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb2-64">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segment"</span>,</span>
<span id="cb2-65">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb2-66">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> dprime,</span>
<span id="cb2-67">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> maxl,</span>
<span id="cb2-68">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> maxl,</span>
<span id="cb2-69">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(</span>
<span id="cb2-70">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>),</span>
<span id="cb2-71">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"closed"</span>,</span>
<span id="cb2-72">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ends =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"both"</span></span>
<span id="cb2-73">    )</span>
<span id="cb2-74">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-75">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb2-76">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb2-77">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d'"</span>,</span>
<span id="cb2-78">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> dprime <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb2-79">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> maxl,</span>
<span id="cb2-80">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb2-81">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-82">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-83">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Annotate criterion</span></span>
<span id="cb2-84">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb2-85">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> crit,</span>
<span id="cb2-86">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span></span>
<span id="cb2-87">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-88">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Annotate response types</span></span>
<span id="cb2-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb2-90">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segment"</span>,</span>
<span id="cb2-91">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> crit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb2-92">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> crit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span>,</span>
<span id="cb2-93">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> ry,</span>
<span id="cb2-94">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> ry,</span>
<span id="cb2-95">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>,</span>
<span id="cb2-96">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"closed"</span>),</span>
<span id="cb2-97">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-98">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb2-99">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb2-100">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'"Yes"'</span>,</span>
<span id="cb2-101">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> crit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>,</span>
<span id="cb2-102">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> ry,</span>
<span id="cb2-103">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-104">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-105">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb2-106">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segment"</span>,</span>
<span id="cb2-107">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> crit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb2-108">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> crit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span>,</span>
<span id="cb2-109">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> ry,</span>
<span id="cb2-110">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> ry,</span>
<span id="cb2-111">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>,</span>
<span id="cb2-112">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"closed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ends =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"last"</span>)</span>
<span id="cb2-113">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-114">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb2-115">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb2-116">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'"No"'</span>,</span>
<span id="cb2-117">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> crit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>,</span>
<span id="cb2-118">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> ry,</span>
<span id="cb2-119">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-120">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-121">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-122">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-123">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-124">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span></span>
<span id="cb2-125">  )</span>
<span id="cb2-126">pa</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-sdt-example" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-sdt-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-sdt-example-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="576">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-sdt-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Illustration of subjective evidence distributions postulated by Signal Detection Theory. Each stimulus presentation elicits a degree of evidence, which is assumed to be normally distributed as a sum of many unknown sources of noise in the information processing flow from stimulus to consciousness. On noise trials (left; e.g.&nbsp;new items in a memory experiment), the evidence distribution is centered on zero. On signal trials (right; e.g.&nbsp;old items) the distribution has some positive mean if the participant can—on average—distinguish the signal from noise. The vertical line illustrates the decision criterion <em>c</em> which the evidence must exceed for a participant to decide that the trial contained a signal. The distance between the two distributions’ means indicates discriminability <em>d’</em>.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The participants then decide, based on whether current evidence exceeds their criterion, whether they’ve seen the stimulus previously (“old”) or not (“new”). Some individuals might have a liberal bias and report “old” on trials with even modest degrees of evidence. Others might be conservative and require a greater degree of evidence before deciding they’ve seen the stimulus before. The decision process posited by SDT, based on subjective evidence and thresholds, is visualized in Figure&nbsp;1.</p>
<p>Since the introduction of SDT in studies on perception, and its later widespread adoption in e.g.&nbsp;memory research, the conceptual framework and analytic machinery has been applied in a broad range of areas. For example, in one study, we showed participants photographs of individuals who were injected with a bacterial endotoxin or not, and participants’ task was to detect whether the individual was ill or not <span class="citation" data-cites="leeuwenSmokedetectorPrinciplePathogen2024">(Leeuwen et al. 2024)</span>. In another, participants viewed videos of individuals that were either lying or not, and their task was to determine whether the individual was lying or not <span class="citation" data-cites="zloteanuTutorialDeceptionDetection2024">(Zloteanu and Vuorre 2024)</span>. The key to SDT’s success in such a wide variety of domains lies in its applicability even in the absence of information about the kinds of cues that inform people’s decisions:</p>
<blockquote class="blockquote">
<p>“A full understanding of the decision process […] is difficult, if not impossible. The decisions depend on many particulars: what the decider knows, his or her expectations and beliefs, how later information affects the interpretation of the original observations, and the like. An understanding of much domain-specific knowledge is needed […]. Fortunately, much can be said about the decision process without going into these details. Some characteristics of a yes-no decision transcend the particular situation in which it is made. The theory discussed here treats these common elements. <em>This theory, known generally as signal-detection theory, is one of the greatest successes of mathematical psychology.</em>” <span class="citation" data-cites="wickensElementarySignalDetection2001">(Wickens 2001, 4)</span></p>
</blockquote>
<p>Our conceptual treatment of SDT, for the purposes of an applied tutorial, was necessarily brief. Readers interested in more complete treatments should consult books such as <span class="citation" data-cites="wickensElementarySignalDetection2001">Wickens (2001)</span>, <span class="citation" data-cites="macmillan_detection_2005">Macmillan and Creelman (2005)</span>, or <span class="citation" data-cites="greenSignalDetectionTheory1966">Green and Swets (1966)</span>. An accessible article with computational details is <span class="citation" data-cites="stanislaw_calculation_1999">Stanislaw and Todorov (1999)</span>.</p>
<section id="current-work-estimating-sdt-models-with-regression" class="level3">
<h3 class="anchored" data-anchor-id="current-work-estimating-sdt-models-with-regression">Current work: Estimating SDT models with regression</h3>
<p>While SDT posits latent probability distributions as the basis for decision making, it is also widely applicable as a relatively theory-free analytic framework that simply allows separating response biases from latent abilities, as suggested by the examples above. It is therefore often considered a standard tool in any behavioral scientist’s toolkit. Subsequently, software packages for calculating SDT metrics and tutorials illustrating their uses are common <span class="citation" data-cites="leeBayesSDTSoftwareBayesian2008 paulewiczBhsdtrPackageGeneralpurpose2020 cohenSdtluPackageSignal2021">(Lee 2008; Paulewicz and Blaut 2020; Cohen, Starns, and Rotello 2021)</span>.</p>
<p>In this tutorial, I take a different approach: Much of a behavioral scientist’s quantitative training focuses on the General(ized) Linear Model (regression) framework. It is therefore useful to draw a direct connection between this class of common cognitive models (SDT) to tools that researchers already know (GLM) <span class="citation" data-cites="decarlo_signal_1998 decarlo_using_2003 decarlo_statistical_2010">(see also DeCarlo 1998, 2010; Decarlo 2003)</span>.</p>
<p>Moreover, rather than focusing on computational methods for obtaining point estimates of SDT metrics, as is commonly done <span class="citation" data-cites="stanislaw_calculation_1999">(e.g. Stanislaw and Todorov 1999)</span>, using the regression framework to estimate them allows quantifying degrees of uncertainty (e.g.&nbsp;standard errors) in the resulting estimates. Finally, by establishing SDT models as regressions, we gain all the benefits of regression, such as including categorical and continuous within- and between-subject predictors, using multilevel structures for crossed item and subject effects <span class="citation" data-cites="rouder_introduction_2005 rouder_signal_2007">(Rouder and Lu 2005; Rouder et al. 2007)</span>, model comparison, and support of established software packages.</p>
<p>We first focus on analyses of “Yes/No” tasks, where participants’ task is to provide a binary “Yes” or “No” response to a stimulus that either does or does not contain the “signal” that participants attempt to detect. In the ongoing memory example, previously seen (old) items are the signal stimuli, and new items the noise stimuli. I first illustrate how to calculate SDT metrics “manually” using R <span class="citation" data-cites="rcoreteamLanguageEnvironmentStatistical2025">(R Core Team 2025)</span>. Then, I show the corresponding R syntax for estimating the SDT model as a regression for an individual subject. We then discuss two methods for obtaining estimates of population-level SDT parameters by first aggregating subject-specific estimates, and then by estimating multiple subjects’ SDT parameters simultaneously with a multilevel model.</p>
<p>After discussing analyses of the basic Yes/No task, I move to rating tasks where participants provide ordinal responses that indicate their confidence in whether a stimulus contained the signal or not. These rating data allow for richer inference of participant behavior and decision making processes. Correspondingly, after showing how to estimate basic SDT models of rating data with GLMMs, I illustrate more advanced models that include unequal variances and mixtures.</p>
<p>Throughout, I assume readers are familiar with regression models. I refer those in need of a refresher to texts such as <span class="citation" data-cites="gelmanRegressionOtherStories2020">Gelman, Hill, and Vehtari (2020)</span>, <span class="citation" data-cites="mcelreathStatisticalRethinkingBayesian2020">McElreath (2020)</span>, or <span class="citation" data-cites="cetinkaya-rundelIntroductionModernStatistics2024">Çetinkaya-Rundel and Hardin (2024)</span>. I implement analyses in the Bayesian framework due to its flexibility, computational robustness, and conceptual clarity. For reasons of brevity I provide minimal explanations of this framework; interested readers should consult standard texts such as <span class="citation" data-cites="kruschke_doing_2014">Kruschke (2014)</span>, <span class="citation" data-cites="mcelreathStatisticalRethinkingBayesian2020">McElreath (2020)</span>, and <span class="citation" data-cites="gelman_bayesian_2013">Gelman et al. (2013)</span>. Accessible introductory articles are, for example, <span class="citation" data-cites="kruschkeBayesianNewStatistics2017">Kruschke and Liddell (2017a)</span> and <span class="citation" data-cites="kruschkeBayesianDataAnalysis2017">Kruschke and Liddell (2017b)</span>.</p>
<p>Finally, I show additional benefits of estimating SDT models with regression. For one, prior distributions and multilevel models deal elegantly with edge cases where participants have missing data (e.g.&nbsp;no false alarms). Moreover, the estimated parameters seamlessly inform other common SDT metrics, such as Receiver Operating Characteristic (ROC) curves, all of which retain and allow representing the estimation uncertainty associated with the underlying parameters.</p>
</section>
</section>
<section id="sdt-analysis-of-yesno-data" class="level2">
<h2 class="anchored" data-anchor-id="sdt-analysis-of-yesno-data">SDT analysis of Yes/No data</h2>
<p>The tasks outlined above are typically called “Yes/No” experiments, because the participant’s task is to provide a binary “Yes” or “No” response to a stimulus that either does or does not contain the “signal” that participants attempt to detect. In the ongoing memory example, previously seen (old) items are the signal stimuli, and new items the noise stimuli. In this tutorial, we first focus on analyses of data from Yes/No tasks.</p>
<section id="example-yesno-task-and-data" class="level3">
<h3 class="anchored" data-anchor-id="example-yesno-task-and-data">Example Yes/No task and data</h3>
<p>To illustrate the most commonly used SDT model, we examine data from the control condition of Experiment 2 in <span class="citation" data-cites="koen_examining_2013">Koen et al. (2013)</span>: 48 subjects studied a list of 200 words for 1.5s each. After a filler task, participants were tested with 200 new and 200 old words. In the test phase, participants rated their confidence in whether each word was new or old with a 6-point Likert item (1: “sure new”, 2: “maybe new”, 3: “guess new”, 4: “guess old”, 5: “maybe old”, 6: “sure old”). This data set is included in the R package MPTinR <span class="citation" data-cites="singmann_mptinr:_2013">(Singmann and Kellen 2013)</span>.</p>
<p>For the purposes of the first part of this tutorial, and following the authors’ first analysis (Table 1 in <span class="citation" data-cites="koen_examining_2013">Koen et al. (2013)</span>), we first bin the rating responses to binary “new” (1-3) and “old” (4-6) responses. The resulting data (Table&nbsp;1) is then typical of Yes/No tasks.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Koen 2013</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(roc6, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MPTinR"</span>)</span>
<span id="cb3-3">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(roc6) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(exp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Koen-2013_immediate"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate</span>(id, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exp2"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>exp, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>exp2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate</span>(name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">into =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stimulus"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(id)),</span>
<span id="cb3-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stimulus =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(</span>
<span id="cb3-12">      stimulus,</span>
<span id="cb3-13">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NEW"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OLD"</span>),</span>
<span id="cb3-14">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old"</span>)</span>
<span id="cb3-15">    ),</span>
<span id="cb3-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">response =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(</span>
<span id="cb3-17">      response,</span>
<span id="cb3-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3new"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2new"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1new"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1old"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2old"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3old"</span>),</span>
<span id="cb3-19">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb3-20">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-21">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(),</span>
<span id="cb3-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unused"</span>,</span>
<span id="cb3-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.before =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-24">  )</span>
<span id="cb3-25"></span>
<span id="cb3-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save ordinal data for part 2</span></span>
<span id="cb3-27">dat2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat</span>
<span id="cb3-28"></span>
<span id="cb3-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to binary responses for part 1</span></span>
<span id="cb3-30">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">response =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-33">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>()</span>
<span id="cb3-34">    )</span>
<span id="cb3-35"></span>
<span id="cb3-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unaggregate and add trial number to clarify data structure</span></span>
<span id="cb3-37">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uncount</span>(dat, n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trial =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> pid, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.after =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</details>
</div>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(dat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(pid, trial) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tt</span>()</span></code></pre></div>
</details>
<div id="tbl-dat" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-layout-align="center">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-dat-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Four rows of example recognition memory data from <span class="citation" data-cites="koen_examining_2013">Koen et al. (2013)</span>.
</figcaption>
<div aria-describedby="tbl-dat-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<!-- preamble start -->

    <script>

      function styleCell_rqrk5dkgauf236r2rvkb(i, j, css_id) {
          var table = document.getElementById("tinytable_rqrk5dkgauf236r2rvkb");
          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors
          if (cell) {
              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);
              cell.classList.add(css_id);
          } else {
              console.warn(`Cell at (${i}, ${j}) not found.`);
          }
      }
      function insertSpanRow(i, colspan, content) {
        var table = document.getElementById('tinytable_rqrk5dkgauf236r2rvkb');
        var newRow = table.insertRow(i);
        var newCell = newRow.insertCell(0);
        newCell.setAttribute("colspan", colspan);
        // newCell.innerText = content;
        // this may be unsafe, but innerText does not interpret <br>
        newCell.innerHTML = content;
      }
      function spanCell_rqrk5dkgauf236r2rvkb(i, j, rowspan, colspan) {
        var table = document.getElementById("tinytable_rqrk5dkgauf236r2rvkb");
        const targetRow = table.rows[i];
        const targetCell = targetRow.cells[j];
        for (let r = 0; r < rowspan; r++) {
          // Only start deleting cells to the right for the first row (r == 0)
          if (r === 0) {
            // Delete cells to the right of the target cell in the first row
            for (let c = colspan - 1; c > 0; c--) {
              if (table.rows[i + r].cells[j + c]) {
                table.rows[i + r].deleteCell(j + c);
              }
            }
          }
          // For rows below the first, delete starting from the target column
          if (r > 0) {
            for (let c = colspan - 1; c >= 0; c--) {
              if (table.rows[i + r] && table.rows[i + r].cells[j]) {
                table.rows[i + r].deleteCell(j);
              }
            }
          }
        }
        // Set rowspan and colspan of the target cell
        targetCell.rowSpan = rowspan;
        targetCell.colSpan = colspan;
      }
      // tinytable span after
      window.addEventListener('load', function () {
          var cellsToStyle = [
            // tinytable style arrays after
          { positions: [ { i: 4, j: 0 }, { i: 4, j: 1 }, { i: 4, j: 2 }, { i: 4, j: 3 },  ], css_id: 'tinytable_css_s3nvn58i0gz3aqhvomtl',}, 
          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 },  ], css_id: 'tinytable_css_wg7h2n6g7c1dax97ib63',}, 
          ];

          // Loop over the arrays to style the cells
          cellsToStyle.forEach(function (group) {
              group.positions.forEach(function (cell) {
                  styleCell_rqrk5dkgauf236r2rvkb(cell.i, cell.j, group.css_id);
              });
          });
      });
    </script>

    <style>
      /* tinytable css entries after */
      .table td.tinytable_css_s3nvn58i0gz3aqhvomtl, .table th.tinytable_css_s3nvn58i0gz3aqhvomtl { border-bottom: solid #d3d8dc 0.1em; }
      .table td.tinytable_css_wg7h2n6g7c1dax97ib63, .table th.tinytable_css_wg7h2n6g7c1dax97ib63 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }
    </style>
    <div class="container">
      <table class="table table-borderless" id="tinytable_rqrk5dkgauf236r2rvkb" style="width: auto; margin-left: auto; margin-right: auto;" data-quarto-disable-processing="true">
        <thead>
        
              <tr>
                <th scope="col">pid</th>
                <th scope="col">trial</th>
                <th scope="col">stimulus</th>
                <th scope="col">response</th>
              </tr>
        </thead>
        
        <tbody>
                <tr>
                  <td>1</td>
                  <td>34</td>
                  <td>Old</td>
                  <td>New</td>
                </tr>
                <tr>
                  <td>3</td>
                  <td>96</td>
                  <td>Old</td>
                  <td>Old</td>
                </tr>
                <tr>
                  <td>4</td>
                  <td>21</td>
                  <td>Old</td>
                  <td>New</td>
                </tr>
                <tr>
                  <td>6</td>
                  <td>286</td>
                  <td>New</td>
                  <td>Old</td>
                </tr>
        </tbody>
      </table>
    </div>
<!-- hack to avoid NA insertion in last line -->
</div>
</div>
</figure>
</div>
</div>
</section>
<section id="calculating-sdt-parameters" class="level3">
<h3 class="anchored" data-anchor-id="calculating-sdt-parameters">Calculating SDT parameters</h3>
<p>It is immediately clear how to calculate a participant’s overall accuracy from data in Table&nbsp;1: Add up the trials where stimulus and response are identical, and divide the sum by the total number of trials. Calculating SDT parameters, to which we now turn, is not much more involved <span class="citation" data-cites="stanislaw_calculation_1999">(Stanislaw and Todorov 1999)</span>.</p>
<p>First, responses from a Yes/No task are divided into four categories: hits (responding “old” to old items), misses (responding “new” to old items), false alarms (responding “old” to new items), and correct rejections (responding “new” to new items). We then calculate hit and false alarm rates by aggregating the response categories, z-score the rates, and either add (to calculate response bias) or subtract (to calculate sensitivity) these z-scores. I first show how to classify trials with R in Listing&nbsp;1.</p>
<div class="cell" data-layout-align="center">
<div id="lst-sdt1" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-sdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;1: Classifying Yes/No trials into hits, misses, false alarms, and correct rejections using the <code>case_when()</code> function from the dplyr R package.
</figcaption>
<div aria-describedby="lst-sdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">sdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb5-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb5-4">      stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hit"</span>,</span>
<span id="cb5-5">      stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"miss"</span>,</span>
<span id="cb5-6">      stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fa"</span>,</span>
<span id="cb5-7">      stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cr"</span></span>
<span id="cb5-8">    )</span>
<span id="cb5-9">  )</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>After classifying trials, we aggregate participants’ data to hit (hits / (hits + misses)) and false alarm rates (false alarms / (false alarms + correct rejections); see Figure&nbsp;1) in Listing&nbsp;2, where we also pivot the data to one row per participant (Table&nbsp;2).</p>
<div class="cell" data-layout-align="center">
<div id="lst-sdt2" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-sdt2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;2: Classifying Yes/No experiment trials into hits, misses, false alarms, and correct rejections using the <code>case_when()</code> function from the dplyr R package.
</figcaption>
<div aria-describedby="lst-sdt2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">sdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sdt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(pid, type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb6-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hr =</span> hit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (hit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> miss),</span>
<span id="cb6-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fr =</span> fa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (fa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cr)</span>
<span id="cb6-7">  )</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(sdt, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format_tt</span>()</span></code></pre></div>
</details>
<div id="tbl-sdt1" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-layout-align="center">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-sdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: Aggregated task behavior of each participant.
</figcaption>
<div aria-describedby="tbl-sdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<!-- preamble start -->

    <script>

      function styleCell_s0ob8gizvb4wn6iagqxd(i, j, css_id) {
          var table = document.getElementById("tinytable_s0ob8gizvb4wn6iagqxd");
          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors
          if (cell) {
              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);
              cell.classList.add(css_id);
          } else {
              console.warn(`Cell at (${i}, ${j}) not found.`);
          }
      }
      function insertSpanRow(i, colspan, content) {
        var table = document.getElementById('tinytable_s0ob8gizvb4wn6iagqxd');
        var newRow = table.insertRow(i);
        var newCell = newRow.insertCell(0);
        newCell.setAttribute("colspan", colspan);
        // newCell.innerText = content;
        // this may be unsafe, but innerText does not interpret <br>
        newCell.innerHTML = content;
      }
      function spanCell_s0ob8gizvb4wn6iagqxd(i, j, rowspan, colspan) {
        var table = document.getElementById("tinytable_s0ob8gizvb4wn6iagqxd");
        const targetRow = table.rows[i];
        const targetCell = targetRow.cells[j];
        for (let r = 0; r < rowspan; r++) {
          // Only start deleting cells to the right for the first row (r == 0)
          if (r === 0) {
            // Delete cells to the right of the target cell in the first row
            for (let c = colspan - 1; c > 0; c--) {
              if (table.rows[i + r].cells[j + c]) {
                table.rows[i + r].deleteCell(j + c);
              }
            }
          }
          // For rows below the first, delete starting from the target column
          if (r > 0) {
            for (let c = colspan - 1; c >= 0; c--) {
              if (table.rows[i + r] && table.rows[i + r].cells[j]) {
                table.rows[i + r].deleteCell(j);
              }
            }
          }
        }
        // Set rowspan and colspan of the target cell
        targetCell.rowSpan = rowspan;
        targetCell.colSpan = colspan;
      }
      // tinytable span after
      window.addEventListener('load', function () {
          var cellsToStyle = [
            // tinytable style arrays after
          { positions: [ { i: 4, j: 0 }, { i: 4, j: 1 }, { i: 4, j: 2 }, { i: 4, j: 3 }, { i: 4, j: 4 }, { i: 4, j: 5 }, { i: 4, j: 6 },  ], css_id: 'tinytable_css_kl7tr8vsb7ah5ky2ni8j',}, 
          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 }, { i: 0, j: 4 }, { i: 0, j: 5 }, { i: 0, j: 6 },  ], css_id: 'tinytable_css_9h4sdtn00z3o4me8rkq2',}, 
          ];

          // Loop over the arrays to style the cells
          cellsToStyle.forEach(function (group) {
              group.positions.forEach(function (cell) {
                  styleCell_s0ob8gizvb4wn6iagqxd(cell.i, cell.j, group.css_id);
              });
          });
      });
    </script>

    <style>
      /* tinytable css entries after */
      .table td.tinytable_css_kl7tr8vsb7ah5ky2ni8j, .table th.tinytable_css_kl7tr8vsb7ah5ky2ni8j { border-bottom: solid #d3d8dc 0.1em; }
      .table td.tinytable_css_9h4sdtn00z3o4me8rkq2, .table th.tinytable_css_9h4sdtn00z3o4me8rkq2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }
    </style>
    <div class="container">
      <table class="table table-borderless" id="tinytable_s0ob8gizvb4wn6iagqxd" style="width: auto; margin-left: auto; margin-right: auto;" data-quarto-disable-processing="true">
        <thead>
        
              <tr>
                <th scope="col">pid</th>
                <th scope="col">cr</th>
                <th scope="col">fa</th>
                <th scope="col">hit</th>
                <th scope="col">miss</th>
                <th scope="col">hr</th>
                <th scope="col">fr</th>
              </tr>
        </thead>
        
        <tbody>
                <tr>
                  <td>1</td>
                  <td>110</td>
                  <td>40</td>
                  <td>116</td>
                  <td>34</td>
                  <td>0.77</td>
                  <td>0.27</td>
                </tr>
                <tr>
                  <td>2</td>
                  <td>100</td>
                  <td>50</td>
                  <td>119</td>
                  <td>31</td>
                  <td>0.79</td>
                  <td>0.33</td>
                </tr>
                <tr>
                  <td>3</td>
                  <td>118</td>
                  <td>32</td>
                  <td>126</td>
                  <td>24</td>
                  <td>0.84</td>
                  <td>0.21</td>
                </tr>
                <tr>
                  <td>4</td>
                  <td>104</td>
                  <td>46</td>
                  <td>117</td>
                  <td>33</td>
                  <td>0.78</td>
                  <td>0.31</td>
                </tr>
        </tbody>
      </table>
    </div>
<!-- hack to avoid NA insertion in last line -->
</div>
</div>
</figure>
</div>
</div>
<p>We can then calculate the two SDT parameters from the hit and false alarm rates: The decision criterion <em>c</em> and discriminability <em>d’</em>. <em>d’</em> is calculated as the difference of the normal distribution scores, also commonly referred to as “z-scores”, of the hit and false alarm rates <span class="citation" data-cites="stanislaw_calculation_1999">(Stanislaw and Todorov 1999)</span>:</p>
<p><span id="eq-d"><img src="https://latex.codecogs.com/png.latex?%0Ad'%20=%20%5CPhi%5E%7B-1%7D(HR)%20-%20%5CPhi%5E%7B-1%7D(FAR)%0A%5Ctag%7B1%7D"></span></p>
<p><img src="https://latex.codecogs.com/png.latex?%5CPhi"> is the normal distribution function, and is used to convert <em>z</em> scores into probabilities. It is available in R as <code>pnorm()</code>. <img src="https://latex.codecogs.com/png.latex?%5CPhi%5E%7B-1%7D">, the normal quantile function (available in R as <code>qnorm()</code>), converts proportions into <em>z</em> scores.</p>
<p>But why do we use a normal distribution? Recall from above that SDT posits that each stimulus leads to a subjective (or “latent”) value of evidence. This evidence is not fixed by the stimulus but varies from trial to trial because of noise in the system perceiving the stimulus. We do not know what the myriad sources of this variability might be, so the normal distribution that results from the sum of many independent variations, is a natural choice. Note that other distributions, although rarely used, are possible <span class="citation" data-cites="decarlo_signal_1998">(DeCarlo 1998)</span>.</p>
<p>The response criterion <em>c</em> is calculated as:</p>
<p><span id="eq-c"><img src="https://latex.codecogs.com/png.latex?%0Ac%20=%20-%5Cfrac%7B%5CPhi%5E%7B-1%7D(HR)%20+%20%5CPhi%5E%7B-1%7D(FAR)%7D%7B2%7D%0A%5Ctag%7B2%7D"></span></p>
<p>It is important to note that most treatments use a minus sign in the calculation of <em>c</em> <span class="citation" data-cites="stanislaw_calculation_1999">(e.g. Stanislaw and Todorov 1999)</span>. This means that negative values of <em>c</em> indicate a “liberal” bias toward responding “yes”, and positive values of <em>c</em> indicate a “conservative” tendency toward responding “no” (see Figure&nbsp;2). An alternative parameterization omits the negative sign, in which case positive values of <em>c</em> indicate a (“liberal”) bias toward responding “yes”, and negative values of <em>c</em> indicate a (“conservative”) bias toward responding “no”.</p>
<div class="cell" data-layout-align="center">
<div id="lst-sdt3" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-sdt3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;3: Calculating z-scored hit and false alarm rates and the SDT parameters <em>c</em> and <em>d’</em>.
</figcaption>
<div aria-describedby="lst-sdt3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">sdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sdt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zhr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(hr),</span>
<span id="cb8-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zfr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(fr),</span>
<span id="cb8-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crit =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(zhr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> zfr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb8-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dprime =</span> zhr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> zfr</span>
<span id="cb8-7">  )</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>I z-score the hit and false alarm rates and then calculate each participant’s <em>c</em> and <em>d’</em> from the z-scores in Listing&nbsp;3. The resulting data table is shown in Table&nbsp;3.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">sdt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(cr, fa, hit, miss)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format_tt</span>()</span></code></pre></div>
</details>
<div id="tbl-sdt" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-layout-align="center">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-sdt-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;3: Four subjects’ SDT parameters and the quantities used to calculate them.
</figcaption>
<div aria-describedby="tbl-sdt-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<!-- preamble start -->

    <script>

      function styleCell_a05z085weo2mb8vu3xda(i, j, css_id) {
          var table = document.getElementById("tinytable_a05z085weo2mb8vu3xda");
          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors
          if (cell) {
              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);
              cell.classList.add(css_id);
          } else {
              console.warn(`Cell at (${i}, ${j}) not found.`);
          }
      }
      function insertSpanRow(i, colspan, content) {
        var table = document.getElementById('tinytable_a05z085weo2mb8vu3xda');
        var newRow = table.insertRow(i);
        var newCell = newRow.insertCell(0);
        newCell.setAttribute("colspan", colspan);
        // newCell.innerText = content;
        // this may be unsafe, but innerText does not interpret <br>
        newCell.innerHTML = content;
      }
      function spanCell_a05z085weo2mb8vu3xda(i, j, rowspan, colspan) {
        var table = document.getElementById("tinytable_a05z085weo2mb8vu3xda");
        const targetRow = table.rows[i];
        const targetCell = targetRow.cells[j];
        for (let r = 0; r < rowspan; r++) {
          // Only start deleting cells to the right for the first row (r == 0)
          if (r === 0) {
            // Delete cells to the right of the target cell in the first row
            for (let c = colspan - 1; c > 0; c--) {
              if (table.rows[i + r].cells[j + c]) {
                table.rows[i + r].deleteCell(j + c);
              }
            }
          }
          // For rows below the first, delete starting from the target column
          if (r > 0) {
            for (let c = colspan - 1; c >= 0; c--) {
              if (table.rows[i + r] && table.rows[i + r].cells[j]) {
                table.rows[i + r].deleteCell(j);
              }
            }
          }
        }
        // Set rowspan and colspan of the target cell
        targetCell.rowSpan = rowspan;
        targetCell.colSpan = colspan;
      }
      // tinytable span after
      window.addEventListener('load', function () {
          var cellsToStyle = [
            // tinytable style arrays after
          { positions: [ { i: 4, j: 0 }, { i: 4, j: 1 }, { i: 4, j: 2 }, { i: 4, j: 3 }, { i: 4, j: 4 }, { i: 4, j: 5 }, { i: 4, j: 6 },  ], css_id: 'tinytable_css_hyfq606m4pp7yp46h33l',}, 
          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 }, { i: 0, j: 4 }, { i: 0, j: 5 }, { i: 0, j: 6 },  ], css_id: 'tinytable_css_fjutx7951zfti1i1grtv',}, 
          ];

          // Loop over the arrays to style the cells
          cellsToStyle.forEach(function (group) {
              group.positions.forEach(function (cell) {
                  styleCell_a05z085weo2mb8vu3xda(cell.i, cell.j, group.css_id);
              });
          });
      });
    </script>

    <style>
      /* tinytable css entries after */
      .table td.tinytable_css_hyfq606m4pp7yp46h33l, .table th.tinytable_css_hyfq606m4pp7yp46h33l { border-bottom: solid #d3d8dc 0.1em; }
      .table td.tinytable_css_fjutx7951zfti1i1grtv, .table th.tinytable_css_fjutx7951zfti1i1grtv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }
    </style>
    <div class="container">
      <table class="table table-borderless" id="tinytable_a05z085weo2mb8vu3xda" style="width: auto; margin-left: auto; margin-right: auto;" data-quarto-disable-processing="true">
        <thead>
        
              <tr>
                <th scope="col">pid</th>
                <th scope="col">hr</th>
                <th scope="col">fr</th>
                <th scope="col">zhr</th>
                <th scope="col">zfr</th>
                <th scope="col">crit</th>
                <th scope="col">dprime</th>
              </tr>
        </thead>
        
        <tbody>
                <tr>
                  <td>1</td>
                  <td>0.77</td>
                  <td>0.27</td>
                  <td>0.75</td>
                  <td>-0.62</td>
                  <td>-0.06</td>
                  <td>1.37</td>
                </tr>
                <tr>
                  <td>2</td>
                  <td>0.79</td>
                  <td>0.33</td>
                  <td>0.82</td>
                  <td>-0.43</td>
                  <td>-0.19</td>
                  <td>1.25</td>
                </tr>
                <tr>
                  <td>3</td>
                  <td>0.84</td>
                  <td>0.21</td>
                  <td>0.99</td>
                  <td>-0.79</td>
                  <td>-0.10</td>
                  <td>1.79</td>
                </tr>
                <tr>
                  <td>4</td>
                  <td>0.78</td>
                  <td>0.31</td>
                  <td>0.77</td>
                  <td>-0.51</td>
                  <td>-0.13</td>
                  <td>1.28</td>
                </tr>
        </tbody>
      </table>
    </div>
<!-- hack to avoid NA insertion in last line -->
</div>
</div>
</figure>
</div>
</div>
<p>(As a side note, <em>c</em> is only one of many bias measures. For example, early researchers on SDT, such as J. C. R. Licklider—who incidentally also laid the groundwork for the modern Internet—favored a likelihood ratio measure <span class="citation" data-cites="lickliderThreeAuditoryTheories1959 macmillan_detection_2005">(Licklider 1959; Macmillan and Creelman 2005, 31–36)</span>.)</p>
<p>The <code>sdt</code> data frame (Table&nbsp;3) now has every participant’s <em>d’</em> and <em>c</em>, and the quantities that went into calculating them. I show three participants’ implied SDT models, and all participants’ SDT parameters, in Figure&nbsp;2.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div id="fig-sdt1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-sdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-sdt1-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-sdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: <strong>Left.</strong> The signal detection model for three participants. The two curves are the noise (dashed) and signal distributions (solid); the vertical line represents the response criterion <em>c</em>. <em>d’</em> is the distance between the two distributions’ means. Of these three participants, 29 has the lowest <em>c</em> and therefore the most liberal response bias. Participant 19 has the smallest <em>d’</em> and therefore the worst ability to discriminate between new and old items. <strong>Right.</strong> Scatterplot of all participants’ criteria and d’, with the three participants shown in the left panel highlighted in bold font.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="estimating-sdt-parameters-with-regression" class="level2">
<h2 class="anchored" data-anchor-id="estimating-sdt-parameters-with-regression">Estimating SDT parameters with regression</h2>
<p>We have now “manully” calculated, rather than statistically estimated, participants’ SDT parameters. While standard practice, this approach has at least two potential downsides. First, we have not quantified our uncertainty in the parameters. For example, were we interested in a statistical comparison of participant 19’s and 29’s criteria, we could only report a point estimate of this difference.</p>
<p>Second, any further questions—estimating (differences in) population means, for example—would require additional models of these point estimates. These further models would ignore the uncertainty inherent in the participant-specific parameters. This point may not matter for perfectly balanced designs, but would be especially important when participants complete different numbers of trials or have missing data.</p>
<p>Moreover, while it is pedagogically useful to go through these calculations, there might also be related downsides: These quantities are naturally estimated in common regression models, and by not making that connection explicit we are not contributing as effectively to further quantitative learning. Because researchers are typically already familiar with regression techniques, using those instead of manual calculations may prove useful in practice as well <span class="citation" data-cites="decarlo_using_2003">(Decarlo 2003)</span>.</p>
<p>Therefore, we now move to the main topic of this tutorial: Estimating SDT models using Generalized Linear Models (GLM).</p>
<section id="coding-categorical-variables" class="level3">
<h3 class="anchored" data-anchor-id="coding-categorical-variables">Coding categorical variables</h3>
<p>We begin by considering the raw data in Table&nbsp;1. Because the data contains categorical variables, it is first important to understand how a model might use them. In R, this specification is done via “contrasts” (such as dummy variables, contrast codes, etc) that code them into numerical values when used in models.</p>
<p>When binary variables are modeled in R (either as outcomes or predictors), R by default will assign them treatment codes (also known as dummy variables). Therefore <code>stimulus</code> and <code>response</code> would be coded as “New”: 0 and “Old”: 1 (from their alphabetical order). For reasons visible to some readers in Equation&nbsp;2 and further elaborated below, we instead sum-to-zero-code <code>stimulus</code> as “New”: -0.5 and “Old”: 0.5 (Table&nbsp;4). This will ensure that our model’s intercept will be “halfway between” the (z-scored) hit and false alarm rates (now take another look at Equation&nbsp;2). I specify this coding scheme in Listing&nbsp;4.</p>
<div class="cell" data-layout-align="center">
<div id="lst-contrasts" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-contrasts-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;4: Creating sum to zero contrast codes for the <code>stimulus</code> variable.
</figcaption>
<div aria-describedby="lst-contrasts-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>stimulus) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(</span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>stimulus),</span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>response)</span>
<span id="cb11-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stimulus"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data value"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_tt</span>(</span>
<span id="cb11-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Contrast code"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb11-11">  )</span></code></pre></div>
</details>
<div id="tbl-contrasts" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-layout-align="center">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-contrasts-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;4: Numerical contrast codes of categorical variables when modeled.
</figcaption>
<div aria-describedby="tbl-contrasts-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<!-- preamble start -->

    <script>

      function styleCell_gp7ppq2kll13dk18lyji(i, j, css_id) {
          var table = document.getElementById("tinytable_gp7ppq2kll13dk18lyji");
          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors
          if (cell) {
              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);
              cell.classList.add(css_id);
          } else {
              console.warn(`Cell at (${i}, ${j}) not found.`);
          }
      }
      function insertSpanRow(i, colspan, content) {
        var table = document.getElementById('tinytable_gp7ppq2kll13dk18lyji');
        var newRow = table.insertRow(i);
        var newCell = newRow.insertCell(0);
        newCell.setAttribute("colspan", colspan);
        // newCell.innerText = content;
        // this may be unsafe, but innerText does not interpret <br>
        newCell.innerHTML = content;
      }
      function spanCell_gp7ppq2kll13dk18lyji(i, j, rowspan, colspan) {
        var table = document.getElementById("tinytable_gp7ppq2kll13dk18lyji");
        const targetRow = table.rows[i];
        const targetCell = targetRow.cells[j];
        for (let r = 0; r < rowspan; r++) {
          // Only start deleting cells to the right for the first row (r == 0)
          if (r === 0) {
            // Delete cells to the right of the target cell in the first row
            for (let c = colspan - 1; c > 0; c--) {
              if (table.rows[i + r].cells[j + c]) {
                table.rows[i + r].deleteCell(j + c);
              }
            }
          }
          // For rows below the first, delete starting from the target column
          if (r > 0) {
            for (let c = colspan - 1; c >= 0; c--) {
              if (table.rows[i + r] && table.rows[i + r].cells[j]) {
                table.rows[i + r].deleteCell(j);
              }
            }
          }
        }
        // Set rowspan and colspan of the target cell
        targetCell.rowSpan = rowspan;
        targetCell.colSpan = colspan;
      }
      // tinytable span after
      window.addEventListener('load', function () {
          var cellsToStyle = [
            // tinytable style arrays after
          { positions: [ { i: 0, j: 1 },  ], css_id: 'tinytable_css_k706gfln7q9ogzfmji7y',}, 
          { positions: [ { i: 3, j: 2 }, { i: 3, j: 1 }, { i: 3, j: 0 },  ], css_id: 'tinytable_css_4fybex2bulczrmyvd9p8',}, 
          { positions: [ { i: 0, j: 0 }, { i: 0, j: 2 },  ], css_id: 'tinytable_css_5k95ycujt4bx7egehv4x',}, 
          { positions: [ { i: 1, j: 0 }, { i: 1, j: 2 }, { i: 1, j: 1 },  ], css_id: 'tinytable_css_jwwabxkzzyxl5yc4rzqk',}, 
          ];

          // Loop over the arrays to style the cells
          cellsToStyle.forEach(function (group) {
              group.positions.forEach(function (cell) {
                  styleCell_gp7ppq2kll13dk18lyji(cell.i, cell.j, group.css_id);
              });
          });
      });
    </script>

    <style>
      /* tinytable css entries after */
      .table td.tinytable_css_k706gfln7q9ogzfmji7y, .table th.tinytable_css_k706gfln7q9ogzfmji7y { border-top: solid #d3d8dc 0.1em; text-align: center; border-bottom: solid #d3d8dc 0.05em; }
      .table td.tinytable_css_4fybex2bulczrmyvd9p8, .table th.tinytable_css_4fybex2bulczrmyvd9p8 { border-bottom: solid #d3d8dc 0.1em; }
      .table td.tinytable_css_5k95ycujt4bx7egehv4x, .table th.tinytable_css_5k95ycujt4bx7egehv4x { border-top: solid #d3d8dc 0.1em; text-align: center; }
      .table td.tinytable_css_jwwabxkzzyxl5yc4rzqk, .table th.tinytable_css_jwwabxkzzyxl5yc4rzqk { border-bottom: solid #d3d8dc 0.05em; }
    </style>
    <div class="container">
      <table class="table table-borderless" id="tinytable_gp7ppq2kll13dk18lyji" style="width: auto; margin-left: auto; margin-right: auto;" data-quarto-disable-processing="true">
        <thead>
<tr>
<th scope="col" align="center" colspan="1"> </th>
<th scope="col" align="center" colspan="2">Contrast code</th>
</tr>
        
              <tr>
                <th scope="col">Data value</th>
                <th scope="col">stimulus</th>
                <th scope="col">response</th>
              </tr>
        </thead>
        
        <tbody>
                <tr>
                  <td>New</td>
                  <td>-0.50</td>
                  <td>0</td>
                </tr>
                <tr>
                  <td>Old</td>
                  <td>0.50</td>
                  <td>1</td>
                </tr>
        </tbody>
      </table>
    </div>
<!-- hack to avoid NA insertion in last line -->
</div>
</div>
</figure>
</div>
</div>
</section>
<section id="specifying-the-model" class="level3">
<h3 class="anchored" data-anchor-id="specifying-the-model">Specifying the model</h3>
<p>Now that we have prepared our data, we proceed to specifying our regression model. We first consider this model for one participant. We model responses r (“No”: 0, “Yes”: 1) at row i as Bernoulli distributed with probability <img src="https://latex.codecogs.com/png.latex?p_i"> that <img src="https://latex.codecogs.com/png.latex?r_i%20=%201"> (line 1 below). (Bernoulli distribution is the binomial distribution for binary responses.)</p>
<p><span id="eq-glm"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Ar_i%20&amp;%5Csim%20%5Ctext%7BBernoulli%7D(p_i)%20%5C%5C%0Ap_i%20&amp;=%20%5CPhi(%5Cbeta_0%20+%20%5Cbeta_1%5Ctext%7Bs%7D_i)%0A%5Cend%7Baligned%7D%0A%5Ctag%7B3%7D"></span></p>
<p>Because probabilities have lower and upper limits at 0 and 1, we model <em>p</em> through a link function. A common choice for a link function for models of binary data is the logistic, leading to the familiar logistic regression model. However, we use the probit link function <img src="https://latex.codecogs.com/png.latex?%5CPhi"> which maps the unbounded continuous linear combination of the predictors to probabilities (line 2 above).</p>
<p>Given this parameterization, the intercept of the model (<img src="https://latex.codecogs.com/png.latex?%5Cbeta_0">) will indicate the z-scored probability of responding “old” when all predictors are zero (see Listing&nbsp;4). When <code>stimulus</code>, our predictor, is “sum-to-zero” coded as we have done above, the intercept corresponds to -<em>c</em> (see Equation&nbsp;2). The slope of the model (<img src="https://latex.codecogs.com/png.latex?%5Cbeta_1">) is the difference in z-scored probabilities of saying “old” between old and new items, and therefore <img src="https://latex.codecogs.com/png.latex?d'%20=%20%5Cbeta_1"> (see Equation&nbsp;1). For a more complete treatment of the connection between SDT models and GLM, see <span class="citation" data-cites="decarlo_signal_1998">DeCarlo (1998)</span>.</p>
</section>
<section id="estimating-the-model" class="level3">
<h3 class="anchored" data-anchor-id="estimating-the-model">Estimating the model</h3>
<p>We now have a variety of software options for estimating the GLM. For this simple model, we could use base R’s <code>glm()</code>. Here, we use the Bayesian regression modeling R package <a href="https://github.com/paul-buerkner/brms">brms</a> <span class="citation" data-cites="burkner_brms:_2017">(Bürkner 2017)</span>, because its model formula syntax extends seamlessly to more complicated models that we will discuss later. We can estimate the GLM with brms’s <code>brm()</code> function by providing as arguments a model formula in brms syntax (identical to base R model syntax for simple models), an outcome distribution with a link function, and a data frame.</p>
<p>brms’s model syntax uses variable names from the data. In Listing&nbsp;5, we regress the binary <code>response</code> outcome on the binary <code>stimulus</code> predictor (<code>response ~ stimulus</code>). We then specify that outcomes are bernoulli distributed with a probit link function with <code>family = bernoulli(link="probit")</code>. We will only model the first participant’s data, and therefore specify the data with <code>data = filter(dat, pid==1)</code>.</p>
<p>The <code>brm()</code> function also allows specifying prior distributions on the parameters, but for this introductory discussion we omit discussion of priors. Finally, we specify <code>file</code> to save the estimated model to a file so that we don’t have to re-estimate the model whenever we restart R.</p>
<div class="cell" data-layout-align="center">
<div id="lst-brm" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-brm-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;5: Fitting the SDT model as a GLM with the <code>brm()</code> function
</figcaption>
<div aria-describedby="lst-brm-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">fit_glm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb12-2">  response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus,</span>
<span id="cb12-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bernoulli</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>),</span>
<span id="cb12-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(dat, pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb12-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-glm"</span></span>
<span id="cb12-6">)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I also fit the model separately to all participants</span></span>
<span id="cb13-2">path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-glm-all.rds"</span></span>
<span id="cb13-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(path)) {</span>
<span id="cb13-4">  fit_glm_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb13-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> pid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb13-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb13-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fit =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(</span>
<span id="cb13-8">        data,</span>
<span id="cb13-9">        <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>(</span>
<span id="cb13-10">          fit_glm,</span>
<span id="cb13-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> .x,</span>
<span id="cb13-12">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recompile =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb13-13">        )</span>
<span id="cb13-14">      ),</span>
<span id="cb13-15">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> pid</span>
<span id="cb13-16">    )</span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">saveRDS</span>(fit_glm_all, path)</span>
<span id="cb13-18">} <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb13-19">  fit_glm_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(path)</span>
<span id="cb13-20">}</span></code></pre></div>
</details>
</div>
<p>The estimated model is saved in <code>fit</code>, whose <code>summary()</code> method returns a numerical summary of the estimated parameters along with some information and diagnostics about the model:</p>
<div class="cell" data-layout-align="center">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit_glm)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: bernoulli 
  Links: mu = probit 
Formula: response ~ stimulus 
   Data: filter(dat, pid == 1) (Number of observations: 300) 

Regression Coefficients:
          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
Intercept     0.06      0.08    -0.09     0.22 1.00     3681     2457
stimulus1     1.38      0.15     1.07     1.68 1.00     3102     2345</code></pre>
</div>
</div>
<p>The regression parameters (<code>Intercept</code> (<img src="https://latex.codecogs.com/png.latex?-c%20=%20%5Cbeta_0">) and <code>stimulus1</code> (<img src="https://latex.codecogs.com/png.latex?d'%20=%20%5Cbeta_1">)) are described in the “Regression Coefficients” table in the above output. <code>Estimate</code> reports the posterior means, which are comparable to maximum likelihood point estimates. <code>Est.Error</code> reports the posterior standard deviations, which are comparable to standard errors. The estimated parameters’ means match the point estimates we calculated by hand (see Table&nbsp;3), but note the reversed sign of <em>c</em>. The next two columns report the parameter’s 95% Credible Intervals (CIs). Finally, the <code>Rhat</code> and <code>_ESS</code> values provide diagnostic information (convergence and effective posterior sample size, respectively) about the Bayesian estimation procedure. The former should be close to 1.00, and the latter as large as possible. We do not consider these metrics further, but see e.g. <span class="citation" data-cites="gelman_bayesian_2013">Gelman et al. (2013)</span>.</p>
</section>
<section id="interpreting-the-model" class="level3">
<h3 class="anchored" data-anchor-id="interpreting-the-model">Interpreting the model</h3>
<p>We read in the above output that the model intercept, corresponding to -<em>c</em>, has a positive posterior mean, but its CI considerably overlaps zero. Therefore, this participant is not strongly biased in favor of responding either “Yes” or “No”. The slope coefficient <code>stimulus1</code>, corresponding to <em>d’</em>, is positive and indicates that the latent evidence distribution of signal trials for this participant is ~1.4 z-scores greater than the noise distribution: The participant has good discriminability and is able to tell old stimuli from new.</p>
<p>We now return to the two shortcomings of manually calculating SDT parameters alluded to above. First, the model assigns credibility to a range of parameter values (the CI), instead of returning only the most likely value (the posterior mean). I illustrate these degrees of certainty in the left panel of Figure&nbsp;3. This figure is a smoothed bivariate density of the scatterplot of posterior samples of <img src="https://latex.codecogs.com/png.latex?p(%5Cbeta_0,%20%5Cbeta_1)">, and indicates more credible SDT parameter values in lighter yellow hues. The point estimate shown in red is a poor representation of this more complete picture.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">pid1color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span></span>
<span id="cb16-2">s_f_g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(...) {</span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis_c</span>(</span>
<span id="cb16-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb16-5">    ...</span>
<span id="cb16-6">  )</span>
<span id="cb16-7">}</span>
<span id="cb16-8"></span>
<span id="cb16-9">pa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_draws_df</span>(fit_glm) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b_Intercept, b_stimulus1)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">s_f_g</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_density_2d</span>(</span>
<span id="cb16-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(ndensity)),</span>
<span id="cb16-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"raster"</span>,</span>
<span id="cb16-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contour =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb16-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">201</span></span>
<span id="cb16-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb16-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(sdt, pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb16-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> crit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> dprime),</span>
<span id="cb16-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> pid1color,</span>
<span id="cb16-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb16-23">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb16-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TeX</span>(r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(c = $-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\b</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">eta_{0}$)"</span>),</span>
<span id="cb16-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TeX</span>(r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(d' = $</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\b</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">eta_{1}$)"</span>)</span>
<span id="cb16-28">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb16-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb16-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb16-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb16-33">  )</span>
<span id="cb16-34"></span>
<span id="cb16-35">fit_glm_all_pars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fit_glm_all <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb16-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(</span>
<span id="cb16-38">      fit,</span>
<span id="cb16-39">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_draws_df</span>(.x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-40">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_Intercept =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b_Intercept) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-41">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_draws</span>(</span>
<span id="cb16-42">          mean,</span>
<span id="cb16-43">          <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile2</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">025</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">975</span>))</span>
<span id="cb16-44">        ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-45">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb16-46">    )</span>
<span id="cb16-47">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(pid, x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-50">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb16-51">    sdt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-52">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(pid, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_Intercept =</span> crit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_stimulus1 =</span> dprime) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-53">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>pid, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"variable"</span>)</span>
<span id="cb16-54">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb16-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interaction</span>(pid, variable), value)</span>
<span id="cb16-57">  )</span>
<span id="cb16-58">pb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fit_glm_all_pars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(mean, pid2)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_discrete</span>(</span>
<span id="cb16-61">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Participant"</span></span>
<span id="cb16-62">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb16-64">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Parameter value"</span>,</span>
<span id="cb16-65">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extended_breaks</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb16-66">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(</span>
<span id="cb16-68">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey30"</span>, pid1color)</span>
<span id="cb16-69">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-70">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size_manual</span>(</span>
<span id="cb16-71">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb16-72">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-73">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>(</span>
<span id="cb16-74">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> q2<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> q97<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>),</span>
<span id="cb16-75">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>,</span>
<span id="cb16-76">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fatten =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb16-77">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb16-78">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb16-79">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb16-80">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-81">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb16-82">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb16-83">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb16-84">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-85">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(</span>
<span id="cb16-86">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"variable"</span>,</span>
<span id="cb16-87">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>,</span>
<span id="cb16-88">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labeller</span>(</span>
<span id="cb16-89">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb16-90">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_Intercept =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb16-91">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_stimulus1 =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d'"</span></span>
<span id="cb16-92">      )</span>
<span id="cb16-93">    )</span>
<span id="cb16-94">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-95">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb16-96">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb16-97">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb16-98">  )</span>
<span id="cb16-99">(pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pb)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-glm" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-glm-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-glm-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="576">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-glm-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: SDT parameters as estimated with a Generalized Linear Model. <strong>Left.</strong> The (approximate) joint posterior density of subject 1’s SDT parameters. Lighter hues indicate higher posterior density and therefore parameter values in which we are more confident. The red dot indicates the manually calculated point estimate of <em>c</em> and <em>d’</em>. <strong>Right.</strong> Posterior means and 95%CIs of all participants’ parameters (empty circles and intervals) along with manually calculated point estimates (filled circles). The two are in perfect agreement.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Second, consider the bottom and top points in the <em>c</em> column of Figure&nbsp;3. All we could say based on the point estimates is that the top participant has a far more positive (conservative) criterion than the bottom participant. However, the bayesian estimates would allow directly testing that difference, by virtue of retaining uncertainty in the parameter estimates. Finally, notice how straightforward it was to estimate the SDT parameters with regression: Instead of multiple lines of data wrangling and calculation, the regression model directly returns SDT parameters from the raw data.</p>
</section>
</section>
<section id="sdt-for-multiple-participants" class="level2">
<h2 class="anchored" data-anchor-id="sdt-for-multiple-participants">SDT for multiple participants</h2>
<p>We have now estimated the SDT model’s parameters for one subject’s data using two methods: Calculating point estimates manually and estimating them with a GLM. The main difference between these methods is that modeling provided estimates of uncertainty in the parameters, whereas the manual calculation did not. This point leads us directly to multilevel models <span class="citation" data-cites="rouder_introduction_2005 rouder_signal_2007 gelmanDataAnalysisUsing2007">(Rouder and Lu 2005; Rouder et al. 2007; Gelman and Hill 2007)</span>, which we discuss next.</p>
<p>Researchers are usually not primarily interested in the specific subjects that happened to participate in their experiment. Instead the population of potential subjects is the target of inference. Therefore, we are unsatisfied with parameters which describe only the individuals in our sample: The final statistical model should have parameters that estimate features of the population of interest.</p>
<p>Broadly, there are two methods for obtaining these population-level parameters. The most common method is to aggregate manually calculated subject-specific point estimates of <em>d’</em> and <em>c</em> to their sample means and standard deviations. From these, we can calculate standard errors, t-tests, confidence intervals, and so on. The second method involves fitting one model simultaneously to all participants’ data.</p>
<section id="estimating-by-summarizing-subjects-point-estimates" class="level3">
<h3 class="anchored" data-anchor-id="estimating-by-summarizing-subjects-point-estimates">Estimating by summarizing subjects’ point estimates</h3>
<p>Above we calculated <em>d’</em> and <em>c</em> for every participant in the sample. We can therefore calculate sample means and standard errors for both parameters using these individual-specific values. I show one way to do this aggregation in R using <code>summarise()</code> from the dplyr package in Listing&nbsp;6.</p>
<div class="cell" data-layout-align="center">
<div id="lst-sdt-agg" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-sdt-agg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;6: Aggregating a sample’s <em>c</em> and <em>d’</em>.
</figcaption>
<div aria-describedby="lst-sdt-agg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">sdt_agg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sdt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb17-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(</span>
<span id="cb17-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(crit, dprime),</span>
<span id="cb17-5">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb17-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Mean =</span> mean,</span>
<span id="cb17-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SD =</span> sd,</span>
<span id="cb17-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SE =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(.x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(.x))</span>
<span id="cb17-9">      )</span>
<span id="cb17-10">    )</span>
<span id="cb17-11">  )</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">sdt_agg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format_tt</span>()</span></code></pre></div>
</details>
<div id="tbl-sdt-agg" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-layout-align="center">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-sdt-agg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;5: Sample summaries of SDT parameters.
</figcaption>
<div aria-describedby="tbl-sdt-agg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<!-- preamble start -->

    <script>

      function styleCell_qnbizjkh6v2hukng58i0(i, j, css_id) {
          var table = document.getElementById("tinytable_qnbizjkh6v2hukng58i0");
          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors
          if (cell) {
              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);
              cell.classList.add(css_id);
          } else {
              console.warn(`Cell at (${i}, ${j}) not found.`);
          }
      }
      function insertSpanRow(i, colspan, content) {
        var table = document.getElementById('tinytable_qnbizjkh6v2hukng58i0');
        var newRow = table.insertRow(i);
        var newCell = newRow.insertCell(0);
        newCell.setAttribute("colspan", colspan);
        // newCell.innerText = content;
        // this may be unsafe, but innerText does not interpret <br>
        newCell.innerHTML = content;
      }
      function spanCell_qnbizjkh6v2hukng58i0(i, j, rowspan, colspan) {
        var table = document.getElementById("tinytable_qnbizjkh6v2hukng58i0");
        const targetRow = table.rows[i];
        const targetCell = targetRow.cells[j];
        for (let r = 0; r < rowspan; r++) {
          // Only start deleting cells to the right for the first row (r == 0)
          if (r === 0) {
            // Delete cells to the right of the target cell in the first row
            for (let c = colspan - 1; c > 0; c--) {
              if (table.rows[i + r].cells[j + c]) {
                table.rows[i + r].deleteCell(j + c);
              }
            }
          }
          // For rows below the first, delete starting from the target column
          if (r > 0) {
            for (let c = colspan - 1; c >= 0; c--) {
              if (table.rows[i + r] && table.rows[i + r].cells[j]) {
                table.rows[i + r].deleteCell(j);
              }
            }
          }
        }
        // Set rowspan and colspan of the target cell
        targetCell.rowSpan = rowspan;
        targetCell.colSpan = colspan;
      }
      // tinytable span after
      window.addEventListener('load', function () {
          var cellsToStyle = [
            // tinytable style arrays after
          { positions: [ { i: 1, j: 0 }, { i: 1, j: 1 }, { i: 1, j: 2 }, { i: 1, j: 3 }, { i: 1, j: 4 }, { i: 1, j: 5 },  ], css_id: 'tinytable_css_eu8pi8cn824th7iuhkjs',}, 
          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 }, { i: 0, j: 4 }, { i: 0, j: 5 },  ], css_id: 'tinytable_css_9gxl3ua26ocmwg18ll8t',}, 
          ];

          // Loop over the arrays to style the cells
          cellsToStyle.forEach(function (group) {
              group.positions.forEach(function (cell) {
                  styleCell_qnbizjkh6v2hukng58i0(cell.i, cell.j, group.css_id);
              });
          });
      });
    </script>

    <style>
      /* tinytable css entries after */
      .table td.tinytable_css_eu8pi8cn824th7iuhkjs, .table th.tinytable_css_eu8pi8cn824th7iuhkjs { border-bottom: solid #d3d8dc 0.1em; }
      .table td.tinytable_css_9gxl3ua26ocmwg18ll8t, .table th.tinytable_css_9gxl3ua26ocmwg18ll8t { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }
    </style>
    <div class="container">
      <table class="table table-borderless" id="tinytable_qnbizjkh6v2hukng58i0" style="width: auto; margin-left: auto; margin-right: auto;" data-quarto-disable-processing="true">
        <thead>
        
              <tr>
                <th scope="col">crit_Mean</th>
                <th scope="col">crit_SD</th>
                <th scope="col">crit_SE</th>
                <th scope="col">dprime_Mean</th>
                <th scope="col">dprime_SD</th>
                <th scope="col">dprime_SE</th>
              </tr>
        </thead>
        
        <tbody>
                <tr>
                  <td>-0.23</td>
                  <td>0.34</td>
                  <td>0.05</td>
                  <td>1.18</td>
                  <td>0.44</td>
                  <td>0.06</td>
                </tr>
        </tbody>
      </table>
    </div>
<!-- hack to avoid NA insertion in last line -->
</div>
</div>
</figure>
</div>
</div>
<p>The sample means are estimates of the population means, and the sample standard deviations divided by square root of the number of subjects are standard deviations of the means’ sampling distributions, the standard errors. Note that this method involves calculating point estimates of unknown parameters (the subject-specifc estimates), and then summarizing these parameters with additional models. In other words, we first fit N models with P parameters each (N = number of subjects, P = 2 parameters), and then P more models to summarise the subject-specific models.</p>
</section>
<section id="multilevel-model" class="level3">
<h3 class="anchored" data-anchor-id="multilevel-model">Multilevel model</h3>
<p>Another method is to build a multilevel model that simultaneously estimates subject-specific and population-level parameters <span class="citation" data-cites="gelmanDataAnalysisUsing2007 mcelreathStatisticalRethinkingBayesian2020">(Gelman and Hill 2007; McElreath 2020)</span>. <span class="citation" data-cites="rouder_introduction_2005">Rouder and Lu (2005)</span> and <span class="citation" data-cites="rouder_signal_2007">Rouder et al. (2007)</span> discuss multilevel models in the context of Signal Detection Theory. Multilevel models are variously also known as hierarchical, mixed, random-effect, and Generalized (Linear) Mixed Models (GLMMs).</p>
<p>This model is identical to the GLM in Equation&nbsp;3, but now the subject-specific <em>d’</em>s and -<em>c</em>s are modeled as draws from a multivariate normal distribution, whose parameters describe the population. We subscript subjects’ parameters <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> with <em>j</em>, rows in data with <em>i</em>, and write the model as:</p>
<p><span id="eq-glmm"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Ar_%7Bij%7D%20&amp;%5Csim%20%5Ctext%7BBernoulli%7D(p_%7Bij%7D)%20%5C%5C%0Ap_%7Bij%7D%20&amp;=%20%5CPhi((%5Cgamma_%7B0j%7D%20+%20%5Cbeta_0)%20+%20(%5Cgamma_%7B1j%7D%20+%20%5Cbeta_1)%5Ctext%7Bs%7D_%7Bij%7D)%20%5C%5C%0A%5Cbegin%7Bbmatrix%7D%0A%20%20%5Cgamma_0%20%5C%5C%20%5Cgamma_1%0A%5Cend%7Bbmatrix%7D%20&amp;%5Csim%0A%5Coperatorname%7BMVN%7D%5Cleft(%0A%20%20%5Cbegin%7Bbmatrix%7D%200%20%5C%5C%200%20%5Cend%7Bbmatrix%7D,%0A%20%20%5CSigma%0A%5Cright)%20%5C%5C%0A%5CSigma%20&amp;=%0A%20%20%5Cbegin%7Bpmatrix%7D%5Ctau_0%20&amp;%200%20%5C%5C0%20&amp;%5Ctau_1%5Cend%7Bpmatrix%7D%0A%20%20%5Cbegin%7Bpmatrix%7D1%20&amp;%20%5Crho%20%5C%5C%5Crho%20&amp;1%5Cend%7Bpmatrix%7D%0A%20%20%5Cbegin%7Bpmatrix%7D%5Ctau_0%20&amp;%200%20%5C%5C0%20&amp;%5Ctau_1%5Cend%7Bpmatrix%7D%0A%5Cend%7Baligned%7D%0A%5Ctag%7B4%7D"></span></p>
<p>The responses <img src="https://latex.codecogs.com/png.latex?r_%7Bij%7D"> are 0 if participant <em>j</em> responded “new” on trial <em>i</em> and 1 if they responded “old”. The probability of an “old” response on row <em>i</em> for subject <em>j</em> is <img src="https://latex.codecogs.com/png.latex?p_%7Bij%7D"> (line 1 in Equation&nbsp;4). We then write a linear model on the <em>p</em>’s <em>z</em>-scores (<img src="https://latex.codecogs.com/png.latex?%5CPhi">, line 2). The subject-specific intercepts (recall, <img src="https://latex.codecogs.com/png.latex?-%5Cgamma_%7B0j%7D%20=%20c_j">) and slopes (<img src="https://latex.codecogs.com/png.latex?%5Cgamma_%7B1j%7D%20=%20d'_j">) are now deviations from population-level parameters <img src="https://latex.codecogs.com/png.latex?%5Cbeta">, which can be interpreted as parameters “for the average person” <span class="citation" data-cites="bolger_intensive_2013">(Bolger and Laurenceau 2013)</span>.</p>
<p>These subject-specific deviations are modeled as draws from a multivariate normal distribution, whose covariance matrix <img src="https://latex.codecogs.com/png.latex?%5CSigma"> contains the (co)variances of the parameters in the population (line 3). The software we use instead estimates standard deviations and correlations, and so the covariance matrix is constructed on line 4. The standard deviations <img src="https://latex.codecogs.com/png.latex?%5Ctau"> describe the between-person heterogeneities in the population. The correlation term <img src="https://latex.codecogs.com/png.latex?%5Crho"> describes the relationship between <em>d’</em> and <em>c</em>: Are people with a higher <em>d’</em> more likely to have a higher <em>c</em>? This model is therefore more informative than running multiple separate GLMs, because it allows examining parameters’ heterogeneity in the population <span class="citation" data-cites="vuorreCommunicatingCausalEffect2024">(e.g. Vuorre, Kay, and Bolger 2024)</span>.</p>
<p>The brms syntax for this model is very similar to the one-subject model. We have five population-level parameters to estimate (<img src="https://latex.codecogs.com/png.latex?%5Cbeta,%20%5Ctau,%20%5Crho">). The intercept and slope describe the means: In R and brms modeling syntax, an intercept is indicated with <code>1</code> (it is automatically included, so I omit it), and slope of a variable by including that variable’s name in the data.</p>
<p>However, we also have three (co)variance parameters to estimate. To include subject-specific parameters (recall, subjects are indexed by <code>pid</code> in the data frame), and therefore their (co)variance parameters, we expand the formula to <code>response ~ stimulus + (stimulus | pid)</code>. Otherwise, the call to <code>brm()</code> is the same as with the GLM above:</p>
<div class="cell" data-layout-align="center">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">fit_glmm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb19-2">  response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid),</span>
<span id="cb19-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bernoulli</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>),</span>
<span id="cb19-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat,</span>
<span id="cb19-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-glmm-1"</span></span>
<span id="cb19-6">)</span></code></pre></div>
</details>
</div>
<p>However, before proceeding, we introduce a computational shortcut. As the number of trials and participants increases, data in long format (such as <code>dat</code> shown in Table&nbsp;1) quickly grows in size. Because of how Bayesian models are estimated, larger data and more complex models increase the model estimation time. We therefore estimate exactly the same model, but on data that is aggregated to counts of unique response-predictor combinations to speed up the estimation process. We do this in Listing&nbsp;7, where we aggregate the raw data (with 14400 rows) to a table of <code>pid</code>-<code>stimulus</code>-<code>response</code> counts (indicated by <code>n</code> in the data table that now has 192 rows). We can then reap the speed benefits of this data aggregation by using <code>weights(n)</code> to indicate how much weight to give to observation.</p>
<div class="cell" data-layout-align="center">
<div id="lst-glmm" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-glmm-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;7: Fitting the SDT model for multiple participants as a GLMM with <code>brm()</code>.
</figcaption>
<div aria-describedby="lst-glmm-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">dat_agg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(pid, stimulus, response)</span>
<span id="cb20-3"></span>
<span id="cb20-4">fit_glmm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb20-5">  response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weights</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid),</span>
<span id="cb20-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bernoulli</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>),</span>
<span id="cb20-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat_agg,</span>
<span id="cb20-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-glmm"</span></span>
<span id="cb20-9">)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>The Regression Coefficients in the output below are -<em>c</em> (<code>Intercept</code> = <img src="https://latex.codecogs.com/png.latex?%5Cbeta_0">) and <em>d’</em> (<code>stimulus1</code> = <img src="https://latex.codecogs.com/png.latex?%5Cbeta_1">) for the average person. Recall that we are looking at numerical summaries of (random samples from) the parameters’ posterior distributions: <code>Estimate</code> is the posterior mean, <code>Est.Error</code> the posterior standard deviations, and <code>l-95% CI</code> and <code>u-95% CI</code> the limits of the 95%CI.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Omit MCMC info in brmsfit.summary</span></span>
<span id="cb21-2">.summary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) {</span>
<span id="cb21-3">  out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(x)</span>
<span id="cb21-4">  out<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>random<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> out<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>random<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pid[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb21-5">  out<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fixed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> out<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fixed[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb21-6">  out<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>spec_pars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> out<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>spec_pars[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb21-7">  out</span>
<span id="cb21-8">}</span>
<span id="cb21-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.summary</span>(fit_glmm)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: bernoulli 
  Links: mu = probit 
Formula: response | weights(n) ~ stimulus + (stimulus | pid) 
   Data: dat_agg (Number of observations: 192) 

Multilevel Hyperparameters:
~pid (Number of levels: 48) 
                         Estimate Est.Error l-95% CI u-95% CI
sd(Intercept)                0.34      0.04     0.27     0.42
sd(stimulus1)                0.42      0.05     0.33     0.53
cor(Intercept,stimulus1)     0.20      0.15    -0.11     0.48

Regression Coefficients:
          Estimate Est.Error l-95% CI u-95% CI
Intercept     0.22      0.05     0.12     0.33
stimulus1     1.17      0.07     1.04     1.29</code></pre>
</div>
</div>
<p>These estimates tell us that the average person in the population from which our sample was drawn has a somewhat liberal response bias and good ability to discriminate old from new items. To clarify the correspondence between the two estimation methods, we can compare these population-level parameters of this model to the sample summary statistics we calculated above. The posterior means map to the calculated means, and the posterior standard deviations match the calculated standard errors (Table&nbsp;5). I also visualize these estimates in Figure&nbsp;4.</p>
<p>However, the GLMM also returns estimates of the parameters’ (co)variation in the population. Notice that we also calculated the sample standard deviations, but we have no estimates of uncertainty in those point estimates (Table&nbsp;5). The GLMM, on the other hand, provides full posterior distributions for these parameters. The heterogeneity parameters are reported in the Multilevel Hyperparameters section, above. We find that the criteria are positively correlated with <em>d’</em>s. The two standard deviations are visualized in the middle panel of Figure&nbsp;4.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">pa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_draws_df</span>(fit_glmm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">regex =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_Intercept =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b_Intercept) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(b_Intercept, b_stimulus1)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">s_f_g</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_density_2d</span>(</span>
<span id="cb23-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(ndensity)),</span>
<span id="cb23-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"raster"</span>,</span>
<span id="cb23-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contour =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb23-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">201</span></span>
<span id="cb23-10">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb23-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sdt_agg,</span>
<span id="cb23-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> crit_Mean, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> dprime_Mean),</span>
<span id="cb23-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> pid1color,</span>
<span id="cb23-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb23-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb23-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Criterion"</span>,</span>
<span id="cb23-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d'"</span></span>
<span id="cb23-20">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb23-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb23-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb23-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb23-26">  )</span>
<span id="cb23-27"></span>
<span id="cb23-28">pb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_draws_df</span>(fit_glmm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd_"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">regex =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(sd_pid__Intercept, sd_pid__stimulus1)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">s_f_g</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_density_2d</span>(</span>
<span id="cb23-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(density)),</span>
<span id="cb23-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"raster"</span>,</span>
<span id="cb23-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contour =</span> F,</span>
<span id="cb23-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb23-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">201</span></span>
<span id="cb23-37">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb23-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sdt_agg,</span>
<span id="cb23-40">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> crit_SD, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> dprime_SD),</span>
<span id="cb23-41">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> pid1color,</span>
<span id="cb23-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb23-43">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb23-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Criterion"</span>,</span>
<span id="cb23-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d'"</span></span>
<span id="cb23-48">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb23-50"></span>
<span id="cb23-51">intercepts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fit_glmm)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pid[,, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Intercept"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crit_2 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Estimate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unused"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(sdt, pid, dprime, crit))</span>
<span id="cb23-57">slopes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fit_glmm)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pid[,, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stimulus1"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-61">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dprime_2 =</span> Estimate)</span>
<span id="cb23-62">pc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(intercepts, slopes, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb23-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb23-65">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Criterion"</span>,</span>
<span id="cb23-66">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pretty_breaks</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb23-67">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-68">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb23-69">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d'"</span>,</span>
<span id="cb23-70">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pretty_breaks</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb23-71">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-72">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(</span>
<span id="cb23-73">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> crit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> crit_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> dprime, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> dprime_2),</span>
<span id="cb23-74">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb23-75">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"closed"</span>)</span>
<span id="cb23-76">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-77">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb23-78"></span>
<span id="cb23-79">((pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pb <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pc) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-80">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guides =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collect"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb23-81">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-glmm" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-glmm-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-glmm-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="768">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-glmm-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: <strong>Left.</strong> The (approximate) joint posterior density of the average <em>d’</em> and criterion. Lighter values indicate higher posterior probability. <strong>Middle.</strong> The (approximate) joint posterior density of the standard deviations of <em>d’</em> and criterion in the population. In both panels, the red dot indicates sample statistics. <strong>Right.</strong> Subject-specific <em>d’</em>s and criteria as given by the independent models (arrow origins), and as estimated by the hierarchical model (arrow tips). The hierarchical model shrinks the estimated parameters toward the population means. This shrinkage is greater for more extreme parameter values: Each subject-specific parameter is a compromise between that subject’s data, and other subjects in the sample.
</figcaption>
</figure>
</div>
</div>
</div>
<p>It is evident in Figure&nbsp;4 that the sample means approximately match the posterior mean population means, but less so for the standard deviations, whose sample statistics are not at the peak of the standard deviations’ posterior distribution. By ignoring the uncertainty in the subject-specific parameters, the ‘manual calculation’ method has over-estimated the heterogeneity of <em>d’</em> and <em>c</em> in the population, in comparison to the GLMM which takes the subject-specific parameters’ uncertainty into account.</p>
<p>This deviation has further implications, revealed by investigating the two methods’ estimates of the subject-specific parameters. Recall that the manual calculation method involved estimating (the point estimates of) a separate model for each participant. A hierarchical model considers all participants’ data simultaneously, and the estimates are allowed to inform each other via a shared prior distribution. This “partial pooling” of information <span class="citation" data-cites="gelmanDataAnalysisUsing2007">(Gelman and Hill 2007)</span> reduces overfitting and thereby returns estimates with better predictive performance <span class="citation" data-cites="efronSteinsParadoxStatistics1977">(Efron and Morris 1977)</span>. The subject-specific effects are pulled toward their means, an effect that is most visible for participants with most extreme values (right panel of Figure&nbsp;4).</p>
</section>
</section>
<section id="sdt-analysis-of-rating-data" class="level2">
<h2 class="anchored" data-anchor-id="sdt-analysis-of-rating-data">SDT analysis of rating data</h2>
<p>Until now, we have considered analyses of a detection task where stimuli were either old or new, and participants provided binary “old” and “new” responses. We now turn to the Rating task where participants instead rate their degree of confidence that the stimulus was old or new.</p>
<section id="example-rating-task-and-data" class="level3">
<h3 class="anchored" data-anchor-id="example-rating-task-and-data">Example rating task and data</h3>
<p>This, as mentioned above, is exactly what subjects in <span class="citation" data-cites="koen_examining_2013">Koen et al. (2013)</span> did: On each trial, subjects responded with a 6-point Likert item indicating their confidence in the item being new or old (1: “sure new”, 2: “maybe new”, 3: “guess new”, 4: “guess old”, 5: “maybe old”, 6: “sure old”). I show these data in Table&nbsp;6.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb24-2">dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), as.character)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(</span>
<span id="cb24-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..."</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stimulus =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..."</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">response =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..."</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..."</span>),</span>
<span id="cb24-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.after =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb24-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tt</span>()</span></code></pre></div>
</details>
<div id="tbl-sdt2" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-layout-align="center">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-sdt2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;6: Aggregated example data from subject 1 in the control condition of Koen et al.&nbsp;(2013), Experiment 2. First and last two rows are shown for brevity.
</figcaption>
<div aria-describedby="tbl-sdt2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<!-- preamble start -->

    <script>

      function styleCell_lyf2l9lo2ipm5j6v5qb7(i, j, css_id) {
          var table = document.getElementById("tinytable_lyf2l9lo2ipm5j6v5qb7");
          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors
          if (cell) {
              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);
              cell.classList.add(css_id);
          } else {
              console.warn(`Cell at (${i}, ${j}) not found.`);
          }
      }
      function insertSpanRow(i, colspan, content) {
        var table = document.getElementById('tinytable_lyf2l9lo2ipm5j6v5qb7');
        var newRow = table.insertRow(i);
        var newCell = newRow.insertCell(0);
        newCell.setAttribute("colspan", colspan);
        // newCell.innerText = content;
        // this may be unsafe, but innerText does not interpret <br>
        newCell.innerHTML = content;
      }
      function spanCell_lyf2l9lo2ipm5j6v5qb7(i, j, rowspan, colspan) {
        var table = document.getElementById("tinytable_lyf2l9lo2ipm5j6v5qb7");
        const targetRow = table.rows[i];
        const targetCell = targetRow.cells[j];
        for (let r = 0; r < rowspan; r++) {
          // Only start deleting cells to the right for the first row (r == 0)
          if (r === 0) {
            // Delete cells to the right of the target cell in the first row
            for (let c = colspan - 1; c > 0; c--) {
              if (table.rows[i + r].cells[j + c]) {
                table.rows[i + r].deleteCell(j + c);
              }
            }
          }
          // For rows below the first, delete starting from the target column
          if (r > 0) {
            for (let c = colspan - 1; c >= 0; c--) {
              if (table.rows[i + r] && table.rows[i + r].cells[j]) {
                table.rows[i + r].deleteCell(j);
              }
            }
          }
        }
        // Set rowspan and colspan of the target cell
        targetCell.rowSpan = rowspan;
        targetCell.colSpan = colspan;
      }
      // tinytable span after
      window.addEventListener('load', function () {
          var cellsToStyle = [
            // tinytable style arrays after
          { positions: [ { i: 5, j: 0 }, { i: 5, j: 1 }, { i: 5, j: 2 }, { i: 5, j: 3 },  ], css_id: 'tinytable_css_ypzk58ilsf1nt5tieldm',}, 
          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 },  ], css_id: 'tinytable_css_0zri8tgl5kkvcg151faz',}, 
          ];

          // Loop over the arrays to style the cells
          cellsToStyle.forEach(function (group) {
              group.positions.forEach(function (cell) {
                  styleCell_lyf2l9lo2ipm5j6v5qb7(cell.i, cell.j, group.css_id);
              });
          });
      });
    </script>

    <style>
      /* tinytable css entries after */
      .table td.tinytable_css_ypzk58ilsf1nt5tieldm, .table th.tinytable_css_ypzk58ilsf1nt5tieldm { border-bottom: solid #d3d8dc 0.1em; }
      .table td.tinytable_css_0zri8tgl5kkvcg151faz, .table th.tinytable_css_0zri8tgl5kkvcg151faz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }
    </style>
    <div class="container">
      <table class="table table-borderless" id="tinytable_lyf2l9lo2ipm5j6v5qb7" style="width: auto; margin-left: auto; margin-right: auto;" data-quarto-disable-processing="true">
        <thead>
        
              <tr>
                <th scope="col">pid</th>
                <th scope="col">stimulus</th>
                <th scope="col">response</th>
                <th scope="col">n</th>
              </tr>
        </thead>
        
        <tbody>
                <tr>
                  <td>1</td>
                  <td>Old</td>
                  <td>1</td>
                  <td>15</td>
                </tr>
                <tr>
                  <td>1</td>
                  <td>Old</td>
                  <td>2</td>
                  <td>11</td>
                </tr>
                <tr>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                  <td>...</td>
                </tr>
                <tr>
                  <td>1</td>
                  <td>New</td>
                  <td>5</td>
                  <td>10</td>
                </tr>
                <tr>
                  <td>1</td>
                  <td>New</td>
                  <td>6</td>
                  <td>15</td>
                </tr>
        </tbody>
      </table>
    </div>
<!-- hack to avoid NA insertion in last line -->
</div>
</div>
</figure>
</div>
</div>
<p>A common and plausible interpretation of these data is that participants use a set of criteria, such that greater evidence is required for greater numerical responses. That is, there will be different criteria for responding “definitely new”, “maybe new”, and so forth. Generally, such data is commonly analyzed with models that assume a continuous (usually normally distributed) outcome. However, this practice can lead to problems when data isn’t well-behaved, and therefore models that appropriately account for the responses’ ordinal nature are recommended <span class="citation" data-cites="liddellAnalyzingOrdinalData2018">(Liddell and Kruschke 2018)</span>. An accessible introduction to such ordinal models can be found in <span class="citation" data-cites="burknerOrdinalRegressionModels2019">Bürkner and Vuorre (2019)</span>, and Chapter 12.3 of <span class="citation" data-cites="mcelreathStatisticalRethinkingBayesian2020">McElreath (2020)</span>.</p>
<p>Above, we noted that a GLM with a Bernoulli response function and probit link function is a regression formulation of the basic SDT model of Yes/No data. Similarly, one class of ordinal models, called the <em>cumulative model</em> in <span class="citation" data-cites="burknerOrdinalRegressionModels2019">Bürkner and Vuorre (2019)</span>, provides a regression formulation of SDT models for data from a Rating task <span class="citation" data-cites="decarlo_signal_1998 decarlo_using_2003">(see also DeCarlo 1998; Decarlo 2003)</span>.</p>
</section>
<section id="model-for-one-subject" class="level3">
<h3 class="anchored" data-anchor-id="model-for-one-subject">Model for one subject</h3>
<p>For rating data, the SDT model is very similar to the one for Yes/No task data, but now includes multiple intercepts, commonly referred to as thresholds. These thresholds index criteria that subjects use to split their internal experiences (evidence) to the different response categories, and therefore conceptually correspond to <em>c</em>. For <em>k</em> response options, we need <img src="https://latex.codecogs.com/png.latex?k%20-%201"> thresholds. The criteria are ordered: People should be more likely to respond “sure old” rather than “maybe old” when evidence (memory strength) is greater. To connect with the ongoing, we label these thresholds as <img src="https://latex.codecogs.com/png.latex?c_k"> (<img src="https://latex.codecogs.com/png.latex?%5Ctau_k"> in <span class="citation" data-cites="burknerOrdinalRegressionModels2019">Bürkner and Vuorre (2019)</span>; <img src="https://latex.codecogs.com/png.latex?%5Calpha_k"> or <img src="https://latex.codecogs.com/png.latex?%5Ckappa_k"> in <span class="citation" data-cites="mcelreathStatisticalRethinkingBayesian2020">McElreath (2020)</span>, Chapter 12.3.) We then write the probability of a response <em>r</em> being in category <em>k</em> in Equation&nbsp;5.</p>
<p><span id="eq-thresholds"><img src="https://latex.codecogs.com/png.latex?%0APr(r_i%20=%20k)%20=%20%5CPhi(c_k%20-%20%5Ceta_i)%20-%20%5CPhi(c_%7Bk-1%7D%20-%20%5Ceta_i).%0A%5Ctag%7B5%7D"></span></p>
<p>We can consider Equation&nbsp;5 as a somewhat convoluted link function, after which we specify a regression model on the linear predictor <img src="https://latex.codecogs.com/png.latex?%5Ceta">:</p>
<p><span id="eq-eta"><img src="https://latex.codecogs.com/png.latex?%0A%5Ceta_i%20=%20%5Cbeta_1s_i%0A%5Ctag%7B6%7D"></span></p>
<p>Note that we conspicuously omitted an intercept in the linear model (Equation&nbsp;6), because the intercept<em>s</em> are already included as thresholds in Equation&nbsp;5: The cumulative model estimates intercepts (<img src="https://latex.codecogs.com/png.latex?c_k">) that partition the latent evidence distribution into response categories (<em>k</em>), and a slope parameter that indexes the distance between the noise and signal distribution’s means. To connect with the SDT model for Yes/No data, we label the slope (<img src="https://latex.codecogs.com/png.latex?%5Cbeta_1">) again as <em>d’</em>. The brms syntax for estimating this model with participant 1’s data is shown in Listing&nbsp;8.</p>
<div class="cell" data-layout-align="center">
<div id="lst-glm-rating" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-glm-rating-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;8: Estimating one participant’s rating data with a cumulative model.
</figcaption>
<div aria-describedby="lst-glm-rating-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">fit_evsdt1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb25-2">  response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weights</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus,</span>
<span id="cb25-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumulative</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>),</span>
<span id="cb25-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(dat2, pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb25-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-glm-evsdt"</span></span>
<span id="cb25-6">)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>Note that the only change from the Bernoulli model of Yes/No data (Listing&nbsp;5) is that we now used <code>family = cumulative()</code>, and the actual rating data (<code>dat2</code>). In addition, we have not sum-to-zero coded the <code>stimulus</code> predictor for this model. The model’s posterior distribution is summarised below:</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit_evsdt1)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: cumulative 
  Links: mu = probit; disc = identity 
Formula: response | weights(n) ~ stimulus 
   Data: filter(dat2, pid == 1) (Number of observations: 12) 

Regression Coefficients:
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
Intercept[1]     0.00      0.10    -0.19     0.19 1.00     5332     3112
Intercept[2]     0.39      0.10     0.20     0.59 1.00     5860     3160
Intercept[3]     0.61      0.10     0.42     0.82 1.00     5634     3383
Intercept[4]     0.92      0.11     0.71     1.13 1.00     5667     3456
Intercept[5]     1.26      0.12     1.04     1.49 1.00     5551     3443
stimulusOld      1.37      0.14     1.11     1.64 1.00     5497     2876

Further Distributional Parameters:
     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
disc     1.00      0.00     1.00     1.00   NA       NA       NA</code></pre>
</div>
</div>
<p>The five intercepts are the five thresholds, and <code>stimulus1</code> is <em>d’</em>. We can now illustrate graphically how the estimated parameters map to the signal detection model. <em>d’</em> is the separation of the signal and noise distributions’ peaks: It indexes the subject’s ability to discriminate signal from noise trials. The five intercepts are the (z-scored) criteria for responding with the different confidence ratings. If we convert the z-scores to proportions (using R’s <code>pnorm()</code> for example), they measure the (cumulative) area under the noise distribution to the left of that z-score. The model is visualized in Figure&nbsp;5.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb28-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>,</span>
<span id="cb28-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>))</span>
<span id="cb28-5">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb28-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evidence"</span></span>
<span id="cb28-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb28-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb28-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb28-12">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> s),</span>
<span id="cb28-13">    ),</span>
<span id="cb28-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb28-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb28-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,</span>
<span id="cb28-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb28-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb28-19">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb28-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixef</span>(fit_evsdt1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb28-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb28-23">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb28-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixef</span>(fit_evsdt1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb28-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb28-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb28-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,</span>
<span id="cb28-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb28-30">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evidence"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb28-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb28-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb28-35">  )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-glm-rating" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-glm-rating-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-glm-rating-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="288">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-glm-rating-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Signal detection model of participant 1’s rating data, visualized from the parameters’ posterior means. The two distributions are the noise distribution (dashed) and the signal distribution (solid). Vertical lines are the estimated thresholds. d’ is the distance between the peaks of the two distributions.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="model-for-multiple-participants" class="level3">
<h3 class="anchored" data-anchor-id="model-for-multiple-participants">Model for multiple participants</h3>
<p>For a sample of subjects, we could again compute each individual’s parameters and summarize them in another model. We won’t bother but instead turn immediately to a multilevel model formulation. A multilevel model, however, can take at least two forms. The first, shown now, includes subject-specific deviations in the linear model of <img src="https://latex.codecogs.com/png.latex?%5Ceta">:</p>
<p><span id="eq-eta-glmm"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Ceta_%7Bij%7D%20&amp;=%20%5Cgamma_%7B0j%7D%20+%20(%5Cgamma_%7B1j%7D%20+%20%5Cbeta_1)%5Ctext%7Bs%7D_%7Bij%7D%20%5C%5C%0A%5Cbegin%7Bbmatrix%7D%0A%20%20%5Cgamma_0%20%5C%5C%20%5Cgamma_1%0A%5Cend%7Bbmatrix%7D%20&amp;%5Csim%0A%5Coperatorname%7BMVN%7D%5Cleft(%0A%20%20%5Cbegin%7Bbmatrix%7D%200%20%5C%5C%200%20%5Cend%7Bbmatrix%7D,%0A%20%20%5CSigma%0A%5Cright)%0A%5Cend%7Baligned%7D%0A%5Ctag%7B7%7D"></span></p>
<p>Notice that we again omit any population-level intercept in Equation&nbsp;7, but include by-subject random intercepts <img src="https://latex.codecogs.com/png.latex?%5Cgamma_0">. I omit expanding <img src="https://latex.codecogs.com/png.latex?%5CSigma"> here–it is the same as in Equation&nbsp;4. The brms syntax is the same as in Listing&nbsp;7, but instead of a bernoulli outcome distribution, we use <code>cumulative()</code> (Listing&nbsp;9). Alternatively, the model syntax is identical to that in Listing&nbsp;8, but we now include subject-specific random coefficients with <code>(stimulus | pid)</code>.</p>
<div class="cell" data-layout-align="center">
<div id="lst-glmm-evsdt" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-glmm-evsdt-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;9: Estimating a cumulative model for multiple participants with <code>brm()</code>.
</figcaption>
<div aria-describedby="lst-glmm-evsdt-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">fit_evsdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb29-2">  response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weights</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid),</span>
<span id="cb29-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumulative</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>),</span>
<span id="cb29-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(dat2),</span>
<span id="cb29-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-glmm-evsdt"</span></span>
<span id="cb29-6">)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>The model summary is printed below</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.summary</span>(fit_evsdt)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: cumulative 
  Links: mu = probit; disc = identity 
Formula: response | weights(n) ~ stimulus + (stimulus | pid) 
   Data: filter(dat2) (Number of observations: 576) 

Multilevel Hyperparameters:
~pid (Number of levels: 48) 
                           Estimate Est.Error l-95% CI u-95% CI
sd(Intercept)                  0.30      0.03     0.24     0.38
sd(stimulusOld)                0.46      0.05     0.37     0.58
cor(Intercept,stimulusOld)    -0.36      0.13    -0.60    -0.09

Regression Coefficients:
             Estimate Est.Error l-95% CI u-95% CI
Intercept[1]    -0.81      0.05    -0.90    -0.71
Intercept[2]    -0.16      0.05    -0.25    -0.06
Intercept[3]     0.31      0.05     0.22     0.41
Intercept[4]     0.58      0.05     0.48     0.67
Intercept[5]     0.90      0.05     0.81     0.99
stimulusOld      1.12      0.07     0.98     1.26

Further Distributional Parameters:
     Estimate Est.Error l-95% CI u-95% CI
disc     1.00      0.00     1.00     1.00</code></pre>
</div>
</div>
<p>Draw your attention to the “Multilevel Hyperparameters” section. The standard deviation of the model intercept in the population is approximately 0.3 (posterior mean), and that of the <em>d’</em> is ~0.5. However, the link function of the model partitions the latent normal (“evidence”) distribution into <em>k</em> (6) categories using <em>k-1</em> thresholds (5). The latter are estimated for the population and shown above as <code>Intercept[1-5]</code>. Why is there only a standard deviation parameter for one intercept?</p>
<p>The answer, in brief, is that it is difficult to estimate subject-specific thresholds as random parameters and simultaneously retain their ordering. Therefore, the brms syntax estimates instead one “slope” parameter for each participant that shifts the entire evidence distribution for that participant, relative to the “average subject”. The interpretation of such a shift is interchangeably either that a participant’s evidence distribution has shifted, or that their thresholds have shifted by an identical amount. We agree with the latter interpretation—an equal shifting of the thresholds—because it makes little sense to assume that anyone would have a non-zero evidence distribution for noise stimuli.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1">coefs_evsdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb32-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fit_evsdt)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Estimate"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename_with</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(.x, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Estimate."</span>)),</span>
<span id="cb32-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixef</span>(fit_evsdt) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-10">    _[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"var"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> var, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> Estimate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>)</span>
<span id="cb32-14">)</span>
<span id="cb32-15"></span>
<span id="cb32-16">pids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"22"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"36"</span>)</span>
<span id="cb32-17"></span>
<span id="cb32-18">pa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> coefs_evsdt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pids, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb32-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>,</span>
<span id="cb32-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>))</span>
<span id="cb32-24">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb32-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evidence"</span></span>
<span id="cb32-27">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb32-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb32-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> s)),</span>
<span id="cb32-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb32-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb32-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,</span>
<span id="cb32-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb32-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb32-36">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb32-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> coefs_evsdt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-39">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pids, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb32-40">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Intercept[1]</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Intercept[5]</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>),</span>
<span id="cb32-41">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> value),</span>
<span id="cb32-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb32-43">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb32-45">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> stimulusOld, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb32-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb32-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb32-48">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,</span>
<span id="cb32-49">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb32-50">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evidence"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb32-54">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb32-55">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb32-56">  )</span>
<span id="cb32-57">pa</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-glmm-rating1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-glmm-rating1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-glmm-rating1-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="384">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-glmm-rating1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: Implied SDT model from multilevel regression model with by-subject random intercepts and slopes. Density curves indicate latent evidence distributions (dashed line: noise trials; solid line: signal trials). Vertical lines indicate thresholds.
</figcaption>
</figure>
</div>
</div>
</div>
<p>To aid interpretation, I have also visualized the multilevel cumulative model’s implied SDT model, for the population average and three subjects, in Figure&nbsp;6. A close inspection of this figure reveals that the distance between the thresholds (vertical lines) is identical for every participant (and the population average). While this formulation of the model is parsimonius, it is important to note that it could be considered in violation of some SDT assumptions by not allowing these thresholds to flexibly vary between individuals. To address this potential limitation, we now estimate a variation of this model that estimates fixed subject-specific thresholds.</p>
<section id="a-multilevel-model-with-subject-specific-thresholds" class="level4">
<h4 class="anchored" data-anchor-id="a-multilevel-model-with-subject-specific-thresholds">A multilevel model with subject-specific thresholds</h4>
<p>The syntax for this model is similar to above, but we use <code>thres(gr = pid)</code> to specify that the thresholds should be estimated separately for each participant (Listing&nbsp;10). Then, we omit subject-specific random intercepts by <code>(0 + stimulus | pid)</code> and <code>cmc = FALSE</code>, which ensures that R’s default cell-mean coding for models without an intercept is disabled. Finally, we increase the <code>adapt_delta</code> control parameter from its default 0.8 to better estimate the model’s posterior distribution.</p>
<div class="cell" data-layout-align="center">
<div id="lst-evsdt-thresholds" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-evsdt-thresholds-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;10: Estimating multiple participants’ rating data with a cumulative model with fixed subject-specific thresholds.
</figcaption>
<div aria-describedby="lst-evsdt-thresholds-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">fit_evsdt_thresholds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(</span>
<span id="cb33-3">    response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weights</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">thres</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gr =</span> pid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid),</span>
<span id="cb33-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cmc =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb33-5">  ),</span>
<span id="cb33-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumulative</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>),</span>
<span id="cb33-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(dat2),</span>
<span id="cb33-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>),</span>
<span id="cb33-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-glmm-evsdt-thresholds"</span></span>
<span id="cb33-10">)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>This “fixed thresholds” model is conceptually very similar to the “random intercepts” model above, but instead of estimating one deviation per subject, we have estimated all five thresholds for all participants. To make this clear, I show the model’s summary below. Contrast this to summary above, which reported random intercepts (their SD as <code>sd(Intercept)</code>) and slopes (<code>sd(stimulusOld)</code>), this only includes random slopes and instead fixed (“population level”) thresholds for participants, reported as <code>Intercept[subject, threshold]</code>, below:</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prevent printing too much information</span></span>
<span id="cb34-2">max_print <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max.print"</span>)</span>
<span id="cb34-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.print =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)</span>
<span id="cb34-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.summary</span>(fit_evsdt_thresholds)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: cumulative 
  Links: mu = probit; disc = identity 
Formula: response | weights(n) + thres(gr = pid) ~ stimulus + (0 + stimulus | pid) 
   Data: filter(dat2) (Number of observations: 576) 

Multilevel Hyperparameters:
~pid (Number of levels: 48) 
                Estimate Est.Error l-95% CI u-95% CI
sd(stimulusOld)     0.44      0.05     0.35     0.55

Regression Coefficients:
                Estimate Est.Error l-95% CI u-95% CI
Intercept[1,1]     -0.01      0.10    -0.20     0.18
Intercept[1,2]      0.38      0.10     0.18     0.57
Intercept[1,3]      0.60      0.10     0.40     0.79
Intercept[1,4]      0.90      0.11     0.69     1.11
Intercept[1,5]      1.25      0.11     1.02     1.47
Intercept[2,1]     -1.89      0.21    -2.32    -1.51
Intercept[2,2]     -0.33      0.09    -0.51    -0.14
Intercept[2,3]      0.38      0.09     0.19     0.56
 [ reached getOption("max.print") -- omitted 233 rows ]

Further Distributional Parameters:
     Estimate Est.Error l-95% CI u-95% CI
disc     1.00      0.00     1.00     1.00</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.print =</span> max_print)</span></code></pre></div>
</details>
</div>
<p>To help clarify the difference between these two models, I show the implied latent distributions and thresholds from the “fixed thresholds” model in Figure&nbsp;7 (along with Figure&nbsp;6). As is shown, the “fixed thresholds” model (bottom) allows for flexible thresholds for each participant, whereas the “random intercepts” model (top) only allows the average location of the thresholds to vary between participants. Also notable is the extremely low first threshold for participant 19: This participant had zero “1 (sure new)” responses (either for new or old items). Therefore the threshold location, when they are treated as fixed, not random, is completely decided by the prior distribution. By default, brms has used a <img src="https://latex.codecogs.com/png.latex?t%5E+(3,%200,%202.5)"> prior.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">tmp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(</span>
<span id="cb37-2">  fit_evsdt_thresholds,</span>
<span id="cb37-3">  r_pid[pid, variable],</span>
<span id="cb37-4">  b_stimulusOld</span>
<span id="cb37-5">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r_pid =</span> r_pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b_stimulusOld) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(r_pid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(pid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids)</span>
<span id="cb37-10">tmp2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(fit_evsdt_thresholds, b_stimulusOld) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r_pid =</span> b_stimulusOld) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>)</span>
<span id="cb37-13">pb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tmp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(tmp2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb37-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>,</span>
<span id="cb37-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>))</span>
<span id="cb37-19">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb37-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evidence"</span></span>
<span id="cb37-22">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb37-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb37-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> s)),</span>
<span id="cb37-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb37-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb37-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,</span>
<span id="cb37-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb37-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb37-31">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb37-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(fit_evsdt_thresholds, b_Intercept[pid, threshold]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-34">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(pid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-35">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb37-36">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(),</span>
<span id="cb37-37">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> b_Intercept),</span>
<span id="cb37-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb37-39">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb37-41">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> r_pid, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb37-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb37-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb37-44">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,</span>
<span id="cb37-45">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb37-46">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evidence"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb37-50">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb37-51">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb37-52">  )</span>
<span id="cb37-53">((pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pb) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collect"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-glmm-thresholds1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-glmm-thresholds1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-glmm-thresholds1-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-glmm-thresholds1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;7: <strong>Top.</strong> As Figure&nbsp;6. <strong>Bottom.</strong> Implied SDT models for three participants, and population, from multilevel model with by-subject random slopes and fixed intercepts.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Given these two different models for essentially the same analytic problem, it is then critical to compare their key parameters. In Figure&nbsp;8, I show <em>d’</em>s from both models for every participant. As shown, while the participant-specific parameters differ between models, the differences are small and their rank-orderings are very similar. Moreover, the population-level <em>d’</em> is nearly identical between models.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1">coef_evsdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(fit_evsdt, r_pid[pid, variable], b_stimulusOld) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(variable <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stimulusOld"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r_pid =</span> r_pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b_stimulusOld) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(r_pid)</span>
<span id="cb38-5">coef_evsdt_thresholds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(</span>
<span id="cb38-6">  fit_evsdt_thresholds,</span>
<span id="cb38-7">  r_pid[pid, variable],</span>
<span id="cb38-8">  b_stimulusOld</span>
<span id="cb38-9">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r_pid =</span> r_pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b_stimulusOld) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(r_pid)</span>
<span id="cb38-12">fixef_evsdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb38-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_draws</span>(fit_evsdt, b_stimulusOld)),</span>
<span id="cb38-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_draws</span>(fit_evsdt_thresholds, b_stimulusOld)),</span>
<span id="cb38-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".variable"</span></span>
<span id="cb38-16">)</span>
<span id="cb38-17"></span>
<span id="cb38-18">coef_evsdt_both <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb38-19">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Random intercept"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> coef_evsdt,</span>
<span id="cb38-20">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fixed thresholds"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> coef_evsdt_thresholds,</span>
<span id="cb38-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model"</span></span>
<span id="cb38-22">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rank =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rank</span>(r_pid), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> Model)</span>
<span id="cb38-24"></span>
<span id="cb38-25">LIMITS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>)</span>
<span id="cb38-26"></span>
<span id="cb38-27">pa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> coef_evsdt_both <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(pid), r_pid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(r_pid, pid, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> Model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> .lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> .upper)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(</span>
<span id="cb38-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set1"</span></span>
<span id="cb38-32">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb38-34">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d'"</span>,</span>
<span id="cb38-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> LIMITS</span>
<span id="cb38-36">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Subject"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>(</span>
<span id="cb38-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,</span>
<span id="cb38-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fatten =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>,</span>
<span id="cb38-41">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb38-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_dodge</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>),</span>
<span id="cb38-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>,</span>
<span id="cb38-44">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span></span>
<span id="cb38-45">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb38-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb38-48">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.direction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"horizontal"</span>,</span>
<span id="cb38-49">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb38-50">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb38-51">  )</span>
<span id="cb38-52">coef_evsdt_both_wide <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> coef_evsdt_both <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Model, pid, r_pid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> Model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> r_pid)</span>
<span id="cb38-55">pb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> coef_evsdt_both_wide <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb38-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Random intercept</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Fixed thresholds</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(</span>
<span id="cb38-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb38-59">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb38-61">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>,</span>
<span id="cb38-62">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span></span>
<span id="cb38-63">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>(</span>
<span id="cb38-65">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> fixef_evsdt,</span>
<span id="cb38-66">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .value.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> .lower.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> .upper.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .value.y)</span>
<span id="cb38-67">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-68">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>(</span>
<span id="cb38-69">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> fixef_evsdt,</span>
<span id="cb38-70">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .value.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .value.y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> .lower.y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> .upper.y)</span>
<span id="cb38-71">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-72">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(</span>
<span id="cb38-73">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> LIMITS,</span>
<span id="cb38-74">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> LIMITS</span>
<span id="cb38-75">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-76">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb38-77">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb38-78">  )</span>
<span id="cb38-79">(pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pb)</span>
<span id="cb38-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cor.test(</span></span>
<span id="cb38-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   coef_evsdt_both_wide$`Random intercept`,</span></span>
<span id="cb38-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   coef_evsdt_both_wide$`Fixed thresholds`</span></span>
<span id="cb38-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-glmm-thresholds2" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-glmm-thresholds2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-glmm-thresholds2-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-glmm-thresholds2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;8: Comparison of d’ parameters from multilevel rating model with random subject-specific intercepts (blue) and fixed subject-specific thresholds (red). <strong>Left.</strong> Posterior means and 95%CIs of d’ from both models; estimates are comparable and rank orders are reasonably similar. <strong>Right.</strong> Scatterplot of subject-specific d’ from the two models shows they are strongly correlated (r = [.80, .93]). Filled point and intervals indicate the population-level d’ and its 95%CI.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Finally, to conclude this diversion to the two different ways in which the SDT models for rating data can be estimated with regression for multiple subjects, Figure&nbsp;9 shows the predicted proportions in each response category for three subjects, along with the values calculated from data. As shown, the model predictions are notably different for participant 19, who had no responses in the lowest category. The fixed thresholds model predicts this (lack of) data perfectly, whereas the random intercepts model overestimates the proportions. For participants with more well-behaved responses, the predictions are very similar.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">tmp1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(pid, stimulus) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_epred_draws</span>(fit_evsdt) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>()</span>
<span id="cb39-6"></span>
<span id="cb39-7">tmp1.pop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(stimulus) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_epred_draws</span>(fit_evsdt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>)</span>
<span id="cb39-12"></span>
<span id="cb39-13">tmp1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(tmp1, tmp1.pop)</span>
<span id="cb39-14"></span>
<span id="cb39-15">tmp2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(pid, stimulus) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_epred_draws</span>(fit_evsdt_thresholds) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>()</span>
<span id="cb39-20"></span>
<span id="cb39-21">tmp3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb39-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nn =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n),</span>
<span id="cb39-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pid, stimulus, response)</span>
<span id="cb39-26">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> nn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(nn), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pid, stimulus)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.category =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(response), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.epred =</span> p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unused"</span>)</span>
<span id="cb39-29"></span>
<span id="cb39-30">tmp3.pop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb39-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nn =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n),</span>
<span id="cb39-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(stimulus, response)</span>
<span id="cb39-34">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> nn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(nn), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(stimulus)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb39-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.category =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(response),</span>
<span id="cb39-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.epred =</span> p,</span>
<span id="cb39-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>,</span>
<span id="cb39-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unused"</span></span>
<span id="cb39-41">  )</span>
<span id="cb39-42"></span>
<span id="cb39-43">tmp3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(tmp3, tmp3.pop)</span>
<span id="cb39-44"></span>
<span id="cb39-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb39-46">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Random intercept"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> tmp1,</span>
<span id="cb39-47">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fixed thresholds"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> tmp2,</span>
<span id="cb39-48">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model"</span></span>
<span id="cb39-49">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb39-50">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(.category, .epred)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb39-52">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Proportion"</span>,</span>
<span id="cb39-53">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>))</span>
<span id="cb39-54">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Response category"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(</span>
<span id="cb39-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set1"</span></span>
<span id="cb39-58">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> tmp3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey70"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>(</span>
<span id="cb39-61">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> .lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> .upper, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> Model),</span>
<span id="cb39-62">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span>,</span>
<span id="cb39-63">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fatten =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb39-64">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_dodge</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.50</span>)</span>
<span id="cb39-65">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-66">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb39-68">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb39-69">  )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-evsdt-epred" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-evsdt-epred-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-evsdt-epred-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="556">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-evsdt-epred-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;9: Model-predicted response proportions from multilevel rating model with random subject-specific intercepts (blue) and fixed subject-specific thresholds (red), along with data (gray bars).
</figcaption>
</figure>
</div>
</div>
</div>
<p>Moreover, Figure&nbsp;9 reveals a critical difference between the models. The random-intercepts model is able to make predictions at the population level (which fit reasonably well), while the fixed thresholds does not. This is because the latter model does not estimate population-level thresholds, but instead its estimates are limited to the subjects in the current sample.</p>
<p>We now conclude the tutorial section on estimating basic signal detection theoretic models data using (multilevel) bayesian regression models, and turn toward more advanced SDT models.</p>
</section>
</section>
</section>
<section id="advanced-sdt-models" class="level2">
<h2 class="anchored" data-anchor-id="advanced-sdt-models">Advanced SDT models</h2>
<p>In this section, we cover the estimation of two generalizations of the SDT model, the unequal variances and finite mixtures models (for both single subjects and multiple individuals using multilevel regression). As above, our focus is on practical application; readers requiring a more theoretical treatment can refer to standard texts <span class="citation" data-cites="greenSignalDetectionTheory1966 macmillan_detection_2005 wickensElementarySignalDetection2001">(Green and Swets 1966; Macmillan and Creelman 2005; Wickens 2001)</span>; a more complete mathematical treatment is <span class="citation" data-cites="decarlo_statistical_2010">DeCarlo (2010)</span>.</p>
<section id="unequal-variances" class="level3">
<h3 class="anchored" data-anchor-id="unequal-variances">Unequal variances</h3>
<p>The models discussed above have all assumed that the latent evidence distributions associated with signal and noise trials have the same variability. Accordingly, in more general treatments, the model above is known as the equal variance SDT (EVSDT) model. However, when tested, this assumption is consistently found inadequate: Experiments have repeatedly shown that the signal distribution has greater variance than the noise distribution in a wide variety of subject domains. For example, <span class="citation" data-cites="koen_examining_2013">Koen et al. (2013)</span> reported increased signal distribution variability across four memory experiments.</p>
<p>A generalization of the EVSDT model, the unequal variance (UVSDT) model adds one parameter to estimate the signal distribution’s variance. Recall that it is always assumed that the noise distribution has a standard deviation of 1. Importantly, we cannot estimate this additional parameter for binary outcomes (Yes/No task), and so below focus on the rating data.</p>
<p>The UVSDT model, for one participant’s data, is a generalization of Equation&nbsp;5</p>
<p><span id="eq-uvsdt1-original"><img src="https://latex.codecogs.com/png.latex?%0APr(r_i%20=%20k)%20=%0A%20%20%5CPhi(%5Cfrac%7Bc_k%20-%20%5Ceta_i%7D%7B%5Csigma_i%7D)%20-%0A%20%20%5CPhi(%5Cfrac%7Bc_%7Bk-1%7D%20-%20%5Ceta_i%7D%7B%5Csigma_i%7D)%0A%5Ctag%7B8%7D"></span></p>
<p>This model—also knows as a probit model with heteroscedastic error (e.g. <span class="citation" data-cites="decarlo_statistical_2010">DeCarlo (2010)</span>)—can be readily estimated with the brms R package <span class="citation" data-cites="burkner_brms:_2017 burknerOrdinalRegressionModels2019">(Bürkner 2017; Bürkner and Vuorre 2019)</span>. Before we do so, we note that brms parameterizes this model with an equivalent formulation using different terminology, in line with conventions in item response theory <span class="citation" data-cites="burknerBayesianItemResponse2021">(Bürkner 2021)</span>:</p>
<p><span id="eq-uvsdt1"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0APr(r_i%20=%20k)%20=%5C%0A%20%20&amp;%5CPhi(%5Ctext%7Bdisc%7D_i%20%5Ctimes%20(c_k%20-%20%5Ceta_i))%20-%20%5CPhi(%5Ctext%7Bdisc%7D_i%20%5Ctimes%20(c_%7Bk-1%7D%20-%20%5Ceta_i))%20%5C%5C%0A%5Ceta_i%20=%5C%20&amp;%5Cbeta_1s_i%20%5C%5C%0A%5Ctext%7Blog%7D(%5Ctext%7Bdisc%7D_i)%20=%5C%20&amp;%5Cbeta_2s_i%0A%5Cend%7Baligned%7D%0A%5Ctag%7B9%7D"></span></p>
<p>In this parameterization, <img src="https://latex.codecogs.com/png.latex?%5Csigma%20=%201/%5Ctext%7Bdisc%7D">. We highlight this conversion below, when post-processing the model’s estimates. The brms syntax to estimate this model is similar to that of Listing&nbsp;8, but we include an additional regression formula to predict <code>disc</code>. To do so, we wrap the main regression formula in <code>bf()</code> (used to predict the response distribution’s location parameter), and add a regression formula for <code>disc</code> using <code>lf()</code>:</p>
<div class="cell" data-layout-align="center">
<div id="lst-uvsdt1" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-uvsdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;11: Estimating multiple participants’ rating data with an unequal variances cumulative model.
</figcaption>
<div aria-describedby="lst-uvsdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1">fit_uvsdt1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb40-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weights</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb40-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lf</span>(disc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stimulus, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cmc =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span>
<span id="cb40-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumulative</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>),</span>
<span id="cb40-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(dat2, pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb40-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>),</span>
<span id="cb40-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-glm-uvsdt"</span></span>
<span id="cb40-8">)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>We print the model’s summary below. Before inspecting it in detail, refer to the model summary of the EVSDT model fitted to one subject’s rating data above. Notice that it reports an estimate of <code>disc</code>, which is fixed to one if no regression model for it is specified. Below, we obtain <code>disc_stimulusOld</code>, which is the discrimination parameter estimated from data.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.summary</span>(fit_uvsdt1)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: cumulative 
  Links: mu = probit; disc = log 
Formula: response | weights(n) ~ stimulus 
         disc ~ 0 + stimulus
   Data: filter(dat2, pid == 1) (Number of observations: 12) 

Regression Coefficients:
                 Estimate Est.Error l-95% CI u-95% CI
Intercept[1]        -0.03      0.10    -0.23     0.17
Intercept[2]         0.39      0.10     0.19     0.58
Intercept[3]         0.62      0.10     0.43     0.82
Intercept[4]         0.96      0.11     0.74     1.18
Intercept[5]         1.35      0.14     1.09     1.63
stimulusOld          1.53      0.21     1.17     1.98
disc_stimulusOld    -0.20      0.16    -0.53     0.11</code></pre>
</div>
</div>
<p>For a standard SDT interpretation, it is then useful to post-process the model parameters to obtain an estimate of the signal distribution’s standard deviation (Listing&nbsp;12).</p>
<div class="cell" data-layout-align="center">
<div id="lst-uvsdt-convert" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-uvsdt-convert-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;12: Converting the log-discriminability parameter to a standard deviation.
</figcaption>
<div aria-describedby="lst-uvsdt-convert-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_draws_df</span>(fit_uvsdt1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">regex =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb43-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_old =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b_disc_stimulusOld)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb43-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_draws</span>(</span>
<span id="cb43-4">    mean,</span>
<span id="cb43-5">    sd,</span>
<span id="cb43-6">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile2</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">025</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">975</span>))</span>
<span id="cb43-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb43-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tt</span>()</span></code></pre></div>
</details>
</div>
</figure>
</div>
<div class="cell-output-display">
<!-- preamble start -->

    <script>

      function styleCell_ezcdiw3ndu9ccqezqddh(i, j, css_id) {
          var table = document.getElementById("tinytable_ezcdiw3ndu9ccqezqddh");
          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors
          if (cell) {
              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);
              cell.classList.add(css_id);
          } else {
              console.warn(`Cell at (${i}, ${j}) not found.`);
          }
      }
      function insertSpanRow(i, colspan, content) {
        var table = document.getElementById('tinytable_ezcdiw3ndu9ccqezqddh');
        var newRow = table.insertRow(i);
        var newCell = newRow.insertCell(0);
        newCell.setAttribute("colspan", colspan);
        // newCell.innerText = content;
        // this may be unsafe, but innerText does not interpret <br>
        newCell.innerHTML = content;
      }
      function spanCell_ezcdiw3ndu9ccqezqddh(i, j, rowspan, colspan) {
        var table = document.getElementById("tinytable_ezcdiw3ndu9ccqezqddh");
        const targetRow = table.rows[i];
        const targetCell = targetRow.cells[j];
        for (let r = 0; r < rowspan; r++) {
          // Only start deleting cells to the right for the first row (r == 0)
          if (r === 0) {
            // Delete cells to the right of the target cell in the first row
            for (let c = colspan - 1; c > 0; c--) {
              if (table.rows[i + r].cells[j + c]) {
                table.rows[i + r].deleteCell(j + c);
              }
            }
          }
          // For rows below the first, delete starting from the target column
          if (r > 0) {
            for (let c = colspan - 1; c >= 0; c--) {
              if (table.rows[i + r] && table.rows[i + r].cells[j]) {
                table.rows[i + r].deleteCell(j);
              }
            }
          }
        }
        // Set rowspan and colspan of the target cell
        targetCell.rowSpan = rowspan;
        targetCell.colSpan = colspan;
      }
      // tinytable span after
      window.addEventListener('load', function () {
          var cellsToStyle = [
            // tinytable style arrays after
          { positions: [ { i: 8, j: 0 }, { i: 8, j: 1 }, { i: 8, j: 2 }, { i: 8, j: 3 }, { i: 8, j: 4 },  ], css_id: 'tinytable_css_mqtb2uyj3cfuakzesth6',}, 
          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 }, { i: 0, j: 4 },  ], css_id: 'tinytable_css_lcjua2u9hp23ukxerint',}, 
          ];

          // Loop over the arrays to style the cells
          cellsToStyle.forEach(function (group) {
              group.positions.forEach(function (cell) {
                  styleCell_ezcdiw3ndu9ccqezqddh(cell.i, cell.j, group.css_id);
              });
          });
      });
    </script>

    <style>
      /* tinytable css entries after */
      .table td.tinytable_css_mqtb2uyj3cfuakzesth6, .table th.tinytable_css_mqtb2uyj3cfuakzesth6 { border-bottom: solid #d3d8dc 0.1em; }
      .table td.tinytable_css_lcjua2u9hp23ukxerint, .table th.tinytable_css_lcjua2u9hp23ukxerint { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }
    </style>
    <div class="container">
      <table class="table table-borderless" id="tinytable_ezcdiw3ndu9ccqezqddh" style="width: auto; margin-left: auto; margin-right: auto;" data-quarto-disable-processing="true">
        <thead>
        
              <tr>
                <th scope="col">variable</th>
                <th scope="col">mean</th>
                <th scope="col">sd</th>
                <th scope="col">q2.5</th>
                <th scope="col">q97.5</th>
              </tr>
        </thead>
        
        <tbody>
                <tr>
                  <td>b_Intercept[1]</td>
                  <td>-0.03</td>
                  <td>0.10</td>
                  <td>-0.23</td>
                  <td>0.17</td>
                </tr>
                <tr>
                  <td>b_Intercept[2]</td>
                  <td>0.39</td>
                  <td>0.10</td>
                  <td>0.19</td>
                  <td>0.58</td>
                </tr>
                <tr>
                  <td>b_Intercept[3]</td>
                  <td>0.62</td>
                  <td>0.10</td>
                  <td>0.43</td>
                  <td>0.82</td>
                </tr>
                <tr>
                  <td>b_Intercept[4]</td>
                  <td>0.96</td>
                  <td>0.11</td>
                  <td>0.74</td>
                  <td>1.18</td>
                </tr>
                <tr>
                  <td>b_Intercept[5]</td>
                  <td>1.35</td>
                  <td>0.14</td>
                  <td>1.09</td>
                  <td>1.63</td>
                </tr>
                <tr>
                  <td>b_stimulusOld</td>
                  <td>1.53</td>
                  <td>0.21</td>
                  <td>1.17</td>
                  <td>1.98</td>
                </tr>
                <tr>
                  <td>b_disc_stimulusOld</td>
                  <td>-0.20</td>
                  <td>0.16</td>
                  <td>-0.53</td>
                  <td>0.11</td>
                </tr>
                <tr>
                  <td>sd_old</td>
                  <td>1.24</td>
                  <td>0.20</td>
                  <td>0.89</td>
                  <td>1.69</td>
                </tr>
        </tbody>
      </table>
    </div>
<!-- hack to avoid NA insertion in last line -->
</div>
</div>
<p>From above, we find an estimated signal distribution standard deviation of approximately 1.24 (posterior mean). Plotting the model’s implied distributions illustrates this graphically (Figure&nbsp;10).</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb44-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>,</span>
<span id="cb44-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>))</span>
<span id="cb44-5">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb44-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evidence"</span></span>
<span id="cb44-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(</span>
<span id="cb44-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>),</span>
<span id="cb44-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb44-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb44-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb44-15">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> s),</span>
<span id="cb44-16">    ),</span>
<span id="cb44-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb44-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb44-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,</span>
<span id="cb44-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,</span>
<span id="cb44-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb44-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normalize =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb44-23">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb44-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixef</span>(fit_uvsdt1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb44-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb44-27">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(</span>
<span id="cb44-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb44-30">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_normal</span>(</span>
<span id="cb44-31">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixef</span>(fit_uvsdt1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb44-32">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixef</span>(fit_uvsdt1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb44-33">      )</span>
<span id="cb44-34">    ),</span>
<span id="cb44-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0001</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>),</span>
<span id="cb44-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb44-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,</span>
<span id="cb44-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb44-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normalize =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb44-40">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evidence"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb44-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb44-44">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb44-45">  )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-uvsdt1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-uvsdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-uvsdt1-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="288">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-uvsdt1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;10: The unequal variance Gaussian signal detection model, visualized from the parameters’ posterior means. The two distributions are the noise distribution (dashed) and the signal distribution (solid). Vertical lines are the thresholds, and d’ is indicated by the scaled distance between the peaks of the two distributions.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="uvsdt-for-multiple-participants" class="level3">
<h3 class="anchored" data-anchor-id="uvsdt-for-multiple-participants">UVSDT for multiple participants</h3>
<p>Above, we fit the UVSDT model for a single subject. However, we typically want to discuss inferences about the population, not individual subjects. Further, if we wish to discuss individual subjects, we should place them in the context of other subjects. A multilevel model accomplishes these goals by including both population- and subject-level parameters. We extend the code from Listing&nbsp;11 to a hierarchical model by specifying varying parameters across participants Listing&nbsp;13.</p>
<p>Recall from above that using <code>|p|</code> leads to estimating correlations among the varying effects. There will only be one standard deviation associated with the thresholds; that is, the model assumes that subjects vary around the mean threshold similarly for all thresholds. We can then estimate the model as before.</p>
<div class="cell" data-layout-align="center">
<div id="lst-uvsdt" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-uvsdt-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;13: Estimating multiple participants’ rating data with an unequal variances cumulative model.
</figcaption>
<div aria-describedby="lst-uvsdt-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1">fit_uvsdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb45-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weights</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb45-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lf</span>(disc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cmc =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span>
<span id="cb45-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumulative</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>),</span>
<span id="cb45-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat2,</span>
<span id="cb45-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>),</span>
<span id="cb45-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">init =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb45-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/brm-glmm-uvsdt"</span></span>
<span id="cb45-9">)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>We then display numerical summaries of the model’s parameters below.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.summary</span>(fit_uvsdt)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: cumulative 
  Links: mu = probit; disc = log 
Formula: response | weights(n) ~ stimulus + (stimulus | p | pid) 
         disc ~ 0 + stimulus + (0 + stimulus | p | pid)
   Data: dat2 (Number of observations: 576) 

Multilevel Hyperparameters:
~pid (Number of levels: 48) 
                                  Estimate Est.Error l-95% CI u-95% CI
sd(Intercept)                         0.32      0.04     0.25     0.41
sd(stimulusOld)                       1.00      0.13     0.78     1.28
sd(disc_stimulusOld)                  0.56      0.06     0.45     0.69
cor(Intercept,stimulusOld)            0.02      0.16    -0.28     0.34
cor(Intercept,disc_stimulusOld)      -0.08      0.15    -0.37     0.22
cor(stimulusOld,disc_stimulusOld)    -0.85      0.05    -0.93    -0.75

Regression Coefficients:
                 Estimate Est.Error l-95% CI u-95% CI
Intercept[1]        -0.88      0.05    -0.98    -0.78
Intercept[2]        -0.16      0.05    -0.26    -0.07
Intercept[3]         0.34      0.05     0.24     0.43
Intercept[4]         0.62      0.05     0.52     0.71
Intercept[5]         0.96      0.05     0.86     1.06
stimulusOld          1.63      0.16     1.33     1.94
disc_stimulusOld    -0.28      0.09    -0.45    -0.10</code></pre>
</div>
</div>
<p>Let’s first focus on the Regression Coefficients: The effects for the “average person”. Intercepts, again, indicate the thresholds used to partition the latent evidence distribution into response categories. <code>stimulusOld</code> is <em>d’</em>, <code>disc_stimulusOld</code> is <img src="https://latex.codecogs.com/png.latex?-%5Ctext%7Blog%7D(%5Csigma_%7Bsignal%7D)">. It is typically useful to transform the latter to a standard deviation, as is shown in Listing&nbsp;12.</p>
</section>
<section id="mixture-sdt-model" class="level3">
<h3 class="anchored" data-anchor-id="mixture-sdt-model">Mixture SDT model</h3>
<p>While the unequal variances SDT model fits observer data better than does the equal variances model, it provides no explanation to why the latent variances might differ. One explanation for this difference is that observers might, on a subset of trials, be inattentive to the task:</p>
<blockquote class="blockquote">
<p>An inattentive observer dozes off, or at least drifts into reverie, on some proportion of trials; because failing to respond is usually discouraged,this leads to an unknown numberof d′=0 trials,ones on which the observer responds despite not having paid attention, mixed in with the others <span class="citation" data-cites="macmillan_detection_2005">(Macmillan and Creelman 2005, 46)</span></p>
</blockquote>
<p>In this section, I briefly outline how the mixture SDT model discussed in <span class="citation" data-cites="decarlo_statistical_2010">DeCarlo (2010)</span> can be fit with brms. Substituting <img src="https://latex.codecogs.com/png.latex?%5Clambda"> in <span class="citation" data-cites="decarlo_statistical_2010">DeCarlo (2010)</span> (eqn. 19, p.&nbsp;309) with <img src="https://latex.codecogs.com/png.latex?%5Ctheta">, in line with how brms labels it, we can write the model as a mixture of two cumulative models (Equation&nbsp;10).</p>
<p><span id="eq-mix"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0APr(r_i%20=%20k)%20=%5C%0A%20%20&amp;%5Ctheta(%5CPhi(c_k%20-%20%5Ceta_i)%20-%20%5CPhi(c_%7Bk-1%7D%20-%20%5Ceta_i))%20+%20%5C%5C%0A%20%20&amp;1%20-%20%5Ctheta(%5CPhi(c_k)%20-%20%5CPhi(c_%7Bk-1%7D))%0A%5Cend%7Balign%7D%0A%5Ctag%7B10%7D"></span></p>
<p>The above equation is a mixture of two processes. The main process includes a predictor (<img src="https://latex.codecogs.com/png.latex?%5Ceta">) and thus allows for an effect of stimulus, and the second process omits the predictor: On inattention trials there can be no effect of the stimulus as it was not attended to. We translate this model to brms’ syntax in Listing&nbsp;14. The key addition here is the inclusion of two response distributions (<code>family = mixture(), nmix = 2</code>), and the inclusion of <code>stimulus</code> predictor in modeling only the first of these.</p>
<div class="cell" data-layout-align="center">
<div id="lst-mix1" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-mix1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;14: Estimating a mixture SDT model for one participant.
</figcaption>
<div aria-describedby="lst-mix1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1">fit_mix1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb48-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(</span>
<span id="cb48-3">    response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weights</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb48-4">    mu1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stimulus,</span>
<span id="cb48-5">    mu2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb48-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mixture</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumulative</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nmix =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mu"</span>)</span>
<span id="cb48-7">  ),</span>
<span id="cb48-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(dat2, pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb48-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>),</span>
<span id="cb48-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/fit-mix1"</span></span>
<span id="cb48-11">)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>I show results of this model below. First, although the summary reports two vectors of thresholds, one for each response distribution in the mixture, they are automatically constrained to equality (<code>mu1_Intercept[1]</code> = <code>mu2_Intercept[1]</code>; see <code>?mixture</code>), as we wanted for this model. Second, <code>mu1_stimulusOld</code> is <em>d’</em>; the effect of <code>stimulus</code> for the first response distribution <code>mu1</code>—notice that there is no effect for the second distribution (<code>mu2</code>).</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.summary</span>(fit_mix1)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: mixture(cumulative, cumulative) 
  Links: mu1 = probit; disc1 = identity; mu2 = probit; disc2 = identity; theta1 = identity; theta2 = identity 
Formula: response | weights(n) ~ 1 
         mu1 ~ 1 + stimulus
         mu2 ~ 1
   Data: filter(dat2, pid == 1) (Number of observations: 12) 

Regression Coefficients:
                 Estimate Est.Error l-95% CI u-95% CI
mu1_Intercept[1]    -0.05      0.10    -0.25     0.14
mu1_Intercept[2]     0.37      0.10     0.17     0.57
mu1_Intercept[3]     0.61      0.11     0.41     0.82
mu1_Intercept[4]     0.95      0.11     0.74     1.18
mu1_Intercept[5]     1.33      0.13     1.08     1.59
mu2_Intercept[1]    -0.05      0.10    -0.25     0.14
mu2_Intercept[2]     0.37      0.10     0.17     0.57
mu2_Intercept[3]     0.61      0.11     0.41     0.82
mu2_Intercept[4]     0.95      0.11     0.74     1.18
mu2_Intercept[5]     1.33      0.13     1.08     1.59
mu1_stimulusOld      1.68      0.24     1.25     2.15

Further Distributional Parameters:
       Estimate Est.Error l-95% CI u-95% CI
disc1      1.00      0.00     1.00     1.00
disc2      1.00      0.00     1.00     1.00
theta1     0.86      0.08     0.70     0.99
theta2     0.14      0.08     0.01     0.30</code></pre>
</div>
</div>
<p>By default, this model has fixed the latent variances at 1 (<code>disc1</code> = <code>disc2</code> = 1). But now we have two additional parameters <code>theta1</code> that index the mixture proportions. We see that participant 1’s responses are a mixture of ~86% attended trials, and ~14% non-attended trials (posterior means). For more details on interpreting this model, see <span class="citation" data-cites="decarlo_statistical_2010">DeCarlo (2010)</span>.</p>
</section>
<section id="multilevel-mixture-sdt-model" class="level3">
<h3 class="anchored" data-anchor-id="multilevel-mixture-sdt-model">Multilevel mixture SDT model</h3>
<p>After estimating the mixture model for one participant, we now turn to estimating it for a sample of individuals using a multilevel model. The syntax (Listing&nbsp;15) is identical to that in Listing&nbsp;14, but we now include by-person random effects on the parameters.</p>
<div class="cell" data-layout-align="center">
<div id="lst-mix" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-mix-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;15: Estimating a mixture SDT model for multiple participants with a multilevel model.
</figcaption>
<div aria-describedby="lst-mix-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1">fit_mix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb51-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(</span>
<span id="cb51-3">    response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weights</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb51-4">    mu1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid),</span>
<span id="cb51-5">    mu2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb51-6">    theta2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid),</span>
<span id="cb51-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mixture</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumulative</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probit"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nmix =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mu"</span>)</span>
<span id="cb51-8">  ),</span>
<span id="cb51-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat2,</span>
<span id="cb51-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>),</span>
<span id="cb51-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache/fit-mix"</span></span>
<span id="cb51-12">)</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>I print the summary of this model’s results below. In addition to Multilevel Hyperparameters (the parameters’ heterogeneities in the population), we now have an estimate of the average mixing proportion of the second component <code>theta2_Intercept</code>, but this is reported on scale of the link function (logits).</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.summary</span>(fit_mix)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Family: mixture(cumulative, cumulative) 
  Links: mu1 = probit; disc1 = identity; mu2 = probit; disc2 = identity; theta1 = identity; theta2 = identity 
Formula: response | weights(n) ~ 1 
         mu1 ~ 1 + stimulus + (1 + stimulus | p | pid)
         mu2 ~ 1
         theta2 ~ 1 + (1 | p | pid)
   Data: dat2 (Number of observations: 576) 

Multilevel Hyperparameters:
~pid (Number of levels: 48) 
                                      Estimate Est.Error l-95% CI u-95% CI
sd(mu1_Intercept)                         1.82      0.19     1.49     2.21
sd(mu1_stimulusOld)                       0.86      0.15     0.64     1.20
sd(theta2_Intercept)                      1.98      0.34     1.43     2.74
cor(mu1_Intercept,mu1_stimulusOld)       -0.43      0.25    -0.79     0.15
cor(mu1_Intercept,theta2_Intercept)       0.64      0.14     0.30     0.85
cor(mu1_stimulusOld,theta2_Intercept)     0.05      0.22    -0.36     0.49

Regression Coefficients:
                 Estimate Est.Error l-95% CI u-95% CI
mu1_Intercept[1]    -0.05      0.04    -0.13     0.03
mu1_Intercept[2]     0.84      0.05     0.74     0.94
mu1_Intercept[3]     1.50      0.05     1.39     1.61
mu1_Intercept[4]     1.87      0.06     1.76     1.98
mu1_Intercept[5]     2.32      0.06     2.21     2.43
mu2_Intercept[1]    -0.05      0.04    -0.13     0.03
mu2_Intercept[2]     0.84      0.05     0.74     0.94
mu2_Intercept[3]     1.50      0.05     1.39     1.61
mu2_Intercept[4]     1.87      0.06     1.76     1.98
mu2_Intercept[5]     2.32      0.06     2.21     2.43
theta2_Intercept    -3.44      0.46    -4.36    -2.62
mu1_stimulusOld      1.87      0.23     1.42     2.33

Further Distributional Parameters:
      Estimate Est.Error l-95% CI u-95% CI
disc1     1.00      0.00     1.00     1.00
disc2     1.00      0.00     1.00     1.00</code></pre>
</div>
</div>
<p>Therefore, we transform the population-level and individual-specific mixture proportions from the logit space to proportions, and then display the estimates in Figure&nbsp;11.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1">tmp1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(fit_mix, b_theta2_Intercept) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb54-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb54-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theta2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(b_theta2_Intercept)</span>
<span id="cb54-4">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb54-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(theta2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb54-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>)</span>
<span id="cb54-7"></span>
<span id="cb54-8">tmp2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(</span>
<span id="cb54-9">  fit_mix,</span>
<span id="cb54-10">  b_theta2_Intercept,</span>
<span id="cb54-11">  r_pid__theta2[pid, variable]</span>
<span id="cb54-12">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb54-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb54-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theta2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(b_theta2_Intercept <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> r_pid__theta2)</span>
<span id="cb54-15">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb54-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(theta2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb54-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(pid))</span>
<span id="cb54-18"></span>
<span id="cb54-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(tmp1, tmp2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb54-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(pid, theta2)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb54-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(theta2, pid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb54-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_discrete</span>(</span>
<span id="cb54-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Participant"</span>,</span>
<span id="cb54-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(.x, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[0-9]+"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb54-25">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb54-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb54-27">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"theta2"</span>,</span>
<span id="cb54-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sec.axis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sec_axis</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ., <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"theta1"</span>)</span>
<span id="cb54-29">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb54-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb54-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>(</span>
<span id="cb54-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> .lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> .upper, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>),</span>
<span id="cb54-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>,</span>
<span id="cb54-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fatten =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb54-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb54-36">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb54-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-mix-thetas" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-mix-thetas-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-mix-thetas-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-mix-thetas-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;11: Mixing proportions for each participant (empty) and the population (filled).
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Signal Detection Theory is “one of the greatest successes of mathematical psychology” <span class="citation" data-cites="wickensElementarySignalDetection2001">(Wickens 2001)</span>. It is used to guide theorizing and data analyses in a wide variety of research areas in psychology where the experimental tasks involve detecting, or indicating one’s confidence in, the presence of a signal. Those “signals” can be previously seen images or words, perceptual stimuli corrupted by noise, marks of illness, and more. The theory itself is established and further made accessible in widely read texts <span class="citation" data-cites="greenSignalDetectionTheory1966 macmillan_detection_2005">(Green and Swets 1966; Macmillan and Creelman 2005)</span>.</p>
<p>While many SDT models are accessible to researchers via well-known computational formulas <span class="citation" data-cites="stanislaw_calculation_1999">(Stanislaw and Todorov 1999)</span>, those don’t always easily generalize to more complex research designs, and can ignore important sources of variability <span class="citation" data-cites="rouder_introduction_2005 rouder_signal_2007">(e.g.&nbsp;due to item heterogeneity Rouder and Lu 2005; see also Rouder et al. 2007)</span>. Moreover, these calculations introduce added complexity to researchers, who do not always recognize that the models can be estimated with standard tools, such as Generalized Linear (Mixed) Models [GLMM; <span class="citation" data-cites="decarlo_signal_1998">DeCarlo (1998)</span>; <span class="citation" data-cites="decarlo_using_2003">Decarlo (2003)</span>] that are straightforward to generalize to more complex research designs.</p>
<p>My aim with this tutorial was to provide an introduction to how the GLMM can be used to estimate a variety of SDT models, ranging from single-subject analyses to multilevel mixture models that account for attention lapses, using bayesian regression methods implemented in the brms R package <span class="citation" data-cites="rcoreteamLanguageEnvironmentStatistical2025 burkner_brms:_2017">(R Core Team 2025; Bürkner 2017)</span>.</p>
</section>


<div id="quarto-appendix" class="default"><section id="appendices" class="level2 appendix"><h2 class="anchored quarto-appendix-heading">Appendices</h2><div class="quarto-appendix-contents">





</div></section><section id="additional-sdt-metrics" class="level3 appendix"><h2 class="anchored quarto-appendix-heading">Additional SDT metrics</h2><div class="quarto-appendix-contents">

<p>Above, we discussed the common SDT metrics <em>c</em> and <em>d’</em> that index a respondent’s bias and sensitivity, respectively. Here, we discuss some additional metrics that are commonly used in the SDT literature. The hit and false alarm rates, and their corresponding z-scores, are used in the manual calculation of these metrics, but can be useful in their own right. From the modeling perspective, these rates are outcomes, and we can therefore use methods to predict them from the model. In Listing&nbsp;16, we use functions from the tidybayes package <span class="citation" data-cites="tidybayes2024">(Kay 2024)</span>. I show the results of these calculations in Table&nbsp;7.</p>
<div class="cell" data-layout-align="center">
<div id="lst-calc-rates" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-calc-rates-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;16: Calculate predicted rates from a single subject’s model.
</figcaption>
<div aria-describedby="lst-calc-rates-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb55-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict outcomes for these predictors</span></span>
<span id="cb55-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stimulus =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old"</span>))</span>
<span id="cb55-3"></span>
<span id="cb55-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predicted rates</span></span>
<span id="cb55-5">rates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">epred_draws</span>(fit_glm, x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rate"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb55-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>()</span>
<span id="cb55-7"></span>
<span id="cb55-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predicted z-scored rates</span></span>
<span id="cb55-9">z_rates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">linpred_draws</span>(fit_glm, x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rate"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb55-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>()</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb56-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rates"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rates,</span>
<span id="cb56-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zRates"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> z_rates,</span>
<span id="cb56-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Type"</span></span>
<span id="cb56-5">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb56-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Type, stimulus, rate, .lower, .upper) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb56-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tt</span>()</span></code></pre></div>
</details>
<div id="tbl-predicted-rates" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-layout-align="center">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-predicted-rates-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;7: Model-predicted hit (stimulus=Old) and false alarm (stimulus=New) rates of responding ‘Old’.
</figcaption>
<div aria-describedby="tbl-predicted-rates-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<!-- preamble start -->

    <script>

      function styleCell_javdlqv6d66c60tyeirw(i, j, css_id) {
          var table = document.getElementById("tinytable_javdlqv6d66c60tyeirw");
          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors
          if (cell) {
              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);
              cell.classList.add(css_id);
          } else {
              console.warn(`Cell at (${i}, ${j}) not found.`);
          }
      }
      function insertSpanRow(i, colspan, content) {
        var table = document.getElementById('tinytable_javdlqv6d66c60tyeirw');
        var newRow = table.insertRow(i);
        var newCell = newRow.insertCell(0);
        newCell.setAttribute("colspan", colspan);
        // newCell.innerText = content;
        // this may be unsafe, but innerText does not interpret <br>
        newCell.innerHTML = content;
      }
      function spanCell_javdlqv6d66c60tyeirw(i, j, rowspan, colspan) {
        var table = document.getElementById("tinytable_javdlqv6d66c60tyeirw");
        const targetRow = table.rows[i];
        const targetCell = targetRow.cells[j];
        for (let r = 0; r < rowspan; r++) {
          // Only start deleting cells to the right for the first row (r == 0)
          if (r === 0) {
            // Delete cells to the right of the target cell in the first row
            for (let c = colspan - 1; c > 0; c--) {
              if (table.rows[i + r].cells[j + c]) {
                table.rows[i + r].deleteCell(j + c);
              }
            }
          }
          // For rows below the first, delete starting from the target column
          if (r > 0) {
            for (let c = colspan - 1; c >= 0; c--) {
              if (table.rows[i + r] && table.rows[i + r].cells[j]) {
                table.rows[i + r].deleteCell(j);
              }
            }
          }
        }
        // Set rowspan and colspan of the target cell
        targetCell.rowSpan = rowspan;
        targetCell.colSpan = colspan;
      }
      // tinytable span after
      window.addEventListener('load', function () {
          var cellsToStyle = [
            // tinytable style arrays after
          { positions: [ { i: 4, j: 0 }, { i: 4, j: 1 }, { i: 4, j: 2 }, { i: 4, j: 3 }, { i: 4, j: 4 },  ], css_id: 'tinytable_css_uluw65yy6abb8xsmm3c6',}, 
          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 }, { i: 0, j: 4 },  ], css_id: 'tinytable_css_nepfx0dberxdwq7stvk2',}, 
          ];

          // Loop over the arrays to style the cells
          cellsToStyle.forEach(function (group) {
              group.positions.forEach(function (cell) {
                  styleCell_javdlqv6d66c60tyeirw(cell.i, cell.j, group.css_id);
              });
          });
      });
    </script>

    <style>
      /* tinytable css entries after */
      .table td.tinytable_css_uluw65yy6abb8xsmm3c6, .table th.tinytable_css_uluw65yy6abb8xsmm3c6 { border-bottom: solid #d3d8dc 0.1em; }
      .table td.tinytable_css_nepfx0dberxdwq7stvk2, .table th.tinytable_css_nepfx0dberxdwq7stvk2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }
    </style>
    <div class="container">
      <table class="table table-borderless" id="tinytable_javdlqv6d66c60tyeirw" style="width: auto; margin-left: auto; margin-right: auto;" data-quarto-disable-processing="true">
        <thead>
        
              <tr>
                <th scope="col">Type</th>
                <th scope="col">stimulus</th>
                <th scope="col">rate</th>
                <th scope="col">.lower</th>
                <th scope="col">.upper</th>
              </tr>
        </thead>
        
        <tbody>
                <tr>
                  <td>Rates</td>
                  <td>New</td>
                  <td>0.27</td>
                  <td>0.20</td>
                  <td>0.34</td>
                </tr>
                <tr>
                  <td>Rates</td>
                  <td>Old</td>
                  <td>0.77</td>
                  <td>0.70</td>
                  <td>0.84</td>
                </tr>
                <tr>
                  <td>zRates</td>
                  <td>New</td>
                  <td>-0.62</td>
                  <td>-0.84</td>
                  <td>-0.42</td>
                </tr>
                <tr>
                  <td>zRates</td>
                  <td>Old</td>
                  <td>0.75</td>
                  <td>0.52</td>
                  <td>0.98</td>
                </tr>
        </tbody>
      </table>
    </div>
<!-- hack to avoid NA insertion in last line -->
</div>
</div>
</figure>
</div>
</div>
</div></section><section id="including-predictors" class="level3 appendix"><h2 class="anchored quarto-appendix-heading">Including predictors</h2><div class="quarto-appendix-contents">

<p>Do the EVSDT parameters differ between groups of people? How about between conditions, within people? To answer these questions, we would repeat the manual calculation of parameters as many times as needed, and then draw inference by “submitting” the subject-specific parameters to e.g.&nbsp;an ANOVA model. The GLMM approach affords a more straightforward solution to including predictors: We simply add parameters to the regression model.</p>
<p>For example, if there were two groups of participants, indexed by variable <code>group</code> in data, we could extend the brms GLMM syntax to:</p>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb57-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid), ...)</span></code></pre></div>
<p>This model would have two additional parameters: <code>group</code> would describe the difference in <em>c</em> between groups, and the interaction term <code>stimulus:group</code> would describe the difference in <em>d’</em> between groups. If we were additionally interested in the effects of <code>condition</code>, a within-subject manipulation, we could write:</p>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb58-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> condition <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (stimulus <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> condition <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pid), ...)</span></code></pre></div>
</div></section><section id="receiver-operating-characteristic" class="level3 appendix"><h2 class="anchored quarto-appendix-heading">Receiver operating characteristic</h2><div class="quarto-appendix-contents">

<p>The Receiving Operator Characteristic (ROC) curve displays hits as a function of false alarms, for possibly multiple criteria, and is a useful description of detection data in its own right. As such, it is useful to be able to generate ROC curves implied by the model. Here, we illustrate how to obtain ROC curves from fitted models with uncertainty estimates and overlay them on raw data.</p>
<p>First, I show code for calculating (z-scored) hit and false alarm rates both from data, and as predicted from the multilevel equal variances cumulative model (Listing&nbsp;17).</p>
<div class="cell" data-layout-align="center">
<div id="lst-roc-data" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-roc-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;17: Calculating (z-scored) hit and false alarm rates from data and model predictions, at the population level and that of individual subjects.
</figcaption>
<div aria-describedby="lst-roc-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb59-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Population level rates</span></span>
<span id="cb59-2">roc_dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb59-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># From model (posterior means)</span></span>
<span id="cb59-4">  dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(stimulus) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_epred_draws</span>(fit_evsdt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb59-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">response =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(.category),</span>
<span id="cb59-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span></span>
<span id="cb59-11">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(pid, stimulus, response, .epred),</span>
<span id="cb59-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># From data</span></span>
<span id="cb59-14">  dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb59-16">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>,</span>
<span id="cb59-17">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n),</span>
<span id="cb59-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(stimulus, response)</span>
<span id="cb59-19">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> stimulus),</span>
<span id="cb59-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stimulus"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>)</span>
<span id="cb59-22">)</span>
<span id="cb59-23"></span>
<span id="cb59-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subject-level rates</span></span>
<span id="cb59-25">roc_sub <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb59-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># From model</span></span>
<span id="cb59-27">  dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(pid, stimulus) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_epred_draws</span>(fit_evsdt) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-31">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">response =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(.category)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(pid, stimulus, response, .epred),</span>
<span id="cb59-33">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># From data</span></span>
<span id="cb59-34">  dat2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb59-36">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n),</span>
<span id="cb59-37">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pid, stimulus, response)</span>
<span id="cb59-38">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-39">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pid, stimulus)),</span>
<span id="cb59-40">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stimulus"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>)</span>
<span id="cb59-41">)</span>
<span id="cb59-42"></span>
<span id="cb59-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine population- and subject level data, and calculate cumulative rates</span></span>
<span id="cb59-44">roc_dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb59-45">  roc_dat,</span>
<span id="cb59-46">  roc_sub</span>
<span id="cb59-47">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.epred, p)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-50">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> stimulus, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-51">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cumulate proportions from high to low response category</span></span>
<span id="cb59-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(pid, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(response)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb59-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb59-54">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(Old),</span>
<span id="cb59-55">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(New),</span>
<span id="cb59-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zhr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(hr),</span>
<span id="cb59-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zfr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(fr),</span>
<span id="cb59-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pid, name)</span>
<span id="cb59-59">  )</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<p>Having calculated the hit and false alarm rates in both their natural and probit scales, all that is left to do is to plot them. In Figure&nbsp;12, we show these rates for a sample of participants, and the population. While interpreting these figures, it is important to keep in mind that the data-based coordinates have error in both the x- and y-axes.</p>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb60-2">pids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(roc_dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pid), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>)</span>
<span id="cb60-3">pa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> roc_dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb60-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb60-5">    name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span>,</span>
<span id="cb60-6">    response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb60-7">    pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids</span>
<span id="cb60-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb60-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(fr, hr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> pid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb60-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb60-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span></span>
<span id="cb60-15">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(</span>
<span id="cb60-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> response),</span>
<span id="cb60-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb60-19">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(</span>
<span id="cb60-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> roc_dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb60-22">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb60-23">        name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".epred"</span>,</span>
<span id="cb60-24">        response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb60-25">        pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids</span>
<span id="cb60-26">      ),</span>
<span id="cb60-27">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> response),</span>
<span id="cb60-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb60-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span></span>
<span id="cb60-30">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb60-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb60-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb60-35">  )</span>
<span id="cb60-36">pb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(zfr, zhr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zFR"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zHR"</span>)</span>
<span id="cb60-40">pa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb60-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb60-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)</span>
<span id="cb60-44">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb60-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb60-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)</span>
<span id="cb60-48">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb60-50">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"False alarm rate"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hit rate"</span>)</span>
<span id="cb60-51">(pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> pb)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-roc-data" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-roc-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-roc-data-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-roc-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;12: Receiver operating characteristic plots in the proportion (left) and z-score scales (right) for three participants and the population. Black symbols and lines are coordinates calculated from data, red symbols are model-predicted rates.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Next, we draw a more complete picture by using the model to predict (z-scored) hit rates for the entire range of hypothetical false alarm rates. We obtain the predicted ROC curves from the multilevel EVSDT, UVSDT, and mixture models at both the population- and participant-specific levels.</p>
<div class="cell" data-layout-align="center">
<div id="lst-roc-model" class="r cell-code listing quarto-float quarto-figure quarto-figure-left anchored" data-code-fold="show">
<figure class="quarto-float quarto-float-lst figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-lst" id="lst-roc-model-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Listing&nbsp;18: Calculating predicted ROC curves from multilevel EVSDT, UVSDT, and mixture models.
</figcaption>
<div aria-describedby="lst-roc-model-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb61-1">grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb61-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>),</span>
<span id="cb61-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span>
<span id="cb61-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zfr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(fr)</span>
<span id="cb61-5">)</span>
<span id="cb61-6">WIDTHS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb61-7"></span>
<span id="cb61-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># EVSDT ROC estimates</span></span>
<span id="cb61-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stack population-level and subject-specific estimates</span></span>
<span id="cb61-10">roc_evsdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb61-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(</span>
<span id="cb61-12">    fit_evsdt,</span>
<span id="cb61-13">    b_stimulusOld</span>
<span id="cb61-14">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>),</span>
<span id="cb61-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(</span>
<span id="cb61-17">    fit_evsdt,</span>
<span id="cb61-18">    r_pid[pid, parameter],</span>
<span id="cb61-19">    b_stimulusOld</span>
<span id="cb61-20">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(parameter <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stimulusOld"</span>, pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb61-24">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate subject-specific estimate from mean and deviation</span></span>
<span id="cb61-25">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_stimulusOld =</span> b_stimulusOld <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> r_pid,</span>
<span id="cb61-26">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(pid)</span>
<span id="cb61-27">    )</span>
<span id="cb61-28">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cross with ROC data grid</span></span>
<span id="cb61-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crossing</span>(grid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-31">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate hit rate from parameters and fixed false-alarm rate from grid</span></span>
<span id="cb61-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb61-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(x, b_stimulusOld, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span>
<span id="cb61-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zhr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(hr)</span>
<span id="cb61-35">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pid, fr, zfr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(hr, zhr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.width =</span> WIDTHS)</span>
<span id="cb61-38"></span>
<span id="cb61-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># UVSDT</span></span>
<span id="cb61-40">roc_uvsdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb61-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(</span>
<span id="cb61-42">    fit_uvsdt,</span>
<span id="cb61-43">    b_stimulusOld,</span>
<span id="cb61-44">    b_disc_stimulusOld</span>
<span id="cb61-45">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-46">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb61-47">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b_disc_stimulusOld),</span>
<span id="cb61-48">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span></span>
<span id="cb61-49">    ),</span>
<span id="cb61-50">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(</span>
<span id="cb61-51">    fit_uvsdt,</span>
<span id="cb61-52">    r_pid[pid, parameter],</span>
<span id="cb61-53">    r_pid__disc[pid, parameter],</span>
<span id="cb61-54">    b_stimulusOld,</span>
<span id="cb61-55">    b_disc_stimulusOld</span>
<span id="cb61-56">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-57">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(parameter <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stimulusOld"</span>, pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-58">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-59">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb61-60">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_stimulusOld =</span> b_stimulusOld <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> r_pid,</span>
<span id="cb61-61">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_disc_stimulusOld =</span> b_disc_stimulusOld <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> r_pid__disc,</span>
<span id="cb61-62">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b_disc_stimulusOld),</span>
<span id="cb61-63">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(pid)</span>
<span id="cb61-64">    ),</span>
<span id="cb61-65">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-66">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crossing</span>(grid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb61-68">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(x, b_stimulusOld, b_sd, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span>
<span id="cb61-69">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zhr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(hr),</span>
<span id="cb61-70">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zfr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(fr)</span>
<span id="cb61-71">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-72">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pid, fr, zfr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-73">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(hr, zhr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.width =</span> WIDTHS) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-74">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>()</span>
<span id="cb61-75"></span>
<span id="cb61-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mixture ROC</span></span>
<span id="cb61-77">roc_mix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb61-78">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(</span>
<span id="cb61-79">    fit_mix,</span>
<span id="cb61-80">    b_mu1_stimulusOld,</span>
<span id="cb61-81">    b_theta2_Intercept</span>
<span id="cb61-82">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-83">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb61-84">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>,</span>
<span id="cb61-85">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_theta2_Intercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(b_theta2_Intercept)</span>
<span id="cb61-86">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-87">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(pid, .draw, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_"</span>)),</span>
<span id="cb61-88">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(</span>
<span id="cb61-89">    fit_mix,</span>
<span id="cb61-90">    b_mu1_stimulusOld,</span>
<span id="cb61-91">    b_theta2_Intercept,</span>
<span id="cb61-92">    r_pid__mu1[pid, parameter] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> parameter,</span>
<span id="cb61-93">    r_pid__theta2[pid, parameter]</span>
<span id="cb61-94">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-95">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-96">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb61-97">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_mu1_stimulusOld =</span> b_mu1_stimulusOld <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stimulusOld,</span>
<span id="cb61-98">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_theta2_Intercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(b_theta2_Intercept <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> r_pid__theta2),</span>
<span id="cb61-99">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(pid)</span>
<span id="cb61-100">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-101">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-102">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(pid, .draw, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_"</span>))</span>
<span id="cb61-103">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-104">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crossing</span>(grid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-105">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb61-106">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hr =</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b_theta2_Intercept) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb61-107">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(x, b_mu1_stimulusOld, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb61-108">      b_theta2_Intercept <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span>
<span id="cb61-109">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zhr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(hr)</span>
<span id="cb61-110">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-111">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pid, fr, zfr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-112">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>(hr, zhr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.width =</span> WIDTHS) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb61-113">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>()</span></code></pre></div>
</details>
</div>
</figure>
</div>
</div>
<div class="cell" data-layout-align="center">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># All ROCs</span></span>
<span id="cb62-2">tmp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb62-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EVSDT"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> roc_evsdt,</span>
<span id="cb62-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UVSDT"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> roc_uvsdt,</span>
<span id="cb62-5">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mix"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> roc_mix,</span>
<span id="cb62-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model"</span></span>
<span id="cb62-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb62-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb62-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(Model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EVSDT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UVSDT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mix"</span>)))</span>
<span id="cb62-10"></span>
<span id="cb62-11">pa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> roc_dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb62-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb62-13">    pid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pids,</span>
<span id="cb62-14">    response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb62-15">    name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span></span>
<span id="cb62-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb62-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> fr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> hr.lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> hr.upper) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb62-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pretty_breaks</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb62-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">number</span>(.x, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb62-22">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb62-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pretty_breaks</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb62-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">number</span>(.x, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb62-26">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">s_f_g</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">begin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_lineribbon</span>(</span>
<span id="cb62-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> tmp,</span>
<span id="cb62-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> .width, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> Model),</span>
<span id="cb62-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb62-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb62-35">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(Model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FR"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HR"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb62-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb62-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb62-41">  )</span>
<span id="cb62-42"></span>
<span id="cb62-43">pb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> zfr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> zhr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> zhr.lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> zhr.upper) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(</span>
<span id="cb62-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb62-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb62-48">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zFR"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zHR"</span>)</span>
<span id="cb62-50"></span>
<span id="cb62-51">pa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb62-53">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb62-54">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)</span>
<span id="cb62-55">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb62-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb62-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)</span>
<span id="cb62-59">  )</span>
<span id="cb62-60"></span>
<span id="cb62-61">pa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pb</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-roc-model" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-roc-model-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-roc-model-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="768">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-roc-model-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;13: Caption.
</figcaption>
</figure>
</div>
</div>
</div>
</div></section><section id="tips-for-estimating-models-with-brm" class="level3 appendix"><h2 class="anchored quarto-appendix-heading">Tips for estimating models with brm()</h2><div class="quarto-appendix-contents">

<p>Above, we made use of the <code>file</code> argument in <code>brm()</code> to save estimated models to a file. Throughout, I have also used other options to speed up sampling, specified in a special <code>.Renviron</code> file:</p>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb63-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contents of .Renviron</span></span>
<span id="cb63-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">MAX_CORES</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>8</span>
<span id="cb63-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">BRMS_BACKEND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmdstanr"</span></span>
<span id="cb63-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">BRMS_THREADS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2</span></code></pre></div>
<p>Then, on the top of my R code, I have specified</p>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb64-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(</span>
<span id="cb64-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">brms.backend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BRMS_BACKEND"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rstan"</span>),</span>
<span id="cb64-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">brms.threads =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BRMS_THREADS"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb64-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mc.cores =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MAX_CORES"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb64-5">)</span></code></pre></div>
<p>With these settings, every call to <code>brm()</code> uses the variables I have specified in <code>.Renviron</code> to speed up model estimation with values that work well on my local machine (that has eight CPU cores.) For more information, see <code>?brm</code> and <code>?Sys.getenv</code>.</p>



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-bolger_intensive_2013" class="csl-entry">
Bolger, Niall, and Jean-Philippe Laurenceau. 2013. <em>Intensive Longitudinal Methods: An Introduction to Diary and Experience Sampling Research</em>. Guilford Press. <a href="http://www.intensivelongitudinal.com/">http://www.intensivelongitudinal.com/</a>.
</div>
<div id="ref-burkner_brms:_2017" class="csl-entry">
Bürkner, Paul-Christian. 2017. <span>“Brms: <span>An R Package</span> for <span>Bayesian Multilevel Models Using Stan</span>.”</span> <em>Journal of Statistical Software</em> 80 (1): 1–28. <a href="https://doi.org/10.18637/jss.v080.i01">https://doi.org/10.18637/jss.v080.i01</a>.
</div>
<div id="ref-burknerBayesianItemResponse2021" class="csl-entry">
———. 2021. <span>“Bayesian <span>Item Response Modeling</span> in <span>R</span> with Brms and <span>Stan</span>.”</span> <em>Journal of Statistical Software</em> 100 (November): 1–54. <a href="https://doi.org/10.18637/jss.v100.i05">https://doi.org/10.18637/jss.v100.i05</a>.
</div>
<div id="ref-burknerOrdinalRegressionModels2019" class="csl-entry">
Bürkner, Paul-Christian, and Matti Vuorre. 2019. <span>“Ordinal <span>Regression Models</span> in <span>Psychology</span>: <span>A Tutorial</span>.”</span> <em>Advances in Methods and Practices in Psychological Science</em> 2 (1): 77–101. <a href="https://doi.org/10.1177/2515245918823199">https://doi.org/10.1177/2515245918823199</a>.
</div>
<div id="ref-cetinkaya-rundelIntroductionModernStatistics2024" class="csl-entry">
Çetinkaya-Rundel, Mine, and Johanna Hardin. 2024. <em>Introduction to <span>Modern Statistics</span></em>. OpenIntro. <a href="https://openintro-ims.netlify.app/">https://openintro-ims.netlify.app/</a>.
</div>
<div id="ref-cohenSdtluPackageSignal2021" class="csl-entry">
Cohen, Andrew L., Jeffrey J. Starns, and Caren M. Rotello. 2021. <span>“Sdtlu: <span>An R</span> Package for the Signal Detection Analysis of Eyewitness Lineup Data.”</span> <em>Behavior Research Methods</em> 53 (1): 278–300. <a href="https://doi.org/10.3758/s13428-020-01402-7">https://doi.org/10.3758/s13428-020-01402-7</a>.
</div>
<div id="ref-decarlo_signal_1998" class="csl-entry">
DeCarlo, Lawrence T. 1998. <span>“Signal Detection Theory and Generalized Linear Models.”</span> <em>Psychological Methods</em> 3 (2): 186–205. <a href="https://doi.org/10.1037/1082-989X.3.2.186">https://doi.org/10.1037/1082-989X.3.2.186</a>.
</div>
<div id="ref-decarlo_using_2003" class="csl-entry">
Decarlo, Lawrence T. 2003. <span>“Using the <span>PLUM</span> Procedure of <span>SPSS</span> to Fit Unequal Variance and Generalized Signal Detection Models.”</span> <em>Behavior Research Methods, Instruments, &amp; Computers</em> 35 (1): 49–56. <a href="https://doi.org/10.3758/BF03195496">https://doi.org/10.3758/BF03195496</a>.
</div>
<div id="ref-decarlo_statistical_2010" class="csl-entry">
DeCarlo, Lawrence T. 2010. <span>“On the Statistical and Theoretical Basis of Signal Detection Theory and Extensions: <span>Unequal</span> Variance, Random Coefficient, and Mixture Models.”</span> <em>Journal of Mathematical Psychology</em> 54 (3): 304–13. <a href="https://doi.org/10.1016/j.jmp.2010.01.001">https://doi.org/10.1016/j.jmp.2010.01.001</a>.
</div>
<div id="ref-efronSteinsParadoxStatistics1977" class="csl-entry">
Efron, Bradley, and Carl Morris. 1977. <span>“Stein’s <span>Paradox</span> in <span>Statistics</span>.”</span> <em>Scientific American</em> 236 (5): 119–27. <a href="https://www.jstor.org/stable/24954030">https://www.jstor.org/stable/24954030</a>.
</div>
<div id="ref-gelman_bayesian_2013" class="csl-entry">
Gelman, Andrew, John B. Carlin, Hal S. Stern, David B. Dunson, Aki Vehtari, and Donald B. Rubin. 2013. <em>Bayesian Data Analysis, Third Edition</em>. Boca Raton: Chapman; Hall/<span>CRC</span>.
</div>
<div id="ref-gelmanDataAnalysisUsing2007" class="csl-entry">
Gelman, Andrew, and Jennifer Hill. 2007. <em>Data <span>Analysis Using Regression</span> and <span>Multilevel</span>/<span>Hierarchical Models</span></em>. New York, NY: Cambridge University Press. <a href="http://www.stat.columbia.edu/~gelman/arm/">http://www.stat.columbia.edu/~gelman/arm/</a>.
</div>
<div id="ref-gelmanRegressionOtherStories2020" class="csl-entry">
Gelman, Andrew, Jennifer Hill, and Aki Vehtari. 2020. <em>Regression and <span>Other Stories</span></em>. Cambridge University Press. <a href="https://avehtari.github.io/ROS-Examples/">https://avehtari.github.io/ROS-Examples/</a>.
</div>
<div id="ref-greenSignalDetectionTheory1966" class="csl-entry">
Green, David Marvin, and John A. Swets. 1966. <em>Signal Detection Theory and Psychophysics</em>. New York, NY: Wiley. <a href="https://books.google.com?id=Ykt9AAAAMAAJ">https://books.google.com?id=Ykt9AAAAMAAJ</a>.
</div>
<div id="ref-tidybayes2024" class="csl-entry">
Kay, Matthew. 2024. <em><span class="nocase">tidybayes</span>: Tidy Data and Geoms for <span>Bayesian</span> Models</em>. <a href="https://doi.org/10.5281/zenodo.1308151">https://doi.org/10.5281/zenodo.1308151</a>.
</div>
<div id="ref-kellenTestingFoundationsSignal2021" class="csl-entry">
Kellen, David, Samuel Winiger, John C. Dunn, and Henrik Singmann. 2021. <span>“Testing the Foundations of Signal Detection Theory in Recognition Memory.”</span> <em>Psychological Review</em> 128 (6): 1022–50. <a href="https://doi.org/10.1037/rev0000288">https://doi.org/10.1037/rev0000288</a>.
</div>
<div id="ref-koen_examining_2013" class="csl-entry">
Koen, Joshua D., Mariam Aly, Wei-Chun Wang, and Andrew P. Yonelinas. 2013. <span>“Examining the Causes of Memory Strength Variability: <span>Recollection</span>, Attention Failure, or Encoding Variability?”</span> <em>Journal of Experimental Psychology: Learning, Memory, and Cognition</em> 39 (6): 1726–41. <a href="https://doi.org/10.1037/a0033671">https://doi.org/10.1037/a0033671</a>.
</div>
<div id="ref-kruschke_doing_2014" class="csl-entry">
Kruschke, John K. 2014. <em>Doing Bayesian Data Analysis: A Tutorial Introduction with r</em>. 2nd Edition. Burlington, <span>MA</span>: Academic Press.
</div>
<div id="ref-kruschkeBayesianNewStatistics2017" class="csl-entry">
Kruschke, John K., and Torrin M. Liddell. 2017a. <span>“The <span>Bayesian New Statistics</span>: <span>Hypothesis</span> Testing, Estimation, Meta-Analysis, and Power Analysis from a <span>Bayesian</span> Perspective.”</span> <em>Psychonomic Bulletin &amp; Review</em>, February, 1–29. <a href="https://doi.org/10.3758/s13423-016-1221-4">https://doi.org/10.3758/s13423-016-1221-4</a>.
</div>
<div id="ref-kruschkeBayesianDataAnalysis2017" class="csl-entry">
———. 2017b. <span>“Bayesian Data Analysis for Newcomers.”</span> <em>Psychonomic Bulletin &amp; Review</em>, April, 1–23. <a href="https://doi.org/10.3758/s13423-017-1272-1">https://doi.org/10.3758/s13423-017-1272-1</a>.
</div>
<div id="ref-leeBayesSDTSoftwareBayesian2008" class="csl-entry">
Lee, Michael D. 2008. <span>“<span>BayesSDT</span>: <span>Software</span> for <span>Bayesian</span> Inference with Signal Detection Theory.”</span> <em>Behavior Research Methods</em> 40 (2): 450–56. <a href="https://doi.org/10.3758/BRM.40.2.450">https://doi.org/10.3758/BRM.40.2.450</a>.
</div>
<div id="ref-leeuwenSmokedetectorPrinciplePathogen2024" class="csl-entry">
Leeuwen, Florian van, Bastian Jaeger, John Axelsson, David Vaughn Becker, Lina Hansson, Julie Lasselin, Mats Lekander, Joshua M. Tybur, and Matti Vuorre. 2024. <span>“The Smoke-Detector Principle of Pathogen Avoidance: <span>A</span> Test of How the Behavioral Immune System Gives Rise to Prejudice (Stage 1 Registered Report).”</span> September 30, 2024. <a href="https://doi.org/10.31234/osf.io/e874s">https://doi.org/10.31234/osf.io/e874s</a>.
</div>
<div id="ref-lickliderThreeAuditoryTheories1959" class="csl-entry">
Licklider, J. C. R. 1959. <span>“Three Auditory Theories.”</span> In <em>Psychology: <span>A Study Of A Science Volume</span></em>, edited by Sigmund Koch. Vol. 1: Sensory Perceptual And Physiological Formulations. McGraw-Hill. <a href="https://archive.org/details/in.ernet.dli.2015.74438">https://archive.org/details/in.ernet.dli.2015.74438</a>.
</div>
<div id="ref-liddellAnalyzingOrdinalData2018" class="csl-entry">
Liddell, Torrin M., and John K. Kruschke. 2018. <span>“Analyzing Ordinal Data with Metric Models: <span>What</span> Could Possibly Go Wrong?”</span> <em>Journal of Experimental Social Psychology</em> 79 (November): 328–48. <a href="https://doi.org/10.1016/j.jesp.2018.08.009">https://doi.org/10.1016/j.jesp.2018.08.009</a>.
</div>
<div id="ref-macmillan_detection_2005" class="csl-entry">
Macmillan, Neil A., and C. Douglas Creelman. 2005. <em>Detection Theory: A User’s Guide</em>. 2nd ed. <span>Mahwah, N.J</span>: <span>Lawrence Erlbaum Associates</span>.
</div>
<div id="ref-mcelreathStatisticalRethinkingBayesian2020" class="csl-entry">
McElreath, Richard. 2020. <em>Statistical Rethinking: A <span>Bayesian</span> Course with Examples in <span>R</span> and <span>Stan</span></em>. 2nd ed. <span>CRC</span> Texts in Statistical Science. Boca Raton: <span>Taylor and Francis, CRC Press</span>. <a href="https://xcelab.net/rm/statistical-rethinking/">https://xcelab.net/rm/statistical-rethinking/</a>.
</div>
<div id="ref-paulewiczBhsdtrPackageGeneralpurpose2020" class="csl-entry">
Paulewicz, Borysław, and Agata Blaut. 2020. <span>“The Bhsdtr Package: A General-Purpose Method of <span>Bayesian</span> Inference for Signal Detection Theory Models.”</span> <em>Behavior Research Methods</em> 52 (5): 2122–41. <a href="https://doi.org/10.3758/s13428-020-01370-y">https://doi.org/10.3758/s13428-020-01370-y</a>.
</div>
<div id="ref-rcoreteamLanguageEnvironmentStatistical2025" class="csl-entry">
R Core Team. 2025. <span>“R: <span>A Language</span> and <span>Environment</span> for <span>Statistical Computing</span>. <span>Version</span> 4.4.3.”</span> Vienna, Austria: R Foundation for Statistical Computing. <a href="https://www.R-project.org/">https://www.R-project.org/</a>.
</div>
<div id="ref-rouder_introduction_2005" class="csl-entry">
Rouder, Jeffrey N., and Jun Lu. 2005. <span>“An Introduction to <span>Bayesian</span> Hierarchical Models with an Application in the Theory of Signal Detection.”</span> <em>Psychonomic Bulletin &amp; Review</em> 12 (4): 573–604. <a href="https://doi.org/10.3758/BF03196750">https://doi.org/10.3758/BF03196750</a>.
</div>
<div id="ref-rouder_signal_2007" class="csl-entry">
Rouder, Jeffrey N., Jun Lu, Dongchu Sun, Paul Speckman, Richard D. Morey, and Moshe Naveh-Benjamin. 2007. <span>“Signal <span>Detection Models</span> with <span>Random Participant</span> and <span>Item Effects</span>.”</span> <em>Psychometrika</em> 72 (4): 621–42. <a href="https://doi.org/10.1007/s11336-005-1350-6">https://doi.org/10.1007/s11336-005-1350-6</a>.
</div>
<div id="ref-singmann_mptinr:_2013" class="csl-entry">
Singmann, Henrik, and David Kellen. 2013. <span>“<span>MPTinR</span>: <span>Analysis</span> of Multinomial Processing Tree Models in <span>R</span>.”</span> <em>Behavior Research Methods</em> 45 (2): 560–75. <a href="https://doi.org/10.3758/s13428-012-0259-0">https://doi.org/10.3758/s13428-012-0259-0</a>.
</div>
<div id="ref-stanislaw_calculation_1999" class="csl-entry">
Stanislaw, Harold, and Natasha Todorov. 1999. <span>“Calculation of Signal Detection Theory Measures.”</span> <em>Behavior Research Methods, Instruments, &amp; Computers</em> 31 (1): 137–49. <a href="http://link.springer.com/article/10.3758/BF03207704">http://link.springer.com/article/10.3758/BF03207704</a>.
</div>
<div id="ref-vuorreCommunicatingCausalEffect2024" class="csl-entry">
Vuorre, Matti, Matthew Kay, and Niall Bolger. 2024. <span>“Communicating Causal Effect Heterogeneity.”</span> September 3, 2024. <a href="https://doi.org/10.31234/osf.io/mwg4f">https://doi.org/10.31234/osf.io/mwg4f</a>.
</div>
<div id="ref-wickensElementarySignalDetection2001" class="csl-entry">
Wickens, Thomas D. 2001. <em>Elementary <span>Signal Detection Theory</span></em>. Oxford University Press. <a href="https://books.google.com?id=s3pGN_se4v0C">https://books.google.com?id=s3pGN_se4v0C</a>.
</div>
<div id="ref-zloteanuTutorialDeceptionDetection2024" class="csl-entry">
Zloteanu, Mircea, and Matti Vuorre. 2024. <span>“A <span>Tutorial</span> for <span>Deception Detection Analysis</span> or: <span>How I Learned</span> to <span>Stop Aggregating Veracity Judgments</span> and <span>Embraced Signal Detection Theory Mixed Models</span>.”</span> <em>Journal of Nonverbal Behavior</em>, March. <a href="https://doi.org/10.1007/s10919-024-00456-x">https://doi.org/10.1007/s10919-024-00456-x</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@misc{vuorre2017,
  author = {Vuorre, Matti},
  title = {Estimating {Signal} {Detection} {Models} with Regression
    Using the Brms {R} Package},
  date = {2017-10-09},
  url = {https://osf.io/preprints/psyarxiv/vtfc3_v1},
  doi = {10.31234/osf.io/vtfc3_v1},
  langid = {en},
  abstract = {Signal Detection Theory is a widely used framework for
    understanding decisions by distinguishing between response bias and
    true discriminability in various psychological domains. Manual
    calculation approaches to estimating SDT models’ parameters, while
    commonly used, can be cumbersome and limited. In this tutorial I
    connect SDT to regression models that researchers are already
    familiar with in order to bring the flexibility of modern regression
    techniques to modeling of SDT data. I begin with a glance at SDT’s
    fundamentals, and then show how to manually calculate basic SDT
    parameters. In the bulk of the tutorial, I show step-by-step
    implementations of various SDT models using the brms R package. I
    progress from analyses of binary Yes/No tasks to rating task models
    with multilevel structures, unequal variances, and mixtures.
    Throughout, I highlight benefits of the regression-based approach,
    such as dealing with missing data, multilevel structures, and
    quantifying uncertainty. By framing SDT models as regressions,
    researchers gain access to a powerful set of flexible tools while
    maintaining the conceptual clarity that makes SDT valuable. A
    regression-based approach not only simplifies SDT analyses but also
    extends SDT’s utility through flexible parameter estimation with
    uncertainty measures and the ability to incorporate predictors at
    multiple levels of analysis.}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2017" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2017. <span>“Estimating Signal Detection Models with
Regression Using the Brms R Package.”</span> <em>PsyArXiv</em>. <a href="https://doi.org/10.31234/osf.io/vtfc3_v1">https://doi.org/10.31234/osf.io/vtfc3_v1</a>.
</div></div></section></div> ]]></description>
  <category>psychology</category>
  <category>statistics</category>
  <category>signal detection theory</category>
  <category>tutorial</category>
  <category>R</category>
  <category>brms</category>
  <guid>https://vuorre.com/posts/sdt-regression/</guid>
  <pubDate>Sun, 08 Oct 2017 22:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/sdt-regression/index_files/figure-html/fig-sdt-example-1.png" medium="image" type="image/png" height="58" width="144"/>
</item>
<item>
  <title>Bayes Factors with brms</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>Here’s a short post on how to calculate Bayes Factors with the R package <a href="http://CRAN.R-project.org/package=brms">brms</a> using the Savage-Dickey density ratio method <span class="citation" data-cites="wagenmakers_bayesian_2010">(Wagenmakers et al. 2010)</span>.</p>
<p>To get up to speed with what the Savage-Dickey density ratio method is–or what Bayes Factors are–please read the target article <span class="citation" data-cites="wagenmakers_bayesian_2010">(Wagenmakers et al. 2010)</span>. (The paper is available on the <a href="http://www.ejwagenmakers.com/2010/WagenmakersEtAlCogPsy2010.pdf">author’s webpage</a>.) Here, I’ll only show the R &amp; brms code to do the calculations discussed in <span class="citation" data-cites="wagenmakers_bayesian_2010">Wagenmakers et al. (2010)</span>. In their paper, they used WinBUGS, which requires quite a bit of code to sample from even a relatively simple model. brms on the other hand uses the familiar R formula syntax, making it easy to use. brms also does the MCMC sampling with <a href="http://mc-stan.org/">Stan</a> <span class="citation" data-cites="stan_development_team_stan:_2016">(Stan Development Team 2016)</span>, or rather creates Stan code from a specified R model formula by what can only be described as string processing magic, making the sampling very fast. Let’s get straight to the examples. We will use these packages:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(knitr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
<section id="example-0" class="level2">
<h2 class="anchored" data-anchor-id="example-0">Example 0</h2>
<p>Wagenmakers and colleagues begin with a simple example of 10 true/false questions: We observe a person answering 9 (s) out of 10 (k) questions correctly.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</div>
<p>We are interested in the person’s latent ability to answer similar questions correctly. This ability is represented by <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> (theta), which for us will be the probability parameter (sometimes also called the rate parameter) in a binomial distribution. The maximum likelihood (point) estimate for <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> is the proportion n/k = .9.</p>
<p>The first thing we’ll need to specify with respect to our statistical model is the prior probability distribution for <img src="https://latex.codecogs.com/png.latex?%5Ctheta">. As in Wagenmakers et al.&nbsp;2010, we specify a uniform prior, representing no prior information about the person’s ability to aswer the questions. For the binomial probability parameter, <img src="https://latex.codecogs.com/png.latex?Beta(%5Calpha%20=%201,%20%5Cbeta%20=%201)"> is a uniform prior.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">pd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">01</span>),</span>
<span id="cb3-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Prior =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbeta</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-4">)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The solid line represents the probability density assigned to values of <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> by this prior probability distribution. You can see that it is 1 for all possible parameter values: They are all equally likely a priori. For this simple illustration, we can easily calculate the posterior distribution by adding the number of correct and incorrect answers to the parameters of the prior Beta distribution.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">pd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Posterior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbeta</span>(pd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/index_files/figure-html/figure1-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The Savage-Dickey density ratio is calculated by dividing the posterior density by the prior density at a specific parameter value. Here, we are interested in .5, a “null hypothesis” value indicating that the person’s latent ability is .5, i.e.&nbsp;that they are simply guessing.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<table class="table caption-top table-sm table-striped small" data-quarto-postprocess="true">
<caption>Bayes Factors for first example.</caption>
<thead>
<tr class="header">
<th style="text-align: right;" data-quarto-table-cell-role="th">x</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Prior</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Posterior</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">BF01</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">BF10</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">0.5</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0.107</td>
<td style="text-align: right;">0.107</td>
<td style="text-align: right;">9.309</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>OK, so in this example we are able to get to the posterior with simply adding values into the parameters of the Beta distribution, but let’s now see how to get to this problem using brms. First, here’s the brms formula of the model:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">m0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(</span>
<span id="cb5-2">  s <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trials</span>(k) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Intercept,</span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>)</span>
<span id="cb5-4">)</span></code></pre></div>
</div>
<p>Read the first line as “s successes from k trials regressed on intercept”. That’s a little clunky, but bear with it. If you are familiar with R’s modeling syntax, you’ll be wondering why we didn’t simply specify <code>~ 1</code> (R’s default notation for an intercept). The reason is that brms by default uses a little trick in parameterizing the intercept which speeds up the MCMC sampling. In order to specify a prior for the intercept, you’ll have to take the default intercept out (<code>0 +</code>), and use the reserved string <code>intercept</code> to say that you mean the regular intercept. See <code>?brmsformula</code> for details. (For this model, with only one parameter, this complication doesn’t matter, but I wanted to introduce it early on so that you’d be aware of it when estimating multi-parameter models.)</p>
<p>The next line specifies that the data model is binomial, and that we want to model it’s parameter through an identity link. Usually when you model proportions or binary data, you’d use a logistic (logistic regression!), probit or other similar link function. In fact this is what we’ll do for later examples. Finally, we’ll use the data frame <code>d</code>.</p>
<p>OK, then we’ll want to specify our priors. Priors are extremo important for Bayes Factors–and probabilistic inference in general. To help set priors, we’ll first call <code>get_priors()</code> with the model information, which is basically like asking brms to tell what are the possible priors, and how to specify then, given this model.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_prior</span>(m0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span>
<span id="cb6-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   prior class      coef group resp dpar nlpar lb ub       source</span></span>
<span id="cb6-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  (flat)     b                                            default</span></span>
<span id="cb6-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  (flat)     b Intercept                             (vectorized)</span></span></code></pre></div>
</div>
<p>The first line says that there is only one class of parameters <code>b</code>, think of class <code>b</code> as “betas” or “regression coefficients”. The second line says that the <code>b</code> class has only one parameter, the intercept. So we can set a prior for the intercept, and this prior can be any probability distribution in Stan language. We’ll create this prior using brms’ <code>set_prior()</code>, give it a text string representing the Beta(1, 1) prior for all parameters of class <code>b</code> (shortcut, could also specify that we want it for the intercept specifically), and then say the upper and lower bounds (<img src="https://latex.codecogs.com/png.latex?%5Ctheta"> must be between 0 and 1).</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">Prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_prior</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beta(1, 1)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lb =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ub =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<p>Almost there. Now we’ll actually sample from the model using <code>brm()</code>, give it the model, priors, data, ask it to sample from priors (for the density ratio), and set a few extra MCMC parameters.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb8-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> m0,</span>
<span id="cb8-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior =</span> Prior,</span>
<span id="cb8-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb8-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sample_prior =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb8-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>,</span>
<span id="cb8-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb8-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bayesfactormodel"</span></span>
<span id="cb8-9">)</span></code></pre></div>
</div>
<p>We can get the estimated parameter by asking the model summary:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span>
<span id="cb9-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  Family: binomial </span></span>
<span id="cb9-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Links: mu = identity </span></span>
<span id="cb9-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Formula: s | trials(k) ~ 0 + Intercept </span></span>
<span id="cb9-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    Data: d (Number of observations: 1) </span></span>
<span id="cb9-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Draws: 4 chains, each with iter = 10000; warmup = 5000; thin = 1;</span></span>
<span id="cb9-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##          total post-warmup draws = 20000</span></span>
<span id="cb9-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb9-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Regression Coefficients:</span></span>
<span id="cb9-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS</span></span>
<span id="cb9-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Intercept     0.83      0.10     0.60     0.97 1.00     6332     5915</span></span>
<span id="cb9-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb9-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS</span></span>
<span id="cb9-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## and Tail_ESS are effective sample size measures, and Rhat is the potential</span></span>
<span id="cb9-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## scale reduction factor on split chains (at convergence, Rhat = 1).</span></span></code></pre></div>
</div>
<p>The Credible Interval matches exactly what’s reported in the paper. The point estimate differs slightly because here we see the posterior mean, whereas in the paper, Wagenmakers et al.&nbsp;report the posterior mode. I’ll draw a line at their posterior mode, below, to show that it matches.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">samples <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">posterior_samples</span>(m, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>)</span></code></pre></div>
<div class="cell-output-display">
<table class="table caption-top table-sm table-striped small" data-quarto-postprocess="true">
<caption>Six first rows of posterior samples.</caption>
<thead>
<tr class="header">
<th style="text-align: right;" data-quarto-table-cell-role="th">b_Intercept</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">prior_b</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">0.80</td>
<td style="text-align: right;">0.25</td>
</tr>
<tr class="even">
<td style="text-align: right;">0.82</td>
<td style="text-align: right;">0.49</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0.83</td>
<td style="text-align: right;">0.03</td>
</tr>
<tr class="even">
<td style="text-align: right;">0.91</td>
<td style="text-align: right;">0.43</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0.92</td>
<td style="text-align: right;">0.86</td>
</tr>
<tr class="even">
<td style="text-align: right;">0.59</td>
<td style="text-align: right;">0.63</td>
</tr>
</tbody>
</table>


</div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>We can already see the densities, so all that’s left is to obtain the exact values at the value of interest (.5) and take the <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bposterior%7D%7Bprior%7D"> ratio. Instead of doing any of this by hand, we’ll use brms’ function <code>hypothesis()</code> that allows us to test point hypotheses using the Dickey Savage density ratio. For this function we’ll need to specify the point of interest, .5, as the point hypothesis to be tested.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">h <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span>(m, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Intercept = 0.5"</span>)</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(h, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb11-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Hypothesis Tests for class b:</span></span>
<span id="cb11-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##              Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio Post.Prob Star</span></span>
<span id="cb11-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 (Intercept)-(0.5) = 0    0.334    0.1011   0.0958    0.475     0.0989      0.09    *</span></span>
<span id="cb11-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ---</span></span>
<span id="cb11-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.</span></span>
<span id="cb11-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## '*': For one-sided hypotheses, the posterior probability exceeds 95%;</span></span>
<span id="cb11-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## for two-sided hypotheses, the value tested against lies outside the 95%-CI.</span></span>
<span id="cb11-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Posterior probabilities of point hypotheses assume equal prior probabilities.</span></span></code></pre></div>
</div>
<p>The <code>Evid.Ratio</code> is our Bayes Factor BF01. Notice that it matches the value 0.107 pretty well. You can also plot this hypothesis object easily with the <code>plot()</code> method:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(h)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>OK, so that was a lot of work for such a simple problem, but the real beauty of brms (and Stan) is the scalability: We can easily solve a problem with one row of data and one parameter, and it won’t take much more to solve a problem with tens of thousands of rows of data, and hundreds of parameters. Let’s move on to the next example from <span class="citation" data-cites="wagenmakers_bayesian_2010">Wagenmakers et al. (2010)</span>.</p>
</section>
<section id="example-1-equality-of-proportions" class="level2">
<h2 class="anchored" data-anchor-id="example-1-equality-of-proportions">Example 1: Equality of Proportions</h2>
<p>These are the data from the paper</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb13-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pledge =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yes"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no"</span>),</span>
<span id="cb13-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">424</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5416</span>),</span>
<span id="cb13-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">777</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9072</span>)</span>
<span id="cb13-5">)</span>
<span id="cb13-6">d</span>
<span id="cb13-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   pledge    s    n</span></span>
<span id="cb13-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1    yes  424  777</span></span>
<span id="cb13-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2     no 5416 9072</span></span></code></pre></div>
</div>
<p>They use Beta(1, 1) priors for both rate parameters, which we’ll do as well. Notice that usually a regression formula has an intercept and a coefficient (e.g.&nbsp;effect of group.) By taking the intercept out (<code>0 +</code>) we can define two pledger-group proportions instead, and set priors on these. If we used an intercept + effect formula, we could set a prior on the effect itself.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">m1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(</span>
<span id="cb14-2">  s <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trials</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pledge,</span>
<span id="cb14-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>)</span>
<span id="cb14-4">)</span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_prior</span>(</span>
<span id="cb14-6">  m1,</span>
<span id="cb14-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d</span>
<span id="cb14-8">)</span>
<span id="cb14-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   prior class      coef group resp dpar nlpar lb ub       source</span></span>
<span id="cb14-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  (flat)     b                                            default</span></span>
<span id="cb14-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  (flat)     b  pledgeno                             (vectorized)</span></span>
<span id="cb14-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  (flat)     b pledgeyes                             (vectorized)</span></span></code></pre></div>
</div>
<p>We can set the Beta prior for both groups’ rate with one line of code by setting the prior on the <code>b</code> class without specifying the <code>coef</code>.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">Prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_prior</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beta(1, 1)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lb =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ub =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<p>Like above, let’s estimate.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">m1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb16-2">  m1,</span>
<span id="cb16-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior =</span> Prior,</span>
<span id="cb16-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sample_prior =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb16-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>,</span>
<span id="cb16-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb16-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb16-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bayesfactormodel2"</span></span>
<span id="cb16-9">)</span></code></pre></div>
</div>
<p>Our estimates match the MLEs reported in the paper:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m1)</span>
<span id="cb17-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  Family: binomial </span></span>
<span id="cb17-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Links: mu = identity </span></span>
<span id="cb17-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Formula: s | trials(n) ~ 0 + pledge </span></span>
<span id="cb17-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    Data: d (Number of observations: 2) </span></span>
<span id="cb17-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Draws: 4 chains, each with iter = 10000; warmup = 5000; thin = 1;</span></span>
<span id="cb17-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##          total post-warmup draws = 20000</span></span>
<span id="cb17-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb17-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Regression Coefficients:</span></span>
<span id="cb17-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS</span></span>
<span id="cb17-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## pledgeno      0.60      0.01     0.59     0.61 1.00    16511    13651</span></span>
<span id="cb17-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## pledgeyes     0.55      0.02     0.51     0.58 1.00    17587    12835</span></span>
<span id="cb17-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb17-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS</span></span>
<span id="cb17-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## and Tail_ESS are effective sample size measures, and Rhat is the potential</span></span>
<span id="cb17-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## scale reduction factor on split chains (at convergence, Rhat = 1).</span></span></code></pre></div>
</div>
<p>To get the density ratio Bayes Factor, we’ll need to specify a text string as our hypothesis. Our hypothesis is that the rate parameters <img src="https://latex.codecogs.com/png.latex?%5Ctheta_1"> and <img src="https://latex.codecogs.com/png.latex?%5Ctheta_2"> are not different: <img src="https://latex.codecogs.com/png.latex?%5Ctheta_1"> = <img src="https://latex.codecogs.com/png.latex?%5Ctheta_2">. The alternative, then, is the notion that the parameter values differ.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">h1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span>(m1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pledgeyes = pledgeno"</span>)</span>
<span id="cb18-2">h1</span>
<span id="cb18-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Hypothesis Tests for class b:</span></span>
<span id="cb18-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                 Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio Post.Prob Star</span></span>
<span id="cb18-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 (pledgeyes)-(pled... = 0    -0.05      0.02    -0.09    -0.02       0.52      0.34    *</span></span>
<span id="cb18-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ---</span></span>
<span id="cb18-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.</span></span>
<span id="cb18-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## '*': For one-sided hypotheses, the posterior probability exceeds 95%;</span></span>
<span id="cb18-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## for two-sided hypotheses, the value tested against lies outside the 95%-CI.</span></span>
<span id="cb18-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Posterior probabilities of point hypotheses assume equal prior probabilities.</span></span></code></pre></div>
</div>
<p>As noted in the paper, a difference value of 0 is about twice as well supported before seeing the data, i.e.&nbsp;the null hypothesis of no difference is twice less likely after seeing the data:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> h1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>hypothesis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Evid.Ratio <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># BF10</span></span>
<span id="cb19-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] 1.921607</span></span></code></pre></div>
</div>
<p>The paper reports BF01 = 0.47, so we’re getting the same results (as we should.) You can also compare this figure to what’s reported in the paper.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">h1p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(h1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> F)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb20-2">h1p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(h1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> F)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb20-4"></span>
<span id="cb20-5">(h1p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> h1p2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guides =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collect"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/index_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Moving right on to Example 2, skipping the section on “order restricted analysis”.</p>
</section>
<section id="example-2-hierarchical-bayesian-one-sample-proportion-test" class="level2">
<h2 class="anchored" data-anchor-id="example-2-hierarchical-bayesian-one-sample-proportion-test">Example 2: Hierarchical Bayesian one-sample proportion test</h2>
<p>The data for example 2 is not available, but we’ll simulate similar data. The simulation assumes that the neither-primed condition average correct probability is 50%, and that the both-primed condition benefit is 5%. Obviously, the numbers here won’t match anymore, but the data reported in the paper has an average difference in proportions of about 4%.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb21-2">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb21-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">74</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)),</span>
<span id="cb21-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">primed =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"neither"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"both"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">74</span>),</span>
<span id="cb21-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prime =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">74</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dummy coded</span></span>
<span id="cb21-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>,</span>
<span id="cb21-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">correct =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">74</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> prime <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>)</span>
<span id="cb21-8">)</span>
<span id="cb21-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(d, primed) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(correct) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n))</span>
<span id="cb21-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 2 × 2</span></span>
<span id="cb21-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   primed      p</span></span>
<span id="cb21-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;chr&gt;   &lt;dbl&gt;</span></span>
<span id="cb21-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 both    0.542</span></span>
<span id="cb21-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2 neither 0.499</span></span></code></pre></div>
</div>
<p>This data yields a similar t-value as in the paper.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">tmp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> correct <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb22-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(id, primed, p) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> primed, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> p)</span>
<span id="cb22-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(tmp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>both, tmp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>neither, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paired =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> .)</span>
<span id="cb22-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb22-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  Paired t-test</span></span>
<span id="cb22-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb22-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## data:  tmp$both and tmp$neither</span></span>
<span id="cb22-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## t = 2.3045, df = 73, p-value = 0.02404</span></span>
<span id="cb22-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## alternative hypothesis: true mean difference is not equal to 0</span></span>
<span id="cb22-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 95 percent confidence interval:</span></span>
<span id="cb22-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  0.005741069 0.079201016</span></span>
<span id="cb22-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## sample estimates:</span></span>
<span id="cb22-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## mean difference </span></span>
<span id="cb22-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##      0.04247104</span></span></code></pre></div>
</div>
<p>Instead of doing a probit regression, I’m going to do logistic regression. Therefore we define the prior on the log-odds scale. The log odds for the expected probability of .5 is 0. I prefer log-odds because–although complicated–they make sense, unlike standardized effect sizes. Note that the probit scale would also be fine as they are very similar.</p>
<p>Let’s just get a quick intuition about effects in log-odds: The change in log odds from p = .5 to .55 is about 0.2.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb23-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">01</span>),</span>
<span id="cb23-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logit =</span> arm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logit</span>(rate)</span>
<span id="cb23-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(rate, logit)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.55</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>We are cheating a little because we know these values, having simulated the data. However, log-odds are not straightforward (!), and this knowledge will allow us to specify better priors in this example. Let’s get the possible priors for this model by calling <code>get_prior()</code>. Notice that the model now includes id-varying “random” effects, and we model them from independent Gaussians by specifying <code>||</code> instead of <code>|</code> which would give a multivariate Gaussian on the varying effects.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">m2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(</span>
<span id="cb24-2">  correct <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trials</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Intercept <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> prime <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-3">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Intercept <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> prime <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> id),</span>
<span id="cb24-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logit"</span>)</span>
<span id="cb24-5">)</span>
<span id="cb24-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_prior</span>(</span>
<span id="cb24-7">  m2,</span>
<span id="cb24-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d</span>
<span id="cb24-9">)</span>
<span id="cb24-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                 prior class      coef group resp dpar nlpar lb ub       source</span></span>
<span id="cb24-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                (flat)     b                                            default</span></span>
<span id="cb24-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                (flat)     b Intercept                             (vectorized)</span></span>
<span id="cb24-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                (flat)     b     prime                             (vectorized)</span></span>
<span id="cb24-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  student_t(3, 0, 2.5)    sd                                  0         default</span></span>
<span id="cb24-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  student_t(3, 0, 2.5)    sd              id                  0    (vectorized)</span></span>
<span id="cb24-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  student_t(3, 0, 2.5)    sd Intercept    id                  0    (vectorized)</span></span>
<span id="cb24-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  student_t(3, 0, 2.5)    sd     prime    id                  0    (vectorized)</span></span></code></pre></div>
</div>
<p>The leftmost column gives the pre-specified defaults used by brms. Here are the priors we’ll specify. The most important pertains to <code>prime</code>, which is going to be the effect size in log-odds. Our prior for the log odds of the prime effect is going to be a Gaussian distribution centered on 0, with a standard deviation of .2, which is rather diffuse.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">Prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_prior</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal(0, 10)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coef =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Intercept"</span>),</span>
<span id="cb25-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_prior</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cauchy(0, 10)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd"</span>),</span>
<span id="cb25-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_prior</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal(0, .2)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coef =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prime"</span>)</span>
<span id="cb25-5">)</span></code></pre></div>
</div>
<p>Then we estimate the model using the specified priors.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">m2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb26-2">  m2,</span>
<span id="cb26-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior =</span> Prior,</span>
<span id="cb26-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sample_prior =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb26-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>,</span>
<span id="cb26-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb26-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb26-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bayesfactormodel3"</span></span>
<span id="cb26-9">)</span></code></pre></div>
</div>
<p>OK, so our results here will be different because we didn’t parameterize the prior on a standardized effect size because <strong>a</strong>) I don’t like standardized effect sizes, and <strong>b</strong>) I would have to play around with the Stan code, and this post is about brms. Anyway, here are the estimated parameters:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m2)</span>
<span id="cb27-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  Family: binomial </span></span>
<span id="cb27-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Links: mu = logit </span></span>
<span id="cb27-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Formula: correct | trials(n) ~ 0 + Intercept + prime + (0 + Intercept + prime || id) </span></span>
<span id="cb27-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    Data: d (Number of observations: 148) </span></span>
<span id="cb27-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Draws: 4 chains, each with iter = 10000; warmup = 5000; thin = 1;</span></span>
<span id="cb27-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##          total post-warmup draws = 20000</span></span>
<span id="cb27-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb27-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Multilevel Hyperparameters:</span></span>
<span id="cb27-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ~id (Number of levels: 74) </span></span>
<span id="cb27-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##               Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS</span></span>
<span id="cb27-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## sd(Intercept)     0.07      0.05     0.00     0.19 1.00     7582     9246</span></span>
<span id="cb27-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## sd(prime)         0.12      0.08     0.01     0.30 1.00     6057     8731</span></span>
<span id="cb27-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb27-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Regression Coefficients:</span></span>
<span id="cb27-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS</span></span>
<span id="cb27-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Intercept     0.01      0.05    -0.09     0.10 1.00    19816    15086</span></span>
<span id="cb27-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## prime         0.15      0.07     0.02     0.28 1.00    20723    16003</span></span>
<span id="cb27-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb27-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS</span></span>
<span id="cb27-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## and Tail_ESS are effective sample size measures, and Rhat is the potential</span></span>
<span id="cb27-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## scale reduction factor on split chains (at convergence, Rhat = 1).</span></span></code></pre></div>
</div>
<p>And our null-hypothesis density ratio:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">h2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span>(m2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prime = 0"</span>)</span>
<span id="cb28-2">h2</span>
<span id="cb28-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Hypothesis Tests for class b:</span></span>
<span id="cb28-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    Hypothesis Estimate Est.Error CI.Lower CI.Upper Evid.Ratio Post.Prob Star</span></span>
<span id="cb28-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 (prime) = 0     0.15      0.07     0.02     0.28       0.28      0.22    *</span></span>
<span id="cb28-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ---</span></span>
<span id="cb28-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 'CI': 90%-CI for one-sided and 95%-CI for two-sided hypotheses.</span></span>
<span id="cb28-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## '*': For one-sided hypotheses, the posterior probability exceeds 95%;</span></span>
<span id="cb28-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## for two-sided hypotheses, the value tested against lies outside the 95%-CI.</span></span>
<span id="cb28-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Posterior probabilities of point hypotheses assume equal prior probabilities.</span></span></code></pre></div>
</div>
<p>Priming effect of zero log-odds is 4 times less likely after seeing the data:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> h2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>hypothesis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Evid.Ratio</span>
<span id="cb29-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] 3.531361</span></span></code></pre></div>
</div>
<p>This is best illustrated by plotting the densities:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(h2)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/index_files/figure-html/unnamed-chunk-29-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Read the paper! Hopefully you’ll be able to use brms’ <code>hypothesis()</code> function to calculate bayes factors when needed.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-stan_development_team_stan:_2016" class="csl-entry">
Stan Development Team. 2016. <em>Stan: A c++ Library for Probability and Sampling, Version 2.15.0</em>. <a href="http://mc-stan.org/">http://mc-stan.org/</a>.
</div>
<div id="ref-wagenmakers_bayesian_2010" class="csl-entry">
Wagenmakers, Eric-Jan, Tom Lodewyckx, Himanshu Kuriyal, and Raoul Grasman. 2010. <span>“Bayesian Hypothesis Testing for Psychologists: A Tutorial on the Savage–Dickey Method.”</span> <em>Cognitive Psychology</em> 60 (3): 158–89. <a href="https://doi.org/10.1016/j.cogpsych.2009.12.001">https://doi.org/10.1016/j.cogpsych.2009.12.001</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2017,
  author = {Vuorre, Matti},
  title = {Bayes {Factors} with Brms},
  date = {2017-03-21},
  url = {https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2017" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2017. <span>“Bayes Factors with Brms.”</span> March 21,
2017. <a href="https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/">https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/</a>.
</div></div></section></div> ]]></description>
  <category>statistics</category>
  <category>tutorial</category>
  <category>R</category>
  <category>brms</category>
  <guid>https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/</guid>
  <pubDate>Mon, 20 Mar 2017 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/2017-03-21-bayes-factors-with-brms/index_files/figure-html/figure1-1.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>How to create within-subject scatter plots in R with ggplot2</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/2017-01-04-within-subject-scatter/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>Today, we’ll take a look at creating a specific type of visualization for data from a within-subjects experiment (also known as repeated measures, but that can sometimes be a misleading label). You’ll often see within-subject data visualized as bar graphs (condition means, and maybe mean difference if you’re lucky.) But alternatives exist, and today we’ll take a look at <strong>within-subjects scatterplots</strong>.</p>
<p>For example, <span class="citation" data-cites="ganis_new_2015">Ganis and Kievit (2015)</span> asked 54 people to observe, on each trial, two 3-D shapes with various rotations and judge whether the two shapes were the same or not.</p>
<p>There were 4 angles (0, 50, 100, and 150 degree rotations), but for simplicity, today we’ll only look at items that were not rotated with respect to each other, and items rotated 50 degrees. The data are freely available (thanks!) in Excel format, and the below snippet loads the data and cleans into a useable format:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.zip"</span>)) {</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://ndownloader.figshare.com/files/1878093"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.zip"</span>)</span>
<span id="cb1-3">}</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unzip</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.zip"</span>)</span>
<span id="cb1-5">files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(</span>
<span id="cb1-6">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Behavioural_data/"</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sub[0-9]+.xlsx"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> T</span>
<span id="cb1-8">)</span>
<span id="cb1-9">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(</span>
<span id="cb1-10">  files,</span>
<span id="cb1-11">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_xlsx</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A4:G100"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_types =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb1-12">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>)</span>
<span id="cb1-14">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(angle <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"50"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transmute</span>(</span>
<span id="cb1-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(id),</span>
<span id="cb1-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(angle),</span>
<span id="cb1-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rt =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(Time),</span>
<span id="cb1-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">correct/incorrect</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span>
<span id="cb1-21">  )</span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<table class="table caption-top table-sm table-striped small" data-quarto-postprocess="true">
<caption>Example data.</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">id</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">angle</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">rt</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">accuracy</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: left;">0</td>
<td style="text-align: right;">1355</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: left;">50</td>
<td style="text-align: right;">1685</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: left;">50</td>
<td style="text-align: right;">1237</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: left;">0</td>
<td style="text-align: right;">1275</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: left;">50</td>
<td style="text-align: right;">2238</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: left;">0</td>
<td style="text-align: right;">1524</td>
<td style="text-align: right;">1</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>We’ll focus on comparing the reaction times between the 0 degree and 50 degree rotation trials.</p>
<section id="subject-means" class="level2">
<h2 class="anchored" data-anchor-id="subject-means">Subject means</h2>
<p>We’ll be graphing subjects’ means and standard errors, so we compute both first</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">dat_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(dat, id, angle) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb2-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(rt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(rt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb2-5">  )</span></code></pre></div>
<div class="cell-output-display">
<table class="table caption-top table-sm table-striped small" data-quarto-postprocess="true">
<caption>Summary data</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">id</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">angle</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">m</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">se</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: left;">0</td>
<td style="text-align: right;">1512.12</td>
<td style="text-align: right;">146.50</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: left;">50</td>
<td style="text-align: right;">2039.42</td>
<td style="text-align: right;">133.74</td>
</tr>
<tr class="odd">
<td style="text-align: left;">10</td>
<td style="text-align: left;">0</td>
<td style="text-align: right;">2784.39</td>
<td style="text-align: right;">301.94</td>
</tr>
<tr class="even">
<td style="text-align: left;">10</td>
<td style="text-align: left;">50</td>
<td style="text-align: right;">3766.58</td>
<td style="text-align: right;">337.51</td>
</tr>
<tr class="odd">
<td style="text-align: left;">11</td>
<td style="text-align: left;">0</td>
<td style="text-align: right;">3546.30</td>
<td style="text-align: right;">388.03</td>
</tr>
<tr class="even">
<td style="text-align: left;">11</td>
<td style="text-align: left;">50</td>
<td style="text-align: right;">4639.84</td>
<td style="text-align: right;">281.78</td>
</tr>
</tbody>
</table>


</div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">dat_sum <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> angle, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> m)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(</span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> mean_cl_normal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-5">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_quasirandom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean RT"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-01-04-within-subject-scatter/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This figure shows quite clearly that the mean reaction time in the 50 degree angle condition was higher than in the 0 degree angle condition, and the spread across individuals in each condition. However, we often are specifically interested in the <em>within-subject effect</em> of condition, which would be difficult to visually display in this image. We could draw lines to connect each point, and the effect would then be visible as a “spaghetti plot”, but while useful, these plots may sometimes be a little overwhelming especially if there’s too many people (spaghetti is great but nobody likes too much of it!)</p>
</section>
<section id="within-subject-scatterplots" class="level2">
<h2 class="anchored" data-anchor-id="within-subject-scatterplots">Within-subject scatterplots</h2>
<p>To draw within-subjects scatterplots, we’ll need a slight reorganization of the data, such that it is in wide format with respect to the conditions.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">dat_sum_wide <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_sum <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> angle, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(m, se))</span></code></pre></div>
<div class="cell-output-display">
<table class="table caption-top table-sm table-striped small" data-quarto-postprocess="true">
<caption>Summary data in wide format.</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">id</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">m_0</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">m_50</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">se_0</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">se_50</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">1512.12</td>
<td style="text-align: right;">2039.42</td>
<td style="text-align: right;">146.50</td>
<td style="text-align: right;">133.74</td>
</tr>
<tr class="even">
<td style="text-align: left;">10</td>
<td style="text-align: right;">2784.39</td>
<td style="text-align: right;">3766.58</td>
<td style="text-align: right;">301.94</td>
<td style="text-align: right;">337.51</td>
</tr>
<tr class="odd">
<td style="text-align: left;">11</td>
<td style="text-align: right;">3546.30</td>
<td style="text-align: right;">4639.84</td>
<td style="text-align: right;">388.03</td>
<td style="text-align: right;">281.78</td>
</tr>
<tr class="even">
<td style="text-align: left;">12</td>
<td style="text-align: right;">1251.04</td>
<td style="text-align: right;">1767.54</td>
<td style="text-align: right;">125.10</td>
<td style="text-align: right;">211.44</td>
</tr>
<tr class="odd">
<td style="text-align: left;">13</td>
<td style="text-align: right;">1372.54</td>
<td style="text-align: right;">2037.67</td>
<td style="text-align: right;">86.25</td>
<td style="text-align: right;">167.52</td>
</tr>
<tr class="even">
<td style="text-align: left;">14</td>
<td style="text-align: right;">1231.92</td>
<td style="text-align: right;">1666.25</td>
<td style="text-align: right;">84.09</td>
<td style="text-align: right;">126.10</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>Then we can simply map the per-subject angle-means and standard errors to the X and Y axes. I think it’s important for these graphs to usually have a 1:1 aspect ratio, an identity line, and identical axes, which we add below.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(dat_sum_wide, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> m_0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> m_50)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Equalize axes</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RT (0 degrees)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RT (50 degrees)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Identity line</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1:1 aspect ratio</span></span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Points and errorbars</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_linerange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> m_50<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>se_50, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> m_50<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>se_50), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_linerange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> m_0<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>se_0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> m_0<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>se_0), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-01-04-within-subject-scatter/index_files/figure-html/scatter-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This plot shows each person (mean) as a point and their SEs as thin lines. The difference between conditions can be directly seen by how far from the diagonal line the points are. Were we to use CIs, we could also see subject-specific significant differences. Points above the diagonal indicate that the person’s (mean) RT was greater in the 50 degrees condition. <em>All</em> of the points lie below the identity line, indicating that the effect was as we predicted, and robust across individuals.</p>
<p>This is a very useful diagnostic plot that simultaneously shows the population- (or group-) level trend (are the points, on average, below or above the identity line?) and the expectation (mean) for every person (roughly, how far apart the points are from each other?). The points are naturally connected by their location, unlike in a bar graph where they would be connected by lines. Maybe you think it’s an informative graph; it’s certainly very easy to do in R with ggplot2. Also, I think it is visually very convincing, and doesn’t necessarily lead one to focus unjustly just on the group means: I am both convinced and informed by the graph.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Within-subject scatter plots are pretty common in some fields (psychophysics), but underutilized in many fields where they might have a positive impact on statistical inference. Why not try them out on your own data, especially when they’re this easy to do with R and ggplot2?</p>
<p>Recall that for real applications, it’s better to transform or model reaction times with a skewed distribution. Here we used normal distributions just for convenience.</p>
<p>Finally, this post was made possible by the <span class="citation" data-cites="ganis_new_2015">Ganis and Kievit (2015)</span> who generously have shared their data online.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-ganis_new_2015" class="csl-entry">
Ganis, Giorgio, and Rogier Kievit. 2015. <span>“A New Set of Three-Dimensional Shapes for Investigating Mental Rotation Processes: Validation Data and Stimulus Set.”</span> <em>Journal of Open Psychology Data</em> 3 (1). <a href="https://doi.org/10.5334/jopd.ai">https://doi.org/10.5334/jopd.ai</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2017,
  author = {Vuorre, Matti},
  title = {How to Create Within-Subject Scatter Plots in {R} with
    Ggplot2},
  date = {2017-01-04},
  url = {https://vuorre.com/posts/2017-01-04-within-subject-scatter/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2017" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2017. <span>“How to Create Within-Subject Scatter Plots
in R with Ggplot2.”</span> January 4, 2017. <a href="https://vuorre.com/posts/2017-01-04-within-subject-scatter/">https://vuorre.com/posts/2017-01-04-within-subject-scatter/</a>.
</div></div></section></div> ]]></description>
  <category>statistics</category>
  <category>tutorial</category>
  <category>R</category>
  <category>visualization</category>
  <category>ggplot2</category>
  <guid>https://vuorre.com/posts/2017-01-04-within-subject-scatter/</guid>
  <pubDate>Tue, 03 Jan 2017 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/2017-01-04-within-subject-scatter/index_files/figure-html/scatter-1.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>How to Compare Two Groups with Robust Bayesian Estimation in R</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/2017-01-02-how-to-compare-two-groups-with-robust-bayesian-estimation-using-r-stan-and-brms/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Happy New Year 2017 everybody! 2017 will be the year when social scientists finally decided to diversify their applied statistics toolbox, and stop relying 100% on null hypothesis significance testing (NHST). We now recognize that different scientific questions may require different statistical tools, and are ready to adopt new and innovative methods. A very appealing alternative to NHST is Bayesian statistics, which in itself contains many approaches to statistical inference. In this post, I provide an introductory and practical tutorial to Bayesian parameter estimation in the context of comparing two independent groups’ data.</p>
<p>More specifically, we’ll focus on the t-test. Everyone knows it, everyone uses it. Yet, there are (arguably) better methods for drawing inferences from two independent groups’ metric data <span class="citation" data-cites="kruschkeBayesianEstimationSupersedes2013">(Kruschke 2013)</span>:</p>
<blockquote class="blockquote">
<p>“When data are interpreted in terms of meaningful parameters in a mathematical description, such as the difference of mean parameters in two groups, it is Bayesian analysis that provides complete information about the credible parameter values. Bayesian analysis is also more intuitive than traditional methods of null hypothesis significance testing (e.g., Dienes, 2011).” <span class="citation" data-cites="kruschkeBayesianEstimationSupersedes2013">(Kruschke 2013)</span></p>
</blockquote>
<p>In that article (<em>“Bayesian estimation supersedes the t-test”</em>) <span class="citation" data-cites="kruschkeBayesianEstimationSupersedes2013">Kruschke (2013)</span> provided clear and well-reasoned arguments favoring Bayesian parameter estimation over null hypothesis significance testing in the context of comparing two groups, a situation which is usually dealt with a t-test. It also introduced a “robust” model for comparing two groups, which modeled the data as t-distributed, instead of normal. The article provided R code for running the estimation procedures, which could be downloaded from the <a href="http://www.indiana.edu/~kruschke/BEST/">author’s website</a> or <a href="https://cran.r-project.org/package=BEST">as an R package</a>.</p>
<p>The R code and programs work well for this specific application (estimating the robust model for one or two groups’ metric data). However, modifying the code to handle more complicated situations is not easy, and the underlying estimation algorithms don’t necessarily scale up to handle more complicated situations. Therefore, in this blog post I’ll introduce easy to use, free, open-source, state-of-the-art computer programs for Bayesian estimation, in the context of comparing two groups’ metric (continuous) data. The programs are available for the R programming language—so make sure you are familiar with R basics (e.g.&nbsp;<a href="http://blog.efpsa.org/2016/12/05/introduction-to-data-analysis-using-r/">here</a>). I provide R code for t-tests and Bayesian estimation in R using the R package <a href="https://cran.r-project.org/package=brms">brms</a>, which provides a concise front-end layer to <a href="http://mc-stan.org/">Stan</a>.</p>
<p>These programs supersede many older Bayesian inference programs because they are easy to use, fast, and are able to handle models with thousands of parameters. Learning to implement basic analyses such as t-tests, and Kruschke’s robust model, with these programs is very useful because you’ll then be able to do Bayesian statistics in practice, and will be prepared to understand and implement more complex models.</p>
<p>Understanding the results of Bayesian estimation requires some knowledge of Bayesian statistics, of course, but since I cannot cover everything in this one post, I refer readers to excellent books on the topic: <span class="citation" data-cites="mcelreathStatisticalRethinkingBayesian2020">McElreath (2020)</span>, <span class="citation" data-cites="kruschkeDoingBayesianData2014">Kruschke (2014)</span>, <span class="citation" data-cites="gelmanBayesianDataAnalysis2013">Gelman et al. (2013)</span>.</p>
<p>First, I’ll introduce the basic t-test in some detail, and then focus on understanding them as specific instantiations of <em>linear models</em>. If that sounds familiar, skip ahead to Bayesian Estimation of the t-test, where I introduce the <strong>brms</strong> package for estimating models using Bayesian methods. Following that, we’ll use “distributional regression” to obtain Bayesian estimates of the unequal variances t-test model. Finally, we’ll learn how to estimate the robust unequal variances model using brms.</p>
<p>We will use the following R packages:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(knitr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(broom)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
</section>
<section id="the-t-in-a-t-test" class="level2">
<h2 class="anchored" data-anchor-id="the-t-in-a-t-test">The t in a t-test</h2>
<p>We’ll begin with t-tests, using example data from Kruschke’s paper (p.&nbsp;577):</p>
<blockquote class="blockquote">
<p>“Consider data from two groups of people who take an IQ test. Group 1 (N1=47) consumes a “smart drug,” and Group 2 (N2=42) is a control group that consumes a placebo.”</p>
</blockquote>
<p>These data are visualized as histograms, below:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-01-02-how-to-compare-two-groups-with-robust-bayesian-estimation-using-r-stan-and-brms/index_files/figure-html/dataplot1-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>Histograms of the two groups’ IQ scores.</figcaption>
</figure>
</div>
</div>
</div>
<section id="equal-variances-t-test" class="level3">
<h3 class="anchored" data-anchor-id="equal-variances-t-test">Equal variances t-test</h3>
<p>These two groups’ IQ scores could be compared with a simple <strong>equal variances t-test</strong> (which you shouldn’t use; <a href="https://daniellakens.blogspot.com/2015/01/always-use-welchs-t-test-instead-of.html">Lakens, 2015</a>), also known as Student’s t-test.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(IQ <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var.equal =</span> T)</span>
<span id="cb2-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb2-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  Two Sample t-test</span></span>
<span id="cb2-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb2-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## data:  IQ by Group</span></span>
<span id="cb2-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## t = -1.5587, df = 87, p-value = 0.1227</span></span>
<span id="cb2-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## alternative hypothesis: true difference in means between group Control and group Treatment is not equal to 0</span></span>
<span id="cb2-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 95 percent confidence interval:</span></span>
<span id="cb2-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  -3.544155  0.428653</span></span>
<span id="cb2-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## sample estimates:</span></span>
<span id="cb2-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   mean in group Control mean in group Treatment </span></span>
<span id="cb2-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                100.3571                101.9149</span></span></code></pre></div>
</div>
<p>We interpret the t-test in terms of the observed t-value, and whether it exceeds the critical t-value. The critical t-value, in turn, is defined as the extreme <img src="https://latex.codecogs.com/png.latex?%5Calpha%20/%202"> percentiles of a t-distribution with the given degrees of freedom.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2017-01-02-how-to-compare-two-groups-with-robust-bayesian-estimation-using-r-stan-and-brms/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="384"></p>
<figcaption>t distribution with 87 degrees of freedom, and observed t-value. The dashed vertical lines indicate the extreme 2.5 percentiles. We would reject the null hypothesis of no difference if the observed t-value exceeded these percentiles.</figcaption>
</figure>
</div>
</div>
</div>
<p>The test results in an observed t-value of 1.56, which is not far enough in the tails of a t-distribution with 87 degrees of freedom to warrant rejecting the null hypothesis (given that we are using <img src="https://latex.codecogs.com/png.latex?%5Calpha"> = .05, which may or may not be an entirely brilliant idea).</p>
</section>
<section id="unequal-variances-t-test" class="level3">
<h3 class="anchored" data-anchor-id="unequal-variances-t-test">Unequal variances t-test</h3>
<p>Next, we’ll run the more appropriate, <strong>unequal variances t-test</strong> (also known as Welch’s t-test), which R gives by default:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(IQ <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var.equal =</span> F)</span>
<span id="cb3-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb3-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  Welch Two Sample t-test</span></span>
<span id="cb3-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb3-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## data:  IQ by Group</span></span>
<span id="cb3-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## t = -1.6222, df = 63.039, p-value = 0.1098</span></span>
<span id="cb3-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## alternative hypothesis: true difference in means between group Control and group Treatment is not equal to 0</span></span>
<span id="cb3-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 95 percent confidence interval:</span></span>
<span id="cb3-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  -3.4766863  0.3611848</span></span>
<span id="cb3-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## sample estimates:</span></span>
<span id="cb3-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   mean in group Control mean in group Treatment </span></span>
<span id="cb3-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                100.3571                101.9149</span></span></code></pre></div>
</div>
<p>Note that while R gives Welch’s t-test by default, SPSS gives both. If you’re using SPSS, make sure to report the Welch’s test results, instead of the equal variances test. Here, the conclusion with respect to rejecting the null hypothesis of equal means is the same. However, notice that the results are numerically different, as they should, because these two t-tests refer to different models.</p>
<p>It is of course up to you, as a researcher, to decide whether you assume equal variances or not. But note that we almost always allow the means to be different (that’s the whole point of the test, really), while many treatments may just as well have an effect on the variances.</p>
<p>The first take-home message from today is that there are actually two t-tests, each associated with a different statistical model. And to make clear what the difference is, we must acquaint ourselves with the models.</p>
</section>
<section id="describing-the-models-underlying-the-t-tests" class="level3">
<h3 class="anchored" data-anchor-id="describing-the-models-underlying-the-t-tests">Describing the model(s) underlying the t-test(s)</h3>
<p>We don’t often think of t-<em>tests</em> (and ANOVAs) as <em>models</em>, but it turns out that they are just linear models disguised as “tests” (see <a href="http://www.sbirc.ed.ac.uk/cyril/SPM-course/Talks/2013/1-GLM-CP.pdf">here</a>, <a href="https://lindeloev.github.io/tests-as-linear/">here</a>, and <a href="https://stats.stackexchange.com/questions/59047/how-are-regression-the-t-test-and-the-anova-all-versions-of-the-general-linear">here</a>). Recently, there has been a tremendous push for model/parameter estimation, instead of null hypothesis significance testing <span class="citation" data-cites="gigerenzerMindlessStatistics2004 cummingNewStatisticsWhy2014 kruschkeDoingBayesianData2014">(Gigerenzer 2004; Cumming 2014; Kruschke 2014)</span>, so we will benefit from thinking about t-tests as linear models. Doing so will facilitate seamlessly expanding our models to handle more complicated situations.</p>
<p>The equal variances t-test models metric data with three parameters: Mean for group A, mean for group B, and one shared standard deviation (i.e.&nbsp;the assumption that the standard deviations are equal between the two groups.)</p>
<p>We call the metric outcome variable (IQ scores in our example) <img src="https://latex.codecogs.com/png.latex?y_%7Bik%7D">, where <img src="https://latex.codecogs.com/png.latex?i"> is a subscript indicating the <img src="https://latex.codecogs.com/png.latex?i%5E%7Bth%7D"> datum, and <img src="https://latex.codecogs.com/png.latex?k"> indicates the <img src="https://latex.codecogs.com/png.latex?k%5E%7Bth%7D"> group. So <img src="https://latex.codecogs.com/png.latex?y_%7B19,%201%7D"> would be the 19th datum, belonging to group 1. Then we specify that <img src="https://latex.codecogs.com/png.latex?y_%7Bik%7D"> are normally distributed, <img src="https://latex.codecogs.com/png.latex?N(%5Cmu_%7Bk%7D,%20%5Csigma)">, where <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7Bk%7D"> indicates the mean of group <img src="https://latex.codecogs.com/png.latex?k">, and <img src="https://latex.codecogs.com/png.latex?%5Csigma"> the common standard deviation.</p>
<p><img src="https://latex.codecogs.com/png.latex?y_%7Bik%7D%20%5Csim%20N(%5Cmu_%7Bk%7D,%20%5Csigma%5E2)"></p>
<p>Read the formula as “Y is normally distributed with mean <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7Bk%7D"> (mu), and standard deviation <img src="https://latex.codecogs.com/png.latex?%5Csigma"> (sigma)”. Note that the standard deviation <img src="https://latex.codecogs.com/png.latex?%5Csigma"> doesn’t have any subscripts: we assume it is the same for the groups.</p>
<p>The means for groups 0 and 1 are simply <img src="https://latex.codecogs.com/png.latex?%5Cmu_0"> and <img src="https://latex.codecogs.com/png.latex?%5Cmu_1">, respectively, and their difference (let’s call it <img src="https://latex.codecogs.com/png.latex?d">) is <img src="https://latex.codecogs.com/png.latex?d%20=%20%5Cmu_0%20-%20%5Cmu_1">. The 95% CI for <img src="https://latex.codecogs.com/png.latex?d"> is given in the t-test output, and we can tell that it differs from the one given by Welch’s t-test.</p>
<p>It is unsurprising, then, that if we use a different model (the <a href="https://daniellakens.blogspot.com/2015/01/always-use-welchs-t-test-instead-of.html">more appropriate unequal variances model</a>), our inferences may be different. Welch’s t-test is the same as Student’s, except that now we assume (and subsequently estimate) a unique standard deviation <img src="https://latex.codecogs.com/png.latex?%5Csigma_%7Bk%7D"> for both groups.</p>
<p><img src="https://latex.codecogs.com/png.latex?y_%7Bik%7D%20%5Csim%20N(%5Cmu_%7Bk%7D,%20%5Csigma_%7Bk%7D%5E2)"></p>
<p>This model makes a lot of sense, because rarely are we in a situation to <em>a priori</em> decide that the variance of scores in Group A is equal to the variance of scores in Group B. If you use the equal variances t-test, you should be prepared to justify and defend this assumption. (Deciding between models—such as between these two t-tests—is one way in which our prior information enters and influences data analysis.)</p>
<p>Armed with this knowledge, we can now see that “conducting a t-test” can be understood as estimating one of these two models. By estimating the model, we obtain t-values, degrees of freedom, and consequently, <a href="http://fivethirtyeight.com/features/not-even-scientists-can-easily-explain-p-values/">p-values</a>.</p>
<p>However, for the models described here, it can be easier to think of the t-test as a specific type of the <strong>general linear model</strong>. We can re-write the t-test in an equivalent way, but instead have a specific parameter for the difference in means by writing it as a linear model. The equal variance model can be written as</p>
<p><img src="https://latex.codecogs.com/png.latex?y_%7Bik%7D%20%5Csim%20N(%5Cmu_%7Bk%7D,%20%5Csigma%5E2)"> <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7Bk%7D%20=%20%5Cbeta_0%20+%20%5Cbeta_1%20Group_%7Bik%7D"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?%5Csigma"> is just as before, but we now model the mean with an intercept (control group’s mean, <img src="https://latex.codecogs.com/png.latex?%5Cbeta_0">) and the effect of the treatment (<img src="https://latex.codecogs.com/png.latex?%5Cbeta_1">). With this model, <img src="https://latex.codecogs.com/png.latex?%5Cbeta_1"> directly tells us the estimated difference in the two groups. And because it is a parameter in the model, it has an associated standard error, t-value, degrees of freedom, and a p-value. The model can be estimated in R with the following line of code:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">olsmod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(IQ <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span></code></pre></div>
</div>
<p>The key input here is a model formula, which in R is specified as <code>outcome ~ predictor</code> (<code>DV ~ IV</code>). Using the <code>lm()</code> function, we estimated a linear model predicting <code>IQ</code> from an intercept (automatically included) and a Group parameter. I called this object <code>olsmod</code> for Ordinary Least Squares Model.</p>
<p>R has it’s own model formula syntax, which is well worth learning. The formula in the previous model, <code>IQ ~ Group</code> means that we want to regress IQ on an intercept (which is implicitly included), and group (<code>Group</code>). Besides the formula, we only need to provide the data, which is contained in <code>d</code>.</p>
<p>You can verify that the results are identical to the equal variances t-test above.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(olsmod)</span>
<span id="cb5-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb5-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Call:</span></span>
<span id="cb5-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## lm(formula = IQ ~ Group, data = d)</span></span>
<span id="cb5-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb5-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Residuals:</span></span>
<span id="cb5-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##      Min       1Q   Median       3Q      Max </span></span>
<span id="cb5-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## -19.9149  -0.9149   0.0851   1.0851  22.0851 </span></span>
<span id="cb5-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb5-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Coefficients:</span></span>
<span id="cb5-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                Estimate Std. Error t value Pr(&gt;|t|)    </span></span>
<span id="cb5-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## (Intercept)    100.3571     0.7263 138.184   &lt;2e-16 ***</span></span>
<span id="cb5-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## GroupTreatment   1.5578     0.9994   1.559    0.123    </span></span>
<span id="cb5-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ---</span></span>
<span id="cb5-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</span></span>
<span id="cb5-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb5-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Residual standard error: 4.707 on 87 degrees of freedom</span></span>
<span id="cb5-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Multiple R-squared:  0.02717,    Adjusted R-squared:  0.01599 </span></span>
<span id="cb5-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## F-statistic:  2.43 on 1 and 87 DF,  p-value: 0.1227</span></span></code></pre></div>
</div>
<p>Focus on the <code>GroupTreatment</code> row in the estimated coefficients. <code>Estimate</code> is the point estimate (best guess) of the difference in means. <code>t value</code> is the observed t-value (identical to what <code>t.test()</code> reported), and the p-value (<code>Pr(&gt;|t|)</code>) matches as well. The <code>(Intercept)</code> row refers to <img src="https://latex.codecogs.com/png.latex?%5Cbeta_0">, which is the control group’s mean.</p>
<p>This way of thinking about the model, where we have parameters for one group’s mean, and the effect of the other group, facilitates focusing on the important parameter, the difference, instead of individual means. However, you can of course compute the difference from the means, or the means from one mean and a difference.</p>
</section>
</section>
<section id="bayesian-estimation-of-the-t-test" class="level2">
<h2 class="anchored" data-anchor-id="bayesian-estimation-of-the-t-test">Bayesian estimation of the t-test</h2>
<section id="equal-variances-model" class="level3">
<h3 class="anchored" data-anchor-id="equal-variances-model">Equal variances model</h3>
<p>Next, I’ll illustrate how to estimate the equal variances t-test using Bayesian methods.</p>
<p>Estimating this model with R, thanks to the Stan and brms teams, is as easy as the linear regression model we ran above. The most important function in the brms package is <code>brm()</code>, for Bayesian Regression Model(ing). The user needs only to input a model formula, just as above, and a data frame that contains the variables specified in the formula. <code>brm()</code> then translates the model into Stan language, and asks Stan to compile the model into C++ and draw samples from the posterior distribution. The result is an R object with the estimated results. We run the model and save the results to <code>mod_eqvar</code> for equal variances model:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">mod_eqvar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb6-2">  IQ <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Group,</span>
<span id="cb6-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use 4 cores for parallel processing</span></span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iqgroup"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save results into a file</span></span>
<span id="cb6-6">)</span></code></pre></div>
</div>
<p>The results can be viewed with <code>summary()</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(mod_eqvar)</span>
<span id="cb7-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  Family: gaussian </span></span>
<span id="cb7-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Links: mu = identity; sigma = identity </span></span>
<span id="cb7-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Formula: IQ ~ Group </span></span>
<span id="cb7-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    Data: d (Number of observations: 89) </span></span>
<span id="cb7-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;</span></span>
<span id="cb7-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##          total post-warmup draws = 4000</span></span>
<span id="cb7-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb7-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Regression Coefficients:</span></span>
<span id="cb7-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS</span></span>
<span id="cb7-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Intercept        100.36      0.70    98.99   101.76 1.00     3395     2667</span></span>
<span id="cb7-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## GroupTreatment     1.52      1.02    -0.48     3.49 1.00     3651     2829</span></span>
<span id="cb7-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb7-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Further Distributional Parameters:</span></span>
<span id="cb7-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS</span></span>
<span id="cb7-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## sigma     4.72      0.36     4.09     5.50 1.00     3655     2657</span></span>
<span id="cb7-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb7-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS</span></span>
<span id="cb7-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## and Tail_ESS are effective sample size measures, and Rhat is the potential</span></span>
<span id="cb7-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## scale reduction factor on split chains (at convergence, Rhat = 1).</span></span></code></pre></div>
</div>
<p>Notice that the model contains three parameters, one of which is the shared standard deviation <code>sigma</code>. Compare the output of the Bayesian model to the one estimated with <code>lm()</code> (OLS):</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<table class="table caption-top table-sm table-striped small" data-quarto-postprocess="true">
<caption>Model results, left: OLS, right: brms.</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">term</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">estimate</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">std.error</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">brms</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Estimate</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Est.Error</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">(Intercept)</td>
<td style="text-align: right;">100.36</td>
<td style="text-align: right;">0.73</td>
<td style="text-align: left;">Intercept</td>
<td style="text-align: right;">100.36</td>
<td style="text-align: right;">0.70</td>
</tr>
<tr class="even">
<td style="text-align: left;">GroupTreatment</td>
<td style="text-align: right;">1.56</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: left;">GroupTreatment</td>
<td style="text-align: right;">1.52</td>
<td style="text-align: right;">1.02</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>The point estimates (posterior means in the Bayesian model) and standard errors (SD of the respective posterior distribution) are pretty much identical.</p>
<p>We now know the models behind t-tests, and how to estimate the equal variances t-test using the <code>t.test()</code>, <code>lm()</code>, and <code>brm()</code> functions. We also know how to run Welch’s t-test using <code>t.test()</code>. However, estimating the general linear model version of the unequal variances t-test model is slightly more complicated, because it involves specifying predictors for <img src="https://latex.codecogs.com/png.latex?%5Csigma">, the standard deviation parameter.</p>
</section>
<section id="unequal-variances-model" class="level3">
<h3 class="anchored" data-anchor-id="unequal-variances-model">Unequal variances model</h3>
<p>We only need a small adjustment to the equal variances model to specify the unequal variances model:</p>
<p><img src="https://latex.codecogs.com/png.latex?y_%7Bik%7D%20%5Csim%20N(%5Cmu_%7Bk%7D,%20%5Csigma_%7Bk%7D)"> <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7Bk%7D%20=%20%5Cbeta_0%20+%20%5Cbeta_1%20Group_%7Bik%7D"></p>
<p>Notice that we now have subscripts for <img src="https://latex.codecogs.com/png.latex?%5Csigma">, denoting that it varies between groups. In fact, we’ll write out a linear model for the standard deviation parameter.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Csigma_%7Bk%7D%20=%20%5Cgamma_0%20+%20%5Cgamma_1%20Group_%7Bik%7D"></p>
<p>The model now includes, instead of a common <img src="https://latex.codecogs.com/png.latex?%5Csigma">, one parameter for Group 0’s standard deviation <img src="https://latex.codecogs.com/png.latex?%5Cgamma_0"> (gamma), and one for the effect of Group 1 on the standard deviation <img src="https://latex.codecogs.com/png.latex?%5Cgamma_1">, such that group 1’s standard deviation is <img src="https://latex.codecogs.com/png.latex?%5Cgamma_0%20+%20%5Cgamma_1">. Therefore, we have 4 free parameters, two means and two standard deviations. (The full specification would include prior distributions for all the parameters, but that topic is outside of the scope of this post.) <code>brm()</code> takes more complicated models by wrapping them inside <code>bf()</code> (short for <code>brmsformula()</code>), which is subsequently entered as the first argument to <code>brm()</code>.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">uneq_var_frm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(IQ <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Group, sigma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Group)</span></code></pre></div>
</div>
<p>You can see that the formula regresses IQ on Group, such that we’ll have an intercept (implicitly included), and an effect of Group 1. We also model the standard deviation sigma on Group.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">mod_uneqvar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb9-2">  uneq_var_frm,</span>
<span id="cb9-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb9-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb9-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iqgroup-uv"</span></span>
<span id="cb9-6">)</span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<pre><code>##  Family: gaussian 
##   Links: mu = identity; sigma = log 
## Formula: IQ ~ Group 
##          sigma ~ Group
##    Data: d (Number of observations: 89) 
##   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
##          total post-warmup draws = 4000
## 
## Regression Coefficients:
##                      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
## Intercept              100.35      0.39    99.57   101.14 1.00     5172     3045
## sigma_Intercept          0.94      0.11     0.73     1.16 1.00     3646     2566
## GroupTreatment           1.55      0.97    -0.40     3.42 1.00     2998     2637
## sigma_GroupTreatment     0.87      0.15     0.56     1.16 1.00     3707     2527
## 
## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
## and Tail_ESS are effective sample size measures, and Rhat is the potential
## scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
<p>The model’s output contains our 4 parameters. <code>Intercept</code> is the mean for group 0, <code>Group 1</code> is the “effect of group 1”. The <code>sigma_Intercept</code> is the standard deviation of Group 0, <code>sigma_Group</code> is the effect of group 1 on the standard deviation (the SD of Group 1 is <code>sigma_Intercept</code> + <code>sigma_Group</code>). The sigmas are implicitly modeled through a log-link (because they must be positive). To convert them back to the scale of the data, they need to be exponentiated. After taking the exponents of the sigmas, the results look like this:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<table class="table caption-top table-sm table-striped small" data-quarto-postprocess="true">
<caption>Posterior summary after transformation</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Parameter</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Estimate</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Est.Error</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Q2.5</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Q97.5</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Intercept</td>
<td style="text-align: right;">100.35</td>
<td style="text-align: right;">0.39</td>
<td style="text-align: right;">99.57</td>
<td style="text-align: right;">101.14</td>
</tr>
<tr class="even">
<td style="text-align: left;">sigma_Intercept</td>
<td style="text-align: right;">2.57</td>
<td style="text-align: right;">0.29</td>
<td style="text-align: right;">2.07</td>
<td style="text-align: right;">3.20</td>
</tr>
<tr class="odd">
<td style="text-align: left;">GroupTreatment</td>
<td style="text-align: right;">1.55</td>
<td style="text-align: right;">0.97</td>
<td style="text-align: right;">-0.40</td>
<td style="text-align: right;">3.42</td>
</tr>
<tr class="even">
<td style="text-align: left;">sigma_GroupTreatment</td>
<td style="text-align: right;">2.41</td>
<td style="text-align: right;">0.36</td>
<td style="text-align: right;">1.76</td>
<td style="text-align: right;">3.18</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>Keep in mind that the parameters refer to Group 0’s mean (Intercept) and SD (sigma), and the difference between groups in those values (Group) and (sigma_Group). We now have fully Bayesian estimates of the 4 parameters of the unequal variances t-test model. Finally, let’s move on to the “Robust Bayesian Estimation” model.</p>
</section>
</section>
<section id="robust-bayesian-estimation" class="level2">
<h2 class="anchored" data-anchor-id="robust-bayesian-estimation">Robust Bayesian Estimation</h2>
<p>Kruschke’s robust model is a comparison of two groups, using five parameters: One mean for each group, one standard deviation for each group, just as in the unequal variances model above. The fifth parameter is a “normality” parameter, <img src="https://latex.codecogs.com/png.latex?%5Cnu"> (nu), which means that we are now using a t-distribution to model the data. Using a t-distribution to model the data, instead of a Gaussian, means that the model is less sensitive to extreme values. Here’s what the model looks like:</p>
<p><img src="https://latex.codecogs.com/png.latex?y_%7Bik%7D%20%5Csim%20T(%5Cnu,%20%5Cmu_%7Bk%7D,%20%5Csigma_%7Bk%7D)"></p>
<p>Read the above formula as “Y are random draws from a t-distribution with ‘normality’ parameter <img src="https://latex.codecogs.com/png.latex?%5Cnu">, mean <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7Bk%7D">, and standard deviation <img src="https://latex.codecogs.com/png.latex?%5Csigma_%7Bk%7D">”. We have linear models for the means and standard deviations, as above.</p>
<p>This model, as you can see, is almost identical to the unequal variances t-test, but instead uses a t distribution (we assume data are t-distributed), and includes the normality parameter. Using <code>brm()</code> we can still use the unequal variances model, but have to specify the t-distribution. We do this by specifying the <code>family</code> argument to be <code>student</code> (as in Student’s t)</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">mod_robust <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(</span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(IQ <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Group, sigma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Group),</span>
<span id="cb11-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> student,</span>
<span id="cb11-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb11-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb11-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iqgroup-robust"</span></span>
<span id="cb11-7">)</span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<pre><code>##  Family: student 
##   Links: mu = identity; sigma = log; nu = identity 
## Formula: IQ ~ Group 
##          sigma ~ Group
##    Data: d (Number of observations: 89) 
##   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
##          total post-warmup draws = 4000
## 
## Regression Coefficients:
##                      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
## Intercept              100.52      0.21   100.11   100.94 1.00     4711     2906
## sigma_Intercept          0.00      0.19    -0.38     0.37 1.00     3962     3193
## GroupTreatment           1.04      0.43     0.20     1.89 1.00     2950     2679
## sigma_GroupTreatment     0.67      0.25     0.15     1.14 1.00     4138     2949
## 
## Further Distributional Parameters:
##    Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
## nu     1.85      0.48     1.13     2.99 1.00     2540     1537
## 
## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
## and Tail_ESS are effective sample size measures, and Rhat is the potential
## scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
<p>You can compare the results to those in Kruschke’s paper (2013, p.578) to verify that they are nearly identical. There are small discrepancies because of limited number of posterior samples, and because the paper reported posterior modes whereas we focused on means.</p>
<p>Finally, here is how to estimate the model using the original code (Kruschke &amp; Meredith, 2015):</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(BEST)</span>
<span id="cb13-2">BEST <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BESTmcmc</span>(group_0, group_1)</span></code></pre></div>
</div>
<p>I didn’t actually run that code because after numerous attempts, I was unable to install the rjags package that BEST depends on.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Well, that ended up much longer than what I intended. The aim was both to illustrate the ease of Bayesian modeling in R using brms, and highlight the fact that we can easily move from simple t-tests to more complex (and possibly better) models.</p>
<p>If you’ve followed through, you should be able to conduct Student’s (equal variances) and Welch’s (unequal variances) t-tests in R, and to think about those tests as instantiations of general linear models. Further, you should be able to estimate these models using Bayesian methods.</p>
<p>You should now also be familiar with Kruschke’s robust model for comparing two groups’ metric data, and be able to implement it a few lines of R code. This model found credible differences between two groups, although the frequentist t-tests and models reported p-values well above .05. That should be motivation enough to try robust (Bayesian) models on your own data.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-cummingNewStatisticsWhy2014" class="csl-entry">
Cumming, Geoff. 2014. <span>“The <span>New Statistics Why</span> and <span>How</span>.”</span> <em>Psychological Science</em> 25 (1): 7–29. <a href="https://doi.org/10.1177/0956797613504966">https://doi.org/10.1177/0956797613504966</a>.
</div>
<div id="ref-gelmanBayesianDataAnalysis2013" class="csl-entry">
Gelman, Andrew, John B. Carlin, Hal S. Stern, David B. Dunson, Aki Vehtari, and Donald B. Rubin. 2013. <em>Bayesian <span>Data Analysis</span>, <span>Third Edition</span></em>. <span>Boca Raton</span>: <span>Chapman and Hall/CRC</span>.
</div>
<div id="ref-gigerenzerMindlessStatistics2004" class="csl-entry">
Gigerenzer, Gerd. 2004. <span>“Mindless Statistics.”</span> <em>The Journal of Socio-Economics</em>, Statistical <span>Significance</span>, 33 (5): 587–606. <a href="https://doi.org/10.1016/j.socec.2004.09.033">https://doi.org/10.1016/j.socec.2004.09.033</a>.
</div>
<div id="ref-kruschkeBayesianEstimationSupersedes2013" class="csl-entry">
Kruschke, John K. 2013. <span>“Bayesian Estimation Supersedes the t Test.”</span> <em>Journal of Experimental Psychology: General</em> 142 (2): 573–603. <a href="https://doi.org/10.1037/a0029146">https://doi.org/10.1037/a0029146</a>.
</div>
<div id="ref-kruschkeDoingBayesianData2014" class="csl-entry">
———. 2014. <em>Doing <span>Bayesian Data Analysis</span>: <span>A Tutorial Introduction</span> with <span>R</span></em>. 2nd Edition. <span>Burlington, MA</span>: <span>Academic Press</span>.
</div>
<div id="ref-mcelreathStatisticalRethinkingBayesian2020" class="csl-entry">
McElreath, Richard. 2020. <em>Statistical Rethinking: A <span>Bayesian</span> Course with Examples in <span>R</span> and <span>Stan</span></em>. Second. <span>CRC</span> Texts in Statistical Science. <span>Boca Raton</span>: <span>Taylor and Francis, CRC Press</span>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2017,
  author = {Vuorre, Matti},
  title = {How to {Compare} {Two} {Groups} with {Robust} {Bayesian}
    {Estimation} in {R}},
  date = {2017-01-02},
  url = {https://vuorre.com/posts/2017-01-02-how-to-compare-two-groups-with-robust-bayesian-estimation-using-r-stan-and-brms/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2017" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2017. <span>“How to Compare Two Groups with Robust
Bayesian Estimation in R.”</span> January 2, 2017. <a href="https://vuorre.com/posts/2017-01-02-how-to-compare-two-groups-with-robust-bayesian-estimation-using-r-stan-and-brms/">https://vuorre.com/posts/2017-01-02-how-to-compare-two-groups-with-robust-bayesian-estimation-using-r-stan-and-brms/</a>.
</div></div></section></div> ]]></description>
  <category>statistics</category>
  <category>tutorial</category>
  <category>R</category>
  <category>brms</category>
  <guid>https://vuorre.com/posts/2017-01-02-how-to-compare-two-groups-with-robust-bayesian-estimation-using-r-stan-and-brms/</guid>
  <pubDate>Sun, 01 Jan 2017 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/2017-01-02-how-to-compare-two-groups-with-robust-bayesian-estimation-using-r-stan-and-brms/index_files/figure-html/dataplot1-1.png" medium="image" type="image/png" height="66" width="144"/>
</item>
<item>
  <title>How to arrange ggplot2 panel plots</title>
  <dc:creator>Matti Vuorre</dc:creator>
  <link>https://vuorre.com/posts/2016-12-06-order-ggplot-panel-plots/</link>
  <description><![CDATA[ 
<script id="quarto-html-before-body" type="application/javascript">
    const toggleBodyColorMode = (bsSheetEl) => {
      const mode = bsSheetEl.getAttribute("data-mode");
      const bodyEl = window.document.querySelector("body");
      if (mode === "dark") {
        bodyEl.classList.add("quarto-dark");
        bodyEl.classList.remove("quarto-light");
      } else {
        bodyEl.classList.add("quarto-light");
        bodyEl.classList.remove("quarto-dark");
      }
    }
    const toggleBodyColorPrimary = () => {
      const bsSheetEl = window.document.querySelector("link#quarto-bootstrap:not([rel=disabled-stylesheet])");
      if (bsSheetEl) {
        toggleBodyColorMode(bsSheetEl);
      }
    }
    toggleBodyColorPrimary();
    const toggleColorMode = (alternate) => {
      // Switch the stylesheets
      const primaryStylesheets = window.document.querySelectorAll('link.quarto-color-scheme:not(.quarto-color-alternate)');
      const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');
      manageTransitions('#quarto-margin-sidebar .nav-link', false);
      if (alternate) {
        disableStylesheet(primaryStylesheets)
        enableStylesheet(alternateStylesheets);
        for (const sheetNode of alternateStylesheets) {
          if (sheetNode.id === "quarto-bootstrap") {
            toggleBodyColorMode(sheetNode);
          }
        }
      } else {
        disableStylesheet(alternateStylesheets);
        enableStylesheet(primaryStylesheets)
        toggleBodyColorPrimary();
      }
      manageTransitions('#quarto-margin-sidebar .nav-link', true);
      // Switch the toggles
      const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');
      for (let i=0; i < toggles.length; i++) {
        const toggle = toggles[i];
        if (toggle) {
          if (alternate) {
            toggle.classList.add("alternate");
          } else {
            toggle.classList.remove("alternate");
          }
        }
      }
      // Hack to workaround the fact that safari doesn't
      // properly recolor the scrollbar when toggling (#1455)
      if (navigator.userAgent.indexOf('Safari') > 0 && navigator.userAgent.indexOf('Chrome') == -1) {
        manageTransitions("body", false);
        window.scrollTo(0, 1);
        setTimeout(() => {
          window.scrollTo(0, 0);
          manageTransitions("body", true);
        }, 40);
      }
    }
    const disableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        stylesheet.rel = 'disabled-stylesheet';
      }
    }
    const enableStylesheet = (stylesheets) => {
      for (let i=0; i < stylesheets.length; i++) {
        const stylesheet = stylesheets[i];
        if(stylesheet.rel !== 'stylesheet') { // for Chrome, which will still FOUC without this check
          stylesheet.rel = 'stylesheet';
        }
      }
    }
    const manageTransitions = (selector, allowTransitions) => {
      const els = window.document.querySelectorAll(selector);
      for (let i=0; i < els.length; i++) {
        const el = els[i];
        if (allowTransitions) {
          el.classList.remove('notransition');
        } else {
          el.classList.add('notransition');
        }
      }
    }
    const isFileUrl = () => {
      return window.location.protocol === 'file:';
    }
    const hasAlternateSentinel = () => {
      let styleSentinel = getColorSchemeSentinel();
      if (styleSentinel !== null) {
        return styleSentinel === "alternate";
      } else {
        return false;
      }
    }
    const setStyleSentinel = (alternate) => {
      const value = alternate ? "alternate" : "default";
      if (!isFileUrl()) {
        window.localStorage.setItem("quarto-color-scheme", value);
      } else {
        localAlternateSentinel = value;
      }
    }
    const getColorSchemeSentinel = () => {
      if (!isFileUrl()) {
        const storageValue = window.localStorage.getItem("quarto-color-scheme");
        return storageValue != null ? storageValue : localAlternateSentinel;
      } else {
        return localAlternateSentinel;
      }
    }
    const darkModeDefault = false;
    let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';
    // Dark / light mode switch
    window.quartoToggleColorScheme = () => {
      // Read the current dark / light value
      let toAlternate = !hasAlternateSentinel();
      toggleColorMode(toAlternate);
      setStyleSentinel(toAlternate);
      toggleGiscusIfUsed(toAlternate, darkModeDefault);
    };
    // Switch to dark mode if need be
    if (hasAlternateSentinel()) {
      toggleColorMode(true);
    } else {
      toggleColorMode(false);
    }
  </script>





<p>Panel plots are a common name for figures showing every person’s (or whatever your sampling unit is) data in their own panel. This plot is sometimes also known as “small multiples”, although that more commonly refers to plots that illustrate interactions. Here, I’ll illustrate how to add information to a panel plot by arranging the panels according to some meaningful value.</p>
<p>Here’s an example of a panel plot, using the <code>sleepstudy</code> data set from the <strong>lme4</strong> package.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(knitr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(sleepstudy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lme4"</span>)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(sleepstudy, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Days, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Reaction)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Subject"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller =</span> label_both)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2016-12-06-order-ggplot-panel-plots/index_files/figure-html/image1-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>On the x-axis is days of sleep deprivation, and y-axis is an aggregate measure of reaction time across a number of cognitive tasks. Reaction time increases as a function of sleep deprivation. But the order of the panels is entirely uninformative, they are simply arranged in increasing order of subject ID number, from top left to bottom right. Subject ID numbers are rarely informative, and we would therefore like to order the panels according to some other fact about the individual participants.</p>
<section id="order-panels-on-mean-value" class="level1">
<h1>Order panels on mean value</h1>
<p>Let’s start by ordering the panels on the participants’ mean reaction time, with the fastest participant in the upper-left panel.</p>
<p>Step 1 is to add the required information to the data frame used in plotting. For a simple mean, we can actually use a shortcut in step 2, so this isn’t required.</p>
<p>Step 2: Convert the variable used to separate the panels into a factor, and order it based on the mean reaction time.</p>
<p>The key here is to use the <code>reorder()</code> function. You’ll first enter the variable that contains the groupings (i.e.&nbsp;the subject ID numbers), and then values that will be used to order the grouping variables. Finally, here you can use a shortcut to base the ordering on a function of the values, such as the mean, by entering it as the third argument.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">sleepstudy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-2">  sleepstudy,</span>
<span id="cb3-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Subject =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(Subject, Reaction, mean)</span>
<span id="cb3-4">)</span></code></pre></div>
</div>
<p>Now if we use <code>Subject</code> to create the subplots, they will be ordered on the mean reaction time. I’ll make the illustration clear by also drawing the person-means with small arrows.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2016-12-06-order-ggplot-panel-plots/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="order-panels-on-other-parameters" class="level1">
<h1>Order panels on other parameters</h1>
<p>It might also be useful to order the panels based on a value from a model, such as the slope of a linear regression. This is especially useful in making the heterogeneity in the sample easier to see. For this, you’ll need to fit a model, grab the subject-specific slopes, order the paneling factor, and plot. I’ll illustrate with a multilevel regression using <strong>lme4</strong>.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 1: Add values to order on into the data frame</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lme4)</span>
<span id="cb4-3">mod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reaction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sleepstudy)</span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a data frame with subject IDs and coefficients</span></span>
<span id="cb4-5">coefs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(mod)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Subject <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Subject"</span>)</span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(coefs) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Subject"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Intercept"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Slope"</span>)</span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join to main data frame by Subject ID</span></span>
<span id="cb4-9">sleepstudy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(sleepstudy, coefs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Subject"</span>)</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 2: Reorder the grouping factor</span></span>
<span id="cb4-12">sleepstudy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb4-13">  sleepstudy,</span>
<span id="cb4-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Subject =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(Subject, Slope)</span>
<span id="cb4-15">)</span></code></pre></div>
</div>
<p>Then, I’ll plot the data also showing the fitted lines from the multilevel model:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://vuorre.com/posts/2016-12-06-order-ggplot-panel-plots/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Hopefully you’ll find this helpful.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{vuorre2016,
  author = {Vuorre, Matti},
  title = {How to Arrange Ggplot2 Panel Plots},
  date = {2016-12-06},
  url = {https://vuorre.com/posts/2016-12-06-order-ggplot-panel-plots/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-vuorre2016" class="csl-entry quarto-appendix-citeas">
Vuorre, Matti. 2016. <span>“How to Arrange Ggplot2 Panel Plots.”</span>
December 6, 2016. <a href="https://vuorre.com/posts/2016-12-06-order-ggplot-panel-plots/">https://vuorre.com/posts/2016-12-06-order-ggplot-panel-plots/</a>.
</div></div></section></div> ]]></description>
  <category>data science</category>
  <category>R</category>
  <category>visualization</category>
  <guid>https://vuorre.com/posts/2016-12-06-order-ggplot-panel-plots/</guid>
  <pubDate>Mon, 05 Dec 2016 23:00:00 GMT</pubDate>
  <media:content url="https://vuorre.com/posts/2016-12-06-order-ggplot-panel-plots/index_files/figure-html/image1-1.png" medium="image" type="image/png" height="103" width="144"/>
</item>
</channel>
</rss>
